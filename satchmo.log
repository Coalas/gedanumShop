Thu, 15 Mar 2012 20:29:43 root         INFO     Satchmo Started
Thu, 15 Mar 2012 20:29:43 root         INFO     Satchmo Started
Thu, 15 Mar 2012 12:29:44 configuration DEBUG    Could not load default shipping module configuration: fedex_web_services
Thu, 15 Mar 2012 12:29:44 tiered.config DEBUG    loaded
Thu, 15 Mar 2012 12:29:44 shop.listeners DEBUG    Added default shop listeners
Thu, 15 Mar 2012 12:29:44 satchmo_toolbar DEBUG    Satchmo toolbar ready
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Management command: runserver
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Thu, 15 Mar 2012 12:29:44 django.db.backends DEBUG    (0.006) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:44 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Management command: runserver
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Thu, 15 Mar 2012 12:29:44 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Thu, 15 Mar 2012 12:29:44 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Thu, 15 Mar 2012 12:29:44 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Thu, 15 Mar 2012 12:29:44 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Management command: runserver
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Management command: runserver
Thu, 15 Mar 2012 12:29:44 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Thu, 15 Mar 2012 12:29:44 configuration DEBUG    SettingNotSet: PAYMENT_DOTPAY.CREDITCHOICES
Thu, 15 Mar 2012 12:29:48 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Thu, 15 Mar 2012 12:29:48 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Thu, 15 Mar 2012 12:29:49 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ko/workspace/store/../store/static/
Thu, 15 Mar 2012 12:29:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Thu, 15 Mar 2012 12:29:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Thu, 15 Mar 2012 12:29:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Thu, 15 Mar 2012 12:29:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Thu, 15 Mar 2012 12:29:49 payment.urls DEBUG    Found payment processor: DOTPAY, adding urls at ^dotpay/
Thu, 15 Mar 2012 12:29:49 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:49.937955 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:49.937955')
Thu, 15 Mar 2012 12:29:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:49.992768 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:49.992768')
Thu, 15 Mar 2012 12:29:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:50.773240 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:50.773240')
Thu, 15 Mar 2012 12:29:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:51.651404 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:51.651404')
Thu, 15 Mar 2012 12:29:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:54.682488 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:54.682488')
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15 ); args=(True, True, 1, '2012-03-15', '2012-03-15')
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-08 12:29:54.933296 ; args=(u'2012-03-08 12:29:54.933296',)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-14 12:29:54.933346 ; args=(u'2012-03-14 12:29:54.933346',)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-15 11:29:54.933361 ; args=(u'2012-03-15 11:29:54.933361',)
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 15 Mar 2012 12:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-08 ; args=('2012-03-08',)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.001) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.009) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 15 Mar 2012 12:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:56 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:56 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:29:56 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:56 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Thu, 15 Mar 2012 12:29:56 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZmI4Yzc3ODFhNzA5MTEwZmVkMDdmMzI5MWNmODY1MjYzYTJmMDFlODqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-29 12:29:56.752314 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZmI4Yzc3ODFhNzA5MTEwZmVkMDdmMzI5MWNmODY1MjYzYTJmMDFlODqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-29 12:29:56.752314', '1787aa4bf137035436f1b68b61b56895')
Thu, 15 Mar 2012 12:29:57 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:57.035923 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:57.035923')
Thu, 15 Mar 2012 12:29:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:57 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:57.081366 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:57.081366')
Thu, 15 Mar 2012 12:29:57 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:57 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:57.346833 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:57.346833')
Thu, 15 Mar 2012 12:29:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:58.942998 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:58.942998')
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:29:59 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-08 12:29:59.276554 ; args=(u'2012-03-08 12:29:59.276554',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-14 12:29:59.276599 ; args=(u'2012-03-14 12:29:59.276599',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-15 11:29:59.276617 ; args=(u'2012-03-15 11:29:59.276617',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-08 ; args=('2012-03-08',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ODIwM2M5ZDA3ODQ0ZTllZTM1ZjhhMDIzN2Q1NzE1YmJhNWU5MzM2MDqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-29 12:29:59.577962 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ODIwM2M5ZDA3ODQ0ZTllZTM1ZjhhMDIzN2Q1NzE1YmJhNWU5MzM2MDqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-29 12:29:59.577962', '1787aa4bf137035436f1b68b61b56895')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:29:59.916493 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:29:59.916493')
Thu, 15 Mar 2012 12:29:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:30:00.243099 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:30:00.243099')
Thu, 15 Mar 2012 12:30:00 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:30:02.174406 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:30:02.174406')
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:02 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:02 satchmo_store.contact.forms DEBUG    Saving contact info for Jan Kowalski
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" WHERE "contact_contactrole"."key" = Customer ; args=(u'Customer',)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_contact" WHERE "contact_contact"."id" = 4  LIMIT 1; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) UPDATE "contact_contact" SET "title" = , "first_name" = Jan, "last_name" = Kowalski, "user_id" = 1, "role_id" = Customer, "organization_id" = NULL, "dob" = NULL, "email" = coalas@o2.pl, "notes" = , "create_date" = 2012-01-18 WHERE "contact_contact"."id" = 4 ; args=(u'', u'Jan', u'Kowalski', 1, u'Customer', u'coalas@o2.pl', u'', '2012-01-18', 4)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 4)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = True WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, True, 4)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 5)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.003) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, True, False, 5)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:30:02 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = False WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', False, 5)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = True WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', True, 5)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.0000000000, "total" = 1.2300000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.2300000000, "time_stamp" = 2012-03-03 12:14:12.205664, "status" =  WHERE "shop_order"."id" = 1 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.0000000000', u'1.2300000000', u'', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.2300000000', u'2012-03-03 12:14:12.205664', u'', 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.002) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (1) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.0000000000, "total" = 1.2300000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.2300000000, "time_stamp" = 2012-03-03 12:14:12.205664, "status" =  WHERE "shop_order"."id" = 1 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.0000000000', u'1.2300000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.2300000000', u'2012-03-03 12:14:12.205664', u'', 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (1, 81, 1.000000, 1.0000000000, 0.2300000000, 1.0000000000, 0.2300000000, None, False, None); args=(1, 81, u'1.000000', u'1.0000000000', u'0.2300000000', u'1.0000000000', u'0.2300000000', None, False, None)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 1, "product_id" = 81, "quantity" = 1.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 1.0000000000, "tax" = 0.2300000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 1 ; args=(1, 81, u'1.000000', u'1.0000000000', u'0.2300000000', u'1.0000000000', u'0.2300000000', False, u'0E-10', 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 1  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(1, True)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 1  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:03 django.db.backends DEBUG    (0.002) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (2); args=(2,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (1, area, Default, 0.2300000000); args=(1, 'area', u'Default', u'0.2300000000')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (1, area, Shipping, 0E-10); args=(1, 'area', 'Shipping', u'0E-10')
Thu, 15 Mar 2012 12:30:04 satchmo_store.shop.models DEBUG    Order #1, recalc: sub_total=zł 1,00, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,23
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.0000000000, "total" = 1.2300000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.2300000000, "time_stamp" = 2012-03-03 12:14:12.205664, "status" =  WHERE "shop_order"."id" = 1 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.0000000000', u'1.2300000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.2300000000', u'2012-03-03 12:14:12.205664', u'', 1)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZmI4Yzc3ODFhNzA5MTEwZmVkMDdmMzI5MWNmODY1MjYzYTJmMDFlODqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-29 12:30:04.359370 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZmI4Yzc3ODFhNzA5MTEwZmVkMDdmMzI5MWNmODY1MjYzYTJmMDFlODqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-29 12:30:04.359370', '1787aa4bf137035436f1b68b61b56895')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:30:04.448265 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:30:04.448265')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 1.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-15  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('1.00'), '2012-03-15')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 1.00 ); args=(1, Decimal('1.00'))
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Thu, 15 Mar 2012 12:30:04 shipping.Tiered DEBUG    No tiered price found for Carrier: Poczta Polska: total=1.00
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:04 payship      DEBUG    Skipping pay ship, nothing to select for shipping
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.0000000000, "total" = 1.2300000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.2300000000, "time_stamp" = 2012-03-03 12:14:12.205664, "status" =  WHERE "shop_order"."id" = 1 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.0000000000', u'1.2300000000', u'', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.2300000000', u'2012-03-03 12:14:12.205664', u'', 1)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (1) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.0000000000, "total" = 1.2300000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.2300000000, "time_stamp" = 2012-03-03 12:14:12.205664, "status" =  WHERE "shop_order"."id" = 1 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.0000000000', u'1.2300000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.2300000000', u'2012-03-03 12:14:12.205664', u'', 1)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:04 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (1, 81, 1.000000, 1.0000000000, 0.2300000000, 1.0000000000, 0.2300000000, None, False, None); args=(1, 81, u'1.000000', u'1.0000000000', u'0.2300000000', u'1.0000000000', u'0.2300000000', None, False, None)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 1, "product_id" = 81, "quantity" = 1.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 1.0000000000, "tax" = 0.2300000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 1 ; args=(1, 81, u'1.000000', u'1.0000000000', u'0.2300000000', u'1.0000000000', u'0.2300000000', False, u'0E-10', 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 1  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(1, True)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:30:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 1  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (2); args=(2,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (1, area, Default, 0.2300000000); args=(1, 'area', u'Default', u'0.2300000000')
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (1, area, Shipping, 0E-10); args=(1, 'area', 'Shipping', u'0E-10')
Thu, 15 Mar 2012 12:30:05 satchmo_store.shop.models DEBUG    Order #1, recalc: sub_total=zł 1,00, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,23
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.0000000000, "total" = 1.2300000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.2300000000, "time_stamp" = 2012-03-03 12:14:12.205664, "status" =  WHERE "shop_order"."id" = 1 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.0000000000', u'1.2300000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.2300000000', u'2012-03-03 12:14:12.205664', u'', 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 1  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(1, u'DOTPAY')
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 1  AND "shop_orderpendingpayment"."payment" = DOTPAY ) LIMIT 1; args=(1, u'DOTPAY')
Thu, 15 Mar 2012 12:30:05 payment.modules.base DEBUG    Found pending payment: Order Pending Payment #1
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 1  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(1, u'DOTPAY')
Thu, 15 Mar 2012 12:30:05 payment.modules.base DEBUG    Deleting 1 expired pending payment entries for order #1
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 1  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(1, u'DOTPAY')
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."capture_id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."capture_id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) SELECT "payment_creditcarddetail"."id", "payment_creditcarddetail"."orderpayment_id", "payment_creditcarddetail"."credit_type", "payment_creditcarddetail"."display_cc", "payment_creditcarddetail"."encrypted_cc", "payment_creditcarddetail"."expire_month", "payment_creditcarddetail"."expire_year", "payment_creditcarddetail"."card_holder", "payment_creditcarddetail"."start_month", "payment_creditcarddetail"."start_year", "payment_creditcarddetail"."issue_num" FROM "payment_creditcarddetail" WHERE "payment_creditcarddetail"."orderpayment_id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpayment" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (1); args=(1,)
Thu, 15 Mar 2012 12:30:05 payment.modules.base DEBUG    Creating pending DOTPAY payment of 0.00 for Order #1: Jan Kowalski
Thu, 15 Mar 2012 12:30:05 satchmo_store.shop.models DEBUG    Pending Payment - creating linked payment
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id") VALUES (DOTPAY, 0E-10, 2012-03-15 12:30:05.782618, LINKED, None, , 1); args=(u'DOTPAY', u'0E-10', u'2012-03-15 12:30:05.782618', 'LINKED', None, '', 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.002) INSERT INTO "shop_orderpendingpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id", "capture_id") VALUES (DOTPAY, 0E-10, None, None, None, None, 1, 1); args=(u'DOTPAY', u'0E-10', None, None, None, None, 1, 1)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Thu, 15 Mar 2012 12:30:05 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ODIwM2M5ZDA3ODQ0ZTllZTM1ZjhhMDIzN2Q1NzE1YmJhNWU5MzM2MDqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-29 12:30:05.940471 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ODIwM2M5ZDA3ODQ0ZTllZTM1ZjhhMDIzN2Q1NzE1YmJhNWU5MzM2MDqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-29 12:30:05.940471', '1787aa4bf137035436f1b68b61b56895')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:30:06.031108 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:30:06.031108')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Thu, 15 Mar 2012 12:30:06 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-notify_callback
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Thu, 15 Mar 2012 12:30:06 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-success
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Thu, 15 Mar 2012 12:30:06 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-failure
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_FUC ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_FUC')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_FUC ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_FUC')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = confirm ; args=(u'confirm',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-08 12:30:06.225747 ; args=(u'2012-03-08 12:30:06.225747',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-14 12:30:06.225793 ; args=(u'2012-03-14 12:30:06.225793',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-15 11:30:06.225809 ; args=(u'2012-03-15 11:30:06.225809',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-08 ; args=('2012-03-08',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 1  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(1, u'shipping')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 1  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(1, u'shipping')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 1  ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 1  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(1, u'shipping')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 1  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(1, u'shipping')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE ("shop_orderpayment"."order_id" = 1  AND NOT (("shop_orderpayment"."transaction_id" = PENDING  AND "shop_orderpayment"."transaction_id" IS NOT NULL) AND "shop_orderpayment"."transaction_id" IS NOT NULL)); args=(1, 'PENDING')
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = order_details ; args=(u'order_details',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 1  AND "shop_orderauthorization"."complete" = False ); args=(1, False)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Thu, 15 Mar 2012 12:30:06 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZmI4Yzc3ODFhNzA5MTEwZmVkMDdmMzI5MWNmODY1MjYzYTJmMDFlODqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-29 12:30:06.723059 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZmI4Yzc3ODFhNzA5MTEwZmVkMDdmMzI5MWNmODY1MjYzYTJmMDFlODqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-29 12:30:06.723059', '1787aa4bf137035436f1b68b61b56895')
Thu, 15 Mar 2012 12:30:07 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:30:07.016398 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:30:07.016398')
Thu, 15 Mar 2012 12:30:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:30:07 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:30:07.359031 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:30:07.359031')
Thu, 15 Mar 2012 12:30:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:31:19 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:31:19.374724 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:31:19.374724')
Thu, 15 Mar 2012 12:31:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:31:20 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:31:20.267020 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:31:20.267020')
Thu, 15 Mar 2012 12:31:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:32:02 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:32:02.721032 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:32:02.721032')
Thu, 15 Mar 2012 12:32:02 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:32:26 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:32:26.136518 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:32:26.136518')
Thu, 15 Mar 2012 12:32:26 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:32:40 satchmo_utils DEBUG    No url found for DOTPAY_satchmo_checkout-step1
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.008) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.064) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Thu, 15 Mar 2012 12:33:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.008) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-okolicznosciowa-9  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-okolicznosciowa-9', 1)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:33:10 root         DEBUG    subtypes = ()
Thu, 15 Mar 2012 12:33:10 product.views DEBUG    finding product template: ['product/product.html']
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.015) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 81  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(81,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 81  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(81,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('1'))
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:10 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC; args=(81,)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 81  AND "product_productattribute"."languagecode" = pl ); args=(81, 'pl')
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 81  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(81, '')
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Thu, 15 Mar 2012 12:33:10 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Thu, 15 Mar 2012 12:33:14 shop.views.cart DEBUG    FORM: <QueryDict: {u'addcart': [u'Dodaj do koszyka'], u'csrfmiddlewaretoken': [u'7e6c80f568ecb3c3b610ca4b0e02f7b8'], u'productname': [u'kartka-okolicznosciowa-9'], u'quantity': [u'3']}>
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.007) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.001) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."slug" = kartka-okolicznosciowa-9  AND "product_product"."site_id" = 1 ); args=(u'kartka-okolicznosciowa-9', 1)
Thu, 15 Mar 2012 12:33:14 shop.views.cart DEBUG    found product: Kartka Okolicznościowa
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:14 shop.views.cart DEBUG    product kartka-okolicznosciowa-9 is active
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cart" ("site_id", "desc", "date_time_created", "customer_id") VALUES (1, None, 2012-03-15 12:33:14.783910, None); args=(1, None, u'2012-03-15 12:33:14.783910', None)
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."cart_id" = 8  AND "shop_cartitem"."product_id" = 81 ) ORDER BY "shop_cartitem"."id" ASC; args=(8, 81)
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cartitem" ("cart_id", "product_id", "quantity") VALUES (8, 81, 0.000000); args=(8, 81, u'0.000000')
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 11  LIMIT 1; args=(11,)
Thu, 15 Mar 2012 12:33:14 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 8, "product_id" = 81, "quantity" = 3.000000 WHERE "shop_cartitem"."id" = 11 ; args=(8, 81, u'3.000000', 11)
Thu, 15 Mar 2012 12:33:15 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.001) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70 ; args=('213863ca40ea0b19def95c01a03e8f70',)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  LIMIT 1; args=('213863ca40ea0b19def95c01a03e8f70',)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.001) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES (213863ca40ea0b19def95c01a03e8f70, MGIwOWQ5MGM2ZTcwZDRiYmIyMjJlZTMzN2Q5NzU4NDVhNGNhMDQwMDqAAn1xAVUEY2FydHECSwhz
Lg==
, 2012-03-29 12:33:15.007101); args=('213863ca40ea0b19def95c01a03e8f70', 'MGIwOWQ5MGM2ZTcwZDRiYmIyMjJlZTMzN2Q5NzU4NDVhNGNhMDQwMDqAAn1xAVUEY2FydHECSwhz\nLg==\n', u'2012-03-29 12:33:15.007101')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.201176 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.201176')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:15 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:15 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:15 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:15 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.877686 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.877686')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.897033 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.897033')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.915650 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.915650')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.935023 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.935023')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.953826 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.953826')
Thu, 15 Mar 2012 12:33:15 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:15.971290 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:15.971290')
Thu, 15 Mar 2012 12:33:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:16.015385 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:16.015385')
Thu, 15 Mar 2012 12:33:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:16.034130 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:16.034130')
Thu, 15 Mar 2012 12:33:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:16.051628 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:16.051628')
Thu, 15 Mar 2012 12:33:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:16.069091 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:16.069091')
Thu, 15 Mar 2012 12:33:16 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:16.280602 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:16.280602')
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:17.836107 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:17.836107')
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:17 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  LIMIT 1; args=('213863ca40ea0b19def95c01a03e8f70',)
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWE0YWMzYzQ1ZGViMWUzZTU5YmE5ZTE5ZTY0YThkODYyZjg3NWEyMjqAAn1xAShVCnRlc3Rjb29r
aWVxAlUGd29ya2VkcQNVBGNhcnRLCHUu
, "expire_date" = 2012-03-29 12:33:18.237749 WHERE "django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70 ; args=('ZWE0YWMzYzQ1ZGViMWUzZTU5YmE5ZTE5ZTY0YThkODYyZjg3NWEyMjqAAn1xAShVCnRlc3Rjb29r\naWVxAlUGd29ya2VkcQNVBGNhcnRLCHUu\n', u'2012-03-29 12:33:18.237749', '213863ca40ea0b19def95c01a03e8f70')
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:18.478178 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:18.478178')
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:18.507686 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:18.507686')
Thu, 15 Mar 2012 12:33:18 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:18.874179 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:18.874179')
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70  AND "django_session"."expire_date" > 2012-03-15 12:33:30.808440 ); args=('213863ca40ea0b19def95c01a03e8f70', u'2012-03-15 12:33:30.808440')
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = admin ; args=(u'admin',)
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58 ; args=('3dbdce3009ae23714e308f20ffcfca58',)
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.001) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES (3dbdce3009ae23714e308f20ffcfca58, NGM0YTVmN2FhNjYzMmI1OTlkNWYyODA3OTQ3MTdmMmE2MmEwZTFlOTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUEY2FydEsIdS4=
, 2012-03-29 12:33:30.830633); args=('3dbdce3009ae23714e308f20ffcfca58', 'NGM0YTVmN2FhNjYzMmI1OTlkNWYyODA3OTQ3MTdmMmE2MmEwZTFlOTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUEY2FydEsIdS4=\n', u'2012-03-29 12:33:30.830633')
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 213863ca40ea0b19def95c01a03e8f70 ; args=('213863ca40ea0b19def95c01a03e8f70',)
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.001) DELETE FROM "django_session" WHERE "session_key" IN (213863ca40ea0b19def95c01a03e8f70); args=(u'213863ca40ea0b19def95c01a03e8f70',)
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
Thu, 15 Mar 2012 12:33:30 django.db.backends DEBUG    (0.001) UPDATE "auth_user" SET "username" = admin, "first_name" = Jan, "last_name" = Kowalski, "email" = coalas@o2.pl, "password" = sha1$ab5a5$2816098f57028924103a86cdc6b3a25c55a13ad6, "is_staff" = True, "is_active" = True, "is_superuser" = True, "last_login" = 2012-03-15 12:33:30.977839, "date_joined" = 2011-11-15 00:01:35.784407 WHERE "auth_user"."id" = 1 ; args=(u'admin', u'Jan', u'Kowalski', u'coalas@o2.pl', u'sha1$ab5a5$2816098f57028924103a86cdc6b3a25c55a13ad6', True, True, True, u'2012-03-15 12:33:30.977839', u'2011-11-15 00:01:35.784407', 1)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:31 satchmo_store.accounts.views DEBUG    Assigning Cart (id: 8) to u'Jan Kowalski' (id: 4)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cart" WHERE "shop_cart"."id" = 8  LIMIT 1; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) UPDATE "shop_cart" SET "site_id" = 1, "desc" = NULL, "date_time_created" = 2012-03-15 12:33:14.783910, "customer_id" = 4 WHERE "shop_cart"."id" = 8 ; args=(1, u'2012-03-15 12:33:14.783910', 4, 8)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  LIMIT 1; args=('3dbdce3009ae23714e308f20ffcfca58',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = Y2ZhNzdhZjI0M2VkYTNlYmRjN2FiNDRlNjRiNGNhN2RhNmI2ZmQ4YTqAAn1xAShVBmN1c3RJRHEC
SwRVEl9hdXRoX3VzZXJfYmFja2VuZHEDVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1v
ZGVsQmFja2VuZHEEVQp0ZXN0Y29va2llVQZ3b3JrZWRVDV9hdXRoX3VzZXJfaWRxBUsBVQRjYXJ0
Swh1Lg==
, "expire_date" = 2012-03-29 12:33:31.169539 WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58 ; args=('Y2ZhNzdhZjI0M2VkYTNlYmRjN2FiNDRlNjRiNGNhN2RhNmI2ZmQ4YTqAAn1xAShVBmN1c3RJRHEC\nSwRVEl9hdXRoX3VzZXJfYmFja2VuZHEDVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1v\nZGVsQmFja2VuZHEEVQp0ZXN0Y29va2llVQZ3b3JrZWRVDV9hdXRoX3VzZXJfaWRxBUsBVQRjYXJ0\nSwh1Lg==\n', u'2012-03-29 12:33:31.169539', '3dbdce3009ae23714e308f20ffcfca58')
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:31.327104 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:31.327104')
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:31 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-08 12:33:31.634234 ; args=(u'2012-03-08 12:33:31.634234',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-14 12:33:31.634277 ; args=(u'2012-03-14 12:33:31.634277',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-15 11:33:31.634294 ; args=(u'2012-03-15 11:33:31.634294',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-08 ; args=('2012-03-08',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  LIMIT 1; args=('3dbdce3009ae23714e308f20ffcfca58',)
Thu, 15 Mar 2012 12:33:31 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MGZkODczNTZhODkwN2VmY2ZiNGIwN2Y0MDE3MDYxMTc5NDI2NGU5YjqAAn1xAShVBGNhcnRLCFUK
dGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBFUNX2F1dGhfdXNlcl9pZEsBVRJfYXV0aF91c2Vy
X2JhY2tlbmRVKWRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kdS4=
, "expire_date" = 2012-03-29 12:33:31.927132 WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58 ; args=('MGZkODczNTZhODkwN2VmY2ZiNGIwN2Y0MDE3MDYxMTc5NDI2NGU5YjqAAn1xAShVBGNhcnRLCFUK\ndGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBFUNX2F1dGhfdXNlcl9pZEsBVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVKWRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kdS4=\n', u'2012-03-29 12:33:31.927132', '3dbdce3009ae23714e308f20ffcfca58')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.314073 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.314073')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.345281 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.345281')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.368796 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.368796')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.393123 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.393123')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.415049 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.415049')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.438904 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.438904')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.473597 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.473597')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.509645 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.509645')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.535252 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.535252')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.559033 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.559033')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.581559 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.581559')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:32.848035 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:32.848035')
Thu, 15 Mar 2012 12:33:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:36.024681 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:36.024681')
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:36 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-15', '2012-03-15', 81, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:36 satchmo_store.contact.forms DEBUG    Saving contact info for Jan Kowalski
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" WHERE "contact_contactrole"."key" = Customer ; args=(u'Customer',)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_contact" WHERE "contact_contact"."id" = 4  LIMIT 1; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.007) UPDATE "contact_contact" SET "title" = , "first_name" = Jan, "last_name" = Kowalski, "user_id" = 1, "role_id" = Customer, "organization_id" = NULL, "dob" = NULL, "email" = coalas@o2.pl, "notes" = , "create_date" = 2012-01-18 WHERE "contact_contact"."id" = 4 ; args=(u'', u'Jan', u'Kowalski', 1, u'Customer', u'coalas@o2.pl', u'', '2012-01-18', 4)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 4)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.002) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = True WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, True, 4)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.002) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 5)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, True, False, 5)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:36 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = False WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', False, 5)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = True WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', True, 5)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.003) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.002) INSERT INTO "shop_order" ("site_id", "contact_id", "ship_addressee", "ship_street1", "ship_street2", "ship_city", "ship_state", "ship_postal_code", "ship_country", "bill_addressee", "bill_street1", "bill_street2", "bill_city", "bill_state", "bill_postal_code", "bill_country", "notes", "sub_total", "total", "discount_code", "discount", "method", "shipping_description", "shipping_method", "shipping_model", "shipping_cost", "shipping_discount", "tax", "time_stamp", "status") VALUES (1, 4, Jan Kowalski, Toruńska 20, , Gdańsk, , 80-747, PL, Jan Kowalski, Toruńska 20, , Gdańsk, , 80-747, PL, None, 3.0000000000, 0E-10, , None, Online, None, None, None, None, None, 0E-10, 2012-03-15 12:33:37.228031, ); args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', None, u'3.0000000000', u'0E-10', '', None, 'Online', None, None, None, None, None, u'0E-10', u'2012-03-15 12:33:37.228031', '')
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.002) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (2, 81, 3.000000, 1.0000000000, 0.2300000000, 3.0000000000, 0.6900000000, None, False, None); args=(2, 81, u'3.000000', u'1.0000000000', u'0.2300000000', u'3.0000000000', u'0.6900000000', None, False, None)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.002) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 2  LIMIT 1; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 2, "product_id" = 81, "quantity" = 3.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 3.0000000000, "tax" = 0.6900000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 2 ; args=(2, 81, u'3.000000', u'1.0000000000', u'0.2300000000', u'3.0000000000', u'0.6900000000', False, u'0E-10', 2)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 2  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(2, True)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:37 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 2  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (2, area, Default, 0.6900000000); args=(2, 'area', u'Default', u'0.6900000000')
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (2, area, Shipping, 0E-10); args=(2, 'area', 'Shipping', u'0E-10')
Thu, 15 Mar 2012 12:33:37 satchmo_store.shop.models DEBUG    Order #2, recalc: sub_total=zł 3,00, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,69
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 2  LIMIT 1; args=(2,)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.004) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 3.0000000000, "total" = 3.6900000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.6900000000, "time_stamp" = 2012-03-15 12:33:37.228031, "status" =  WHERE "shop_order"."id" = 2 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'3.0000000000', u'3.6900000000', '', u'0E-10', 'Online', u'0E-10', u'0E-10', u'0.6900000000', u'2012-03-15 12:33:37.228031', '', 2)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  LIMIT 1; args=('3dbdce3009ae23714e308f20ffcfca58',)
Thu, 15 Mar 2012 12:33:37 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NGQyYzE4Nzk1M2RjNWU0ZmI4OTgzMmFiY2U2ZDBjZWZhOWRkNzE1NjqAAn1xAShVB29yZGVySURx
AksCVQ1fYXV0aF91c2VyX2lkSwFVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNr
ZW5kVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZFUEY2FydEsIVQZj
dXN0SURLBHUu
, "expire_date" = 2012-03-29 12:33:37.943881 WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58 ; args=('NGQyYzE4Nzk1M2RjNWU0ZmI4OTgzMmFiY2U2ZDBjZWZhOWRkNzE1NjqAAn1xAShVB29yZGVySURx\nAksCVQ1fYXV0aF91c2VyX2lkSwFVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNr\nZW5kVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZFUEY2FydEsIVQZj\ndXN0SURLBHUu\n', u'2012-03-29 12:33:37.943881', '3dbdce3009ae23714e308f20ffcfca58')
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:38.349827 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:38.349827')
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.011) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 3.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-15  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('3.00'), '2012-03-15')
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 3.00 ); args=(1, Decimal('3.00'))
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Thu, 15 Mar 2012 12:33:38 shipping.Tiered DEBUG    No tiered price found for Carrier: Poczta Polska: total=3.00
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:38 payship      DEBUG    Skipping pay ship, nothing to select for shipping
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.008) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 2  LIMIT 1; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 3.0000000000, "total" = 3.6900000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.6900000000, "time_stamp" = 2012-03-15 12:33:37.228031, "status" =  WHERE "shop_order"."id" = 2 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'3.0000000000', u'3.6900000000', u'', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.6900000000', u'2012-03-15 12:33:37.228031', u'', 2)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (2) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:38 django.db.backends DEBUG    (0.003) DELETE FROM "shop_orderitem" WHERE "id" IN (2); args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 2  LIMIT 1; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 3.0000000000, "total" = 3.6900000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.6900000000, "time_stamp" = 2012-03-15 12:33:37.228031, "status" =  WHERE "shop_order"."id" = 2 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'3.0000000000', u'3.6900000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.6900000000', u'2012-03-15 12:33:37.228031', u'', 2)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (2, 81, 3.000000, 1.0000000000, 0.2300000000, 3.0000000000, 0.6900000000, None, False, None); args=(2, 81, u'3.000000', u'1.0000000000', u'0.2300000000', u'3.0000000000', u'0.6900000000', None, False, None)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 2  LIMIT 1; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 2, "product_id" = 81, "quantity" = 3.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 3.0000000000, "tax" = 0.6900000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 2 ; args=(2, 81, u'3.000000', u'1.0000000000', u'0.2300000000', u'3.0000000000', u'0.6900000000', False, u'0E-10', 2)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 2  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(2, True)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 15 Mar 2012 12:33:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 2  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (3); args=(3,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (4); args=(4,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (2, area, Default, 0.6900000000); args=(2, 'area', u'Default', u'0.6900000000')
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (2, area, Shipping, 0E-10); args=(2, 'area', 'Shipping', u'0E-10')
Thu, 15 Mar 2012 12:33:39 satchmo_store.shop.models DEBUG    Order #2, recalc: sub_total=zł 3,00, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,69
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 2  LIMIT 1; args=(2,)
Thu, 15 Mar 2012 12:33:39 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 3.0000000000, "total" = 3.6900000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.6900000000, "time_stamp" = 2012-03-15 12:33:37.228031, "status" =  WHERE "shop_order"."id" = 2 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'3.0000000000', u'3.6900000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.6900000000', u'2012-03-15 12:33:37.228031', u'', 2)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 2  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(2, u'DOTPAY')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 2  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(2, u'DOTPAY')
Thu, 15 Mar 2012 12:33:40 payment.modules.base DEBUG    Creating pending DOTPAY payment of 0.00 for Order #2: Jan Kowalski
Thu, 15 Mar 2012 12:33:40 satchmo_store.shop.models DEBUG    Pending Payment - creating linked payment
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id") VALUES (DOTPAY, 0E-10, 2012-03-15 12:33:40.045905, LINKED, None, , 2); args=(u'DOTPAY', u'0E-10', u'2012-03-15 12:33:40.045905', 'LINKED', None, '', 2)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpendingpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id", "capture_id") VALUES (DOTPAY, 0E-10, None, None, None, None, 2, 2); args=(u'DOTPAY', u'0E-10', None, None, None, None, 2, 2)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  LIMIT 1; args=('3dbdce3009ae23714e308f20ffcfca58',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.002) UPDATE "django_session" SET "session_data" = OWNhMDgwMjgzYTY3MmZkNzFjNDg4MDMyOWJmMzgzMDE1N2U4MmVlNjqAAn1xAShVB29yZGVySURL
AlUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCFUSX2F1dGhfdXNl
cl9iYWNrZW5kVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZFUGY3Vz
dElESwR1Lg==
, "expire_date" = 2012-03-29 12:33:40.194792 WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58 ; args=('OWNhMDgwMjgzYTY3MmZkNzFjNDg4MDMyOWJmMzgzMDE1N2U4MmVlNjqAAn1xAShVB29yZGVySURL\nAlUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCFUSX2F1dGhfdXNl\ncl9iYWNrZW5kVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZFUGY3Vz\ndElESwR1Lg==\n', u'2012-03-29 12:33:40.194792', '3dbdce3009ae23714e308f20ffcfca58')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:40.292790 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:40.292790')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:40 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-notify_callback
Thu, 15 Mar 2012 12:33:40 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-success
Thu, 15 Mar 2012 12:33:40 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-failure
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = confirm ; args=(u'confirm',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-08 12:33:40.397066 ; args=(u'2012-03-08 12:33:40.397066',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-14 12:33:40.397107 ; args=(u'2012-03-14 12:33:40.397107',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-15 11:33:40.397123 ; args=(u'2012-03-15 11:33:40.397123',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-08 ; args=('2012-03-08',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8 ; args=(8,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-15', Decimal('3'))
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 2  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(2, u'shipping')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 2  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(2, u'shipping')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 2  ORDER BY "shop_orderitem"."id" ASC; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 2  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(2, u'shipping')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 2  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(2, u'shipping')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE ("shop_orderpayment"."order_id" = 2  AND NOT (("shop_orderpayment"."transaction_id" = PENDING  AND "shop_orderpayment"."transaction_id" IS NOT NULL) AND "shop_orderpayment"."transaction_id" IS NOT NULL)); args=(2, 'PENDING')
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  LIMIT 1; args=('3dbdce3009ae23714e308f20ffcfca58',)
Thu, 15 Mar 2012 12:33:40 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZThmY2NhMjQwYzcyNjA1MGE4YTI0NjRmZmIyMDNiMDcyOTM0MTEzZTqAAn1xAShVB29yZGVySURL
AlUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUpZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmRVBGNhcnRLCFUGY3Vz
dElESwR1Lg==
, "expire_date" = 2012-03-29 12:33:40.729213 WHERE "django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58 ; args=('ZThmY2NhMjQwYzcyNjA1MGE4YTI0NjRmZmIyMDNiMDcyOTM0MTEzZTqAAn1xAShVB29yZGVySURL\nAlUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUpZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmRVBGNhcnRLCFUGY3Vz\ndElESwR1Lg==\n', u'2012-03-29 12:33:40.729213', '3dbdce3009ae23714e308f20ffcfca58')
Thu, 15 Mar 2012 12:33:41 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:41.127996 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:41.127996')
Thu, 15 Mar 2012 12:33:41 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:33:41 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:33:41.921055 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:33:41.921055')
Thu, 15 Mar 2012 12:33:41 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:34:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:34:32.955172 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:34:32.955172')
Thu, 15 Mar 2012 12:34:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.446433 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.446433')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.477088 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.477088')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.499795 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.499795')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.541868 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.541868')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.567015 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.567015')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.588685 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.588685')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.619724 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.619724')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.662161 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.662161')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.685825 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.685825')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.708642 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.708642')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.734303 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.734303')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.759328 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.759328')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.783586 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.783586')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.806449 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.806449')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.833313 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.833313')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.853891 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.853891')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.886242 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.886242')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:47.908426 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:47.908426')
Thu, 15 Mar 2012 12:38:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.165368 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.165368')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.188417 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.188417')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.212525 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.212525')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.261177 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.261177')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.308124 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.308124')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.347680 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.347680')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.390415 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.390415')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.430481 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.430481')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.482622 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.482622')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:48.802031 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:48.802031')
Thu, 15 Mar 2012 12:38:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:38:56 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 3dbdce3009ae23714e308f20ffcfca58  AND "django_session"."expire_date" > 2012-03-15 12:38:56.170620 ); args=('3dbdce3009ae23714e308f20ffcfca58', u'2012-03-15 12:38:56.170620')
Thu, 15 Mar 2012 12:38:56 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:40:20.340338 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:40:20.340338')
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-15  AND "product_discount"."endDate" > 2012-03-15 ); args=(True, True, 1, '2012-03-15', '2012-03-15')
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-08 12:40:20.429504 ; args=(u'2012-03-08 12:40:20.429504',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-14 12:40:20.429546 ; args=(u'2012-03-14 12:40:20.429546',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-15 11:40:20.429563 ; args=(u'2012-03-15 11:40:20.429563',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-08 ; args=('2012-03-08',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.005) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = admin_tools ; args=(u'admin_tools',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Thu, 15 Mar 2012 12:40:20 django.db.backends DEBUG    (0.002) UPDATE "django_session" SET "session_data" = ODIwM2M5ZDA3ODQ0ZTllZTM1ZjhhMDIzN2Q1NzE1YmJhNWU5MzM2MDqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-29 12:40:20.829489 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ODIwM2M5ZDA3ODQ0ZTllZTM1ZjhhMDIzN2Q1NzE1YmJhNWU5MzM2MDqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-29 12:40:20.829489', '1787aa4bf137035436f1b68b61b56895')
Thu, 15 Mar 2012 12:40:21 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:40:20.992730 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:40:20.992730')
Thu, 15 Mar 2012 12:40:21 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 15 Mar 2012 12:40:21 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-15 12:40:21.636970 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-15 12:40:21.636970')
Thu, 15 Mar 2012 12:40:21 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
