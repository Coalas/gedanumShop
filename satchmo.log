Sat, 17 Mar 2012 16:50:01 root         INFO     Satchmo Started
Sat, 17 Mar 2012 16:50:02 root         INFO     Satchmo Started
Sat, 17 Mar 2012 08:50:03 configuration DEBUG    Could not load default shipping module configuration: fedex_web_services
Sat, 17 Mar 2012 08:50:03 tiered.config DEBUG    loaded
Sat, 17 Mar 2012 08:50:03 shop.listeners DEBUG    Added default shop listeners
Sat, 17 Mar 2012 08:50:03 satchmo_toolbar DEBUG    Satchmo toolbar ready
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Management command: runserver
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Sat, 17 Mar 2012 08:50:03 django.db.backends DEBUG    (0.007) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Management command: runserver
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sat, 17 Mar 2012 08:50:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 08:50:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 08:50:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 08:50:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Management command: runserver
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Management command: runserver
Sat, 17 Mar 2012 08:50:03 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Sat, 17 Mar 2012 08:50:03 configuration DEBUG    SettingNotSet: PAYMENT_DOTPAY.CREDITCHOICES
Sat, 17 Mar 2012 08:50:10 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:10.523964 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:10.523964')
Sat, 17 Mar 2012 08:50:10 django.db.backends DEBUG    (0.008) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:11 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sat, 17 Mar 2012 08:50:11 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sat, 17 Mar 2012 08:50:12 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ko/workspace/store/../store/static/
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sat, 17 Mar 2012 08:50:13 payment.urls DEBUG    Found payment processor: DOTPAY, adding urls at ^dotpay/
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.013) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:50:13.704755 ; args=(u'2012-03-10 08:50:13.704755',)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:50:13.704796 ; args=(u'2012-03-16 08:50:13.704796',)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:50:13.704812 ; args=(u'2012-03-17 07:50:13.704812',)
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:50:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.018) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = admin_tools ; args=(u'admin_tools',)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:50:14.719314 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:50:14.719314', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:14.907469 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:14.907469')
Sat, 17 Mar 2012 08:50:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:15 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:15.733747 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:15.733747')
Sat, 17 Mar 2012 08:50:15 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:20.734380 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:20.734380')
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carrier"; args=()
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" ORDER BY "tiered_carrier"."key" ASC; args=()
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.003) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = carrier ; args=(u'carrier',)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:50:20.860536 ; args=(u'2012-03-10 08:50:20.860536',)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:50:20.860574 ; args=(u'2012-03-16 08:50:20.860574',)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:50:20.860591 ; args=(u'2012-03-17 07:50:20.860591',)
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:50:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:50:21.139326 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:50:21.139326', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:21.285327 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:21.285327')
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:21.650470 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:21.650470')
Sat, 17 Mar 2012 08:50:21 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:23.662354 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:23.662354')
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" INNER JOIN "tiered_carrier" ON ("tiered_carriertranslation"."carrier_id" = "tiered_carrier"."id") WHERE "tiered_carriertranslation"."carrier_id" = 1  ORDER BY "tiered_carrier"."ordering" ASC; args=(1,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."carrier_id" = 1  ORDER BY "tiered_shippingtier"."min_total" ASC, "tiered_shippingtier"."expires" ASC; args=(1,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = carriertranslation  AND "django_content_type"."app_label" = tiered ); args=('carriertranslation', 'tiered')
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = shippingtier  AND "django_content_type"."app_label" = tiered ); args=('shippingtier', 'tiered')
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = carrier  AND "django_content_type"."app_label" = tiered ); args=('carrier', 'tiered')
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 1 ; args=(u'1',)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:50:23.806277 ; args=(u'2012-03-10 08:50:23.806277',)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:50:23.806310 ; args=(u'2012-03-16 08:50:23.806310',)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:50:23.806326 ; args=(u'2012-03-17 07:50:23.806326',)
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:50:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:50:24.246891 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:50:24.246891', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:24.427522 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:24.427522')
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:24.928035 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:24.928035')
Sat, 17 Mar 2012 08:50:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:37.043898 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:37.043898')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" INNER JOIN "tiered_carrier" ON ("tiered_carriertranslation"."carrier_id" = "tiered_carrier"."id") WHERE "tiered_carriertranslation"."carrier_id" = 1  ORDER BY "tiered_carrier"."ordering" ASC; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."carrier_id" = 1  ORDER BY "tiered_shippingtier"."min_total" ASC, "tiered_shippingtier"."expires" ASC; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE "tiered_carriertranslation"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."id" = 2 ; args=(2,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "tiered_carrier" WHERE "tiered_carrier"."id" = 1  LIMIT 1; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.001) UPDATE "tiered_carrier" SET "key" = PP, "ordering" = 0, "active" = True WHERE "tiered_carrier"."id" = 1 ; args=(u'PP', 0, True, 1)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE "tiered_carriertranslation"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."id" = 2 ; args=(2,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.026) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2012-03-17 08:50:37.312595, 1, 71, 1, Carrier: Poczta Polska, 2, Żadne pole nie zmienione.); args=(u'2012-03-17 08:50:37.312595', 1, 71, u'1', u'Carrier: Poczta Polska', 2, u'\u017badne pole nie zmienione.')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:37.435263 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:37.435263')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carrier"; args=()
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" ORDER BY "tiered_carrier"."key" ASC; args=()
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = carrier ; args=(u'carrier',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:50:37.485272 ; args=(u'2012-03-10 08:50:37.485272',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:50:37.485305 ; args=(u'2012-03-16 08:50:37.485305',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:50:37.485320 ; args=(u'2012-03-17 07:50:37.485320',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:50:37.658475 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:50:37.658475', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:37.803213 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:37.803213')
Sat, 17 Mar 2012 08:50:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:38 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:38.072078 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:38.072078')
Sat, 17 Mar 2012 08:50:38 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:48.153665 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:48.153665')
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" INNER JOIN "tiered_carrier" ON ("tiered_carriertranslation"."carrier_id" = "tiered_carrier"."id") WHERE "tiered_carriertranslation"."carrier_id" = None  ORDER BY "tiered_carrier"."ordering" ASC; args=(None,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."carrier_id" = None  ORDER BY "tiered_shippingtier"."min_total" ASC, "tiered_shippingtier"."expires" ASC; args=(None,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = add ; args=(u'add',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:50:48.271073 ; args=(u'2012-03-10 08:50:48.271073',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:50:48.271105 ; args=(u'2012-03-16 08:50:48.271105',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:50:48.271120 ; args=(u'2012-03-17 07:50:48.271120',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:50:48.530674 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:50:48.530674', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:48.787279 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:48.787279')
Sat, 17 Mar 2012 08:50:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:50:49 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:50:49.192416 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:50:49.192416')
Sat, 17 Mar 2012 08:50:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:28.098326 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:28.098326')
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" INNER JOIN "tiered_carrier" ON ("tiered_carriertranslation"."carrier_id" = "tiered_carrier"."id") WHERE "tiered_carriertranslation"."carrier_id" = None  ORDER BY "tiered_carrier"."ordering" ASC; args=(None,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."carrier_id" = None  ORDER BY "tiered_shippingtier"."min_total" ASC, "tiered_shippingtier"."expires" ASC; args=(None,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = add ; args=(u'add',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:51:28.294222 ; args=(u'2012-03-10 08:51:28.294222',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:51:28.294254 ; args=(u'2012-03-16 08:51:28.294254',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:51:28.294270 ; args=(u'2012-03-17 07:51:28.294270',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:51:28.582023 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:51:28.582023', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:28.801818 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:28.801818')
Sat, 17 Mar 2012 08:51:28 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:29 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:29.211744 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:29.211744')
Sat, 17 Mar 2012 08:51:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:35.805518 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:35.805518')
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.001) INSERT INTO "tiered_carrier" ("key", "ordering", "active") VALUES (Kurier, 1, True); args=(u'Kurier', 1, True)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" INNER JOIN "tiered_carrier" ON ("tiered_carriertranslation"."carrier_id" = "tiered_carrier"."id") WHERE "tiered_carriertranslation"."carrier_id" = None  ORDER BY "tiered_carrier"."ordering" ASC; args=(None,)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.001) INSERT INTO "tiered_carriertranslation" ("carrier_id", "languagecode", "name", "description", "method", "delivery") VALUES (2, pl, K-EX, Kurier, kex, 1); args=(2, u'pl', u'K-EX', u'Kurier', u'kex', u'1')
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."carrier_id" = None  ORDER BY "tiered_shippingtier"."min_total" ASC, "tiered_shippingtier"."expires" ASC; args=(None,)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) INSERT INTO "tiered_shippingtier" ("carrier_id", "min_total", "price", "expires") VALUES (2, 50.00, 19.90, None); args=(2, u'50.00', u'19.90', None)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) INSERT INTO "tiered_shippingtier" ("carrier_id", "min_total", "price", "expires") VALUES (2, 500.00, 0.00, None); args=(2, u'500.00', u'0.00', None)
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2012-03-17 08:51:35.942343, 1, 71, 2, Carrier: K-EX, 1, ); args=(u'2012-03-17 08:51:35.942343', 1, 71, u'2', u'Carrier: K-EX', 1, '')
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 08:51:35 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:36.035862 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:36.035862')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carrier"; args=()
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" ORDER BY "tiered_carrier"."key" ASC; args=()
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = carrier ; args=(u'carrier',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:51:36.088574 ; args=(u'2012-03-10 08:51:36.088574',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:51:36.088618 ; args=(u'2012-03-16 08:51:36.088618',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:51:36.088634 ; args=(u'2012-03-17 07:51:36.088634',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:51:36.258000 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:51:36.258000', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:36.416987 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:36.416987')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:51:36.682874 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:51:36.682874')
Sat, 17 Mar 2012 08:51:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:41 django.db.backends DEBUG    (0.007) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 08:51:41 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 08:51:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 08:51:43 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 08:51:43 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 08:51:48 django.db.backends DEBUG    (0.008) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = pins  AND "product_category"."site_id" = 1 ); args=(True, u'pins', 1)
Sat, 17 Mar 2012 08:51:48 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.075) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 23  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(23, True, 1)
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', True)
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(23, True)
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 23 ); args=(True, 23)
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 23 ; args=(23,)
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 08:51:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.008) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = keyrings  AND "product_category"."site_id" = 1 ); args=(True, u'keyrings', 1)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 20  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(20, True, 1)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', True)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(21, True)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(22, True)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 20 ); args=(True, 20)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 08:51:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.007) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = valentine  AND "product_category"."site_id" = 1 ); args=(True, u'valentine', 1)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 12  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(12, True, 1)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, True)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(15, True)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(14, True)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(13, True)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 59  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(59,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:51:53 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 60 ; args=(60,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 60  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(60,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 60  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(60, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 60  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(60, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 60 ; args=(60,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 60 ; args=(60,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 60 ; args=(60,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 60  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(60, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 61 ; args=(61,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 61  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(61,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 61  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(61, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 61  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(61, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 61 ; args=(61,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 61 ; args=(61,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 61 ; args=(61,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 61  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(61, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 64 ; args=(64,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 64  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(64,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 64  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(64, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 64  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(64, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 64 ; args=(64,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 64 ; args=(64,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 64 ; args=(64,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 64  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(64, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 65 ; args=(65,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 65  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(65,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 65  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(65, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 65  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(65, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 65 ; args=(65,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 65 ; args=(65,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 65 ; args=(65,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 65  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(65, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 66 ; args=(66,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 66  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(66,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 66  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(66, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 66  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(66, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 66 ; args=(66,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 66 ; args=(66,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 66 ; args=(66,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 66  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(66, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 68 ; args=(68,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 68  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(68,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 68  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(68, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 68  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(68, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 68 ; args=(68,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 68 ; args=(68,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 68 ; args=(68,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 68  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(68, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:51:54 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 08:51:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.008) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa', 1)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:52:00 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 08:52:00 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 59  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(59,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 59  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(59,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:00 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 59  ORDER BY "product_productimage"."sort" ASC; args=(59,)
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 59  AND "product_productattribute"."languagecode" = pl ); args=(59, 'pl')
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 59  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(59, '')
Sat, 17 Mar 2012 08:52:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Sat, 17 Mar 2012 08:52:01 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Sat, 17 Mar 2012 08:52:01 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Sat, 17 Mar 2012 08:52:03 shop.views.cart DEBUG    FORM: <QueryDict: {u'addcart': [u'Dodaj do koszyka'], u'csrfmiddlewaretoken': [u'724a6ee0d1a0fb5c0a52e80a2a75fc2f'], u'productname': [u'kartka-walentynkowa'], u'quantity': [u'1']}>
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.007) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."slug" = kartka-walentynkowa  AND "product_product"."site_id" = 1 ); args=(u'kartka-walentynkowa', 1)
Sat, 17 Mar 2012 08:52:03 shop.views.cart DEBUG    found product: Kartka Walentynkowa
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:03 shop.views.cart DEBUG    product kartka-walentynkowa is active
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cart" ("site_id", "desc", "date_time_created", "customer_id") VALUES (1, None, 2012-03-17 08:52:03.660803, None); args=(1, None, u'2012-03-17 08:52:03.660803', None)
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."cart_id" = 9  AND "shop_cartitem"."product_id" = 59 ) ORDER BY "shop_cartitem"."id" ASC; args=(9, 59)
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cartitem" ("cart_id", "product_id", "quantity") VALUES (9, 59, 0.000000); args=(9, 59, u'0.000000')
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 13  LIMIT 1; args=(13,)
Sat, 17 Mar 2012 08:52:03 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 9, "product_id" = 59, "quantity" = 1.000000 WHERE "shop_cartitem"."id" = 13 ; args=(9, 59, u'1.000000', 13)
Sat, 17 Mar 2012 08:52:04 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952 ; args=('1d8e27f617e24283f159c1b721bf0952',)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  LIMIT 1; args=('1d8e27f617e24283f159c1b721bf0952',)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.001) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES (1d8e27f617e24283f159c1b721bf0952, MTJmMmY1YTE4YzBjOWViMGIxZGNmMTBhZjVkN2UzMjkyOWQ5NTMzMTqAAn1xAVUEY2FydHECSwlz
Lg==
, 2012-03-31 08:52:04.042752); args=('1d8e27f617e24283f159c1b721bf0952', 'MTJmMmY1YTE4YzBjOWViMGIxZGNmMTBhZjVkN2UzMjkyOWQ5NTMzMTqAAn1xAVUEY2FydHECSwlz\nLg==\n', u'2012-03-31 08:52:04.042752')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:04.131478 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:04.131478')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:04 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.039) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:04.693010 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:04.693010')
Sat, 17 Mar 2012 08:52:04 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:04.756011 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:04.756011')
Sat, 17 Mar 2012 08:52:05 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:05.087135 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:05.087135')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:06.438093 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:06.438093')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:06 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:07 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  LIMIT 1; args=('1d8e27f617e24283f159c1b721bf0952',)
Sat, 17 Mar 2012 08:52:07 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWNjMDNmNjlhNDRjYTBkYjEzMDQ5NWM2ZTdhODU2NjM2OTVhNGM0MzqAAn1xAShVCnRlc3Rjb29r
aWVxAlUGd29ya2VkcQNVBGNhcnRLCXUu
, "expire_date" = 2012-03-31 08:52:07.014637 WHERE "django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952 ; args=('NWNjMDNmNjlhNDRjYTBkYjEzMDQ5NWM2ZTdhODU2NjM2OTVhNGM0MzqAAn1xAShVCnRlc3Rjb29r\naWVxAlUGd29ya2VkcQNVBGNhcnRLCXUu\n', u'2012-03-31 08:52:07.014637', '1d8e27f617e24283f159c1b721bf0952')
Sat, 17 Mar 2012 08:52:07 django.db.backends DEBUG    (0.038) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:07.214386 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:07.214386')
Sat, 17 Mar 2012 08:52:07 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:07.609634 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:07.609634')
Sat, 17 Mar 2012 08:52:07 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:07.804983 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:07.804983')
Sat, 17 Mar 2012 08:52:16 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952  AND "django_session"."expire_date" > 2012-03-17 08:52:16.925392 ); args=('1d8e27f617e24283f159c1b721bf0952', u'2012-03-17 08:52:16.925392')
Sat, 17 Mar 2012 08:52:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "auth_user" WHERE "auth_user"."email" LIKE coalas@o2.pl ESCAPE '\' ; args=(u'coalas@o2.pl',)
Sat, 17 Mar 2012 08:52:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."email" LIKE coalas@o2.pl ESCAPE '\'  LIMIT 1; args=(u'coalas@o2.pl',)
Sat, 17 Mar 2012 08:52:16 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:16 django.db.backends DEBUG    (0.001) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES (5ab6587c249ba5fc72ce01579096640e, MWI0YTU5OWE4MGRjOTczZDAwY2ZhOGVlZWVmMTJkMjU5MmJmNjc1YTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUEY2FydEsJdS4=
, 2012-03-31 08:52:16.949230); args=('5ab6587c249ba5fc72ce01579096640e', 'MWI0YTU5OWE4MGRjOTczZDAwY2ZhOGVlZWVmMTJkMjU5MmJmNjc1YTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUEY2FydEsJdS4=\n', u'2012-03-31 08:52:16.949230')
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 1d8e27f617e24283f159c1b721bf0952 ; args=('1d8e27f617e24283f159c1b721bf0952',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) DELETE FROM "django_session" WHERE "session_key" IN (1d8e27f617e24283f159c1b721bf0952); args=(u'1d8e27f617e24283f159c1b721bf0952',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) UPDATE "auth_user" SET "username" = admin, "first_name" = Jan, "last_name" = Kowalski, "email" = coalas@o2.pl, "password" = sha1$ab5a5$2816098f57028924103a86cdc6b3a25c55a13ad6, "is_staff" = True, "is_active" = True, "is_superuser" = True, "last_login" = 2012-03-17 08:52:17.105706, "date_joined" = 2011-11-15 00:01:35.784407 WHERE "auth_user"."id" = 1 ; args=(u'admin', u'Jan', u'Kowalski', u'coalas@o2.pl', u'sha1$ab5a5$2816098f57028924103a86cdc6b3a25c55a13ad6', True, True, True, u'2012-03-17 08:52:17.105706', u'2011-11-15 00:01:35.784407', 1)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:17 satchmo_store.accounts.views DEBUG    Assigning Cart (id: 9) to u'Jan Kowalski' (id: 4)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cart" WHERE "shop_cart"."id" = 9  LIMIT 1; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) UPDATE "shop_cart" SET "site_id" = 1, "desc" = NULL, "date_time_created" = 2012-03-17 08:52:03.660803, "customer_id" = 4 WHERE "shop_cart"."id" = 9 ; args=(1, u'2012-03-17 08:52:03.660803', 4, 9)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = YWYzNDllZDNhNWFkYTM5NjExOTYwN2JkN2RjMTFhMDhiZDRiMTczMjqAAn1xAShVBmN1c3RJRHEC
SwRVEl9hdXRoX3VzZXJfYmFja2VuZHEDVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1
dGguRW1haWxCYWNrZW5kcQRVCnRlc3Rjb29raWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZHEFSwFV
BGNhcnRLCXUu
, "expire_date" = 2012-03-31 08:52:17.485244 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('YWYzNDllZDNhNWFkYTM5NjExOTYwN2JkN2RjMTFhMDhiZDRiMTczMjqAAn1xAShVBmN1c3RJRHEC\nSwRVEl9hdXRoX3VzZXJfYmFja2VuZHEDVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1\ndGguRW1haWxCYWNrZW5kcQRVCnRlc3Rjb29raWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZHEFSwFV\nBGNhcnRLCXUu\n', u'2012-03-31 08:52:17.485244', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:17.571357 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:17.571357')
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.027) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:17 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:52:17.894214 ; args=(u'2012-03-10 08:52:17.894214',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:52:17.894247 ; args=(u'2012-03-16 08:52:17.894247',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:52:17.894262 ; args=(u'2012-03-17 07:52:17.894262',)
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:52:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MjQ2ZTBlMDQ4NjY3ZjA2OTZhOTBjMmU4ZDBmYzRlMzMzMDA1ZDM4NjqAAn1xAShVBGNhcnRLCVUK
dGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBFUNX2F1dGhfdXNlcl9pZEsBVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 08:52:18.355076 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('MjQ2ZTBlMDQ4NjY3ZjA2OTZhOTBjMmU4ZDBmYzRlMzMzMDA1ZDM4NjqAAn1xAShVBGNhcnRLCVUK\ndGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBFUNX2F1dGhfdXNlcl9pZEsBVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 08:52:18.355076', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.035) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:18.708796 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:18.708796')
Sat, 17 Mar 2012 08:52:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:19 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:19.152621 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:19.152621')
Sat, 17 Mar 2012 08:52:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:25 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:25.592287 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:25.592287')
Sat, 17 Mar 2012 08:52:25 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:27.821165 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:27.821165')
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:27 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:27 satchmo_store.contact.forms DEBUG    Saving contact info for Jan Kowalski
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" WHERE "contact_contactrole"."key" = Customer ; args=(u'Customer',)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_contact" WHERE "contact_contact"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:27 django.db.backends DEBUG    (0.001) UPDATE "contact_contact" SET "title" = , "first_name" = Jan, "last_name" = Kowalski, "user_id" = 1, "role_id" = Customer, "organization_id" = NULL, "dob" = NULL, "email" = coalas@o2.pl, "notes" = , "create_date" = 2012-01-18 WHERE "contact_contact"."id" = 4 ; args=(u'', u'Jan', u'Kowalski', 1, u'Customer', u'coalas@o2.pl', u'', '2012-01-18', 4)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 4)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = True WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, True, 4)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.005) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 5)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, True, False, 5)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = False WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', False, 5)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = True WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', True, 5)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) INSERT INTO "shop_order" ("site_id", "contact_id", "ship_addressee", "ship_street1", "ship_street2", "ship_city", "ship_state", "ship_postal_code", "ship_country", "bill_addressee", "bill_street1", "bill_street2", "bill_city", "bill_state", "bill_postal_code", "bill_country", "notes", "sub_total", "total", "discount_code", "discount", "method", "shipping_description", "shipping_method", "shipping_model", "shipping_cost", "shipping_discount", "tax", "time_stamp", "status") VALUES (1, 4, Jan Kowalski, Toruńska 20, , Gdańsk, , 80-747, PL, Jan Kowalski, Toruńska 20, , Gdańsk, , 80-747, PL, None, 1.6000000000, 0E-10, , None, Online, None, None, None, None, None, 0E-10, 2012-03-17 08:52:28.608981, ); args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', None, u'1.6000000000', u'0E-10', '', None, 'Online', None, None, None, None, None, u'0E-10', u'2012-03-17 08:52:28.608981', '')
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:28 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:28 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:28 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (4, 59, 1.000000, 1.6000000000, 0.3680000000, 1.6000000000, 0.3680000000, None, False, None); args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', None, False, None)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:29 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:29 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 4, "product_id" = 59, "quantity" = 1.000000, "unit_price" = 1.6000000000, "unit_tax" = 0.3680000000, "line_item_price" = 1.6000000000, "tax" = 0.3680000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 5 ; args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', False, u'0E-10', 5)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 4  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(4, True)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:29 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Default, 0.3680000000); args=(4, 'area', u'Default', u'0.3680000000')
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Shipping, 0E-10); args=(4, 'area', 'Shipping', u'0E-10')
Sat, 17 Mar 2012 08:52:29 satchmo_store.shop.models DEBUG    Order #4, recalc: sub_total=zł 1,60, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,37
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:29 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', 'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', '', 4)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MzY1YWY5ZTJkOTRlMjc5NDc2YjZkODk1MmQ0NDM2MmZhMjJiZTJhOTqAAn1xAShVB29yZGVySURx
AksEVQ1fYXV0aF91c2VyX2lkSwFVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNr
ZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQRjYXJ0
SwlVBmN1c3RJREsEdS4=
, "expire_date" = 2012-03-31 08:52:30.247832 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('MzY1YWY5ZTJkOTRlMjc5NDc2YjZkODk1MmQ0NDM2MmZhMjJiZTJhOTqAAn1xAShVB29yZGVySURx\nAksEVQ1fYXV0aF91c2VyX2lkSwFVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNr\nZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQRjYXJ0\nSwlVBmN1c3RJREsEdS4=\n', u'2012-03-31 08:52:30.247832', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:30.447976 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:30.447976')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 1.60  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('1.60'), '2012-03-17')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 1.60 ); args=(1, Decimal('1.60'))
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:52:30 shipping.Tiered DEBUG    No tiered price found for Carrier: Poczta Polska: total=1.60
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 1.60  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('1.60'), '2012-03-17')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 1.60 ); args=(2, Decimal('1.60'))
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 08:52:30 shipping.Tiered DEBUG    No tiered price found for Carrier: K-EX: total=1.60
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:30 payship      DEBUG    Skipping pay ship, nothing to select for shipping
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', u'', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:30 django.db.backends DEBUG    (0.001) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (5) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(5,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (5); args=(5,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.080) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:31 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:32 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:32 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (4, 59, 1.000000, 1.6000000000, 0.3680000000, 1.6000000000, 0.3680000000, None, False, None); args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', None, False, None)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:32 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:32 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 4, "product_id" = 59, "quantity" = 1.000000, "unit_price" = 1.6000000000, "unit_tax" = 0.3680000000, "line_item_price" = 1.6000000000, "tax" = 0.3680000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 5 ; args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', False, u'0E-10', 5)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 4  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(4, True)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:32 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (7); args=(7,)
Sat, 17 Mar 2012 08:52:32 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (8); args=(8,)
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Default, 0.3680000000); args=(4, 'area', u'Default', u'0.3680000000')
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.000) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Shipping, 0E-10); args=(4, 'area', 'Shipping', u'0E-10')
Sat, 17 Mar 2012 08:52:33 satchmo_store.shop.models DEBUG    Order #4, recalc: sub_total=zł 1,60, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,37
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 4  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(4, u'DOTPAY')
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 4  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(4, u'DOTPAY')
Sat, 17 Mar 2012 08:52:33 payment.modules.base DEBUG    Creating pending DOTPAY payment of 0.00 for Order #4: Jan Kowalski
Sat, 17 Mar 2012 08:52:33 satchmo_store.shop.models DEBUG    Pending Payment - creating linked payment
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id") VALUES (DOTPAY, 0E-10, 2012-03-17 08:52:33.728899, LINKED, None, , 4); args=(u'DOTPAY', u'0E-10', u'2012-03-17 08:52:33.728899', 'LINKED', None, '', 4)
Sat, 17 Mar 2012 08:52:33 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpendingpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id", "capture_id") VALUES (DOTPAY, 0E-10, None, None, None, None, 4, 4); args=(u'DOTPAY', u'0E-10', None, None, None, None, 4, 4)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:52:34.170779 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:52:34.170779', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:34.360715 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:34.360715')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 08:52:34 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-notify_callback
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 08:52:34 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-success
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 08:52:34 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-failure
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = DOTPAY_DOTID ); args=(1, 1, 'PAYMENT_DOTPAY', 'DOTPAY_DOTID')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = confirm ; args=(u'confirm',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:52:34.565543 ; args=(u'2012-03-10 08:52:34.565543',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:52:34.565586 ; args=(u'2012-03-16 08:52:34.565586',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:52:34.565603 ; args=(u'2012-03-17 07:52:34.565603',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(4, u'shipping')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.003) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4, u'shipping')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(4, u'shipping')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4, u'shipping')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE ("shop_orderpayment"."order_id" = 4  AND NOT (("shop_orderpayment"."transaction_id" = PENDING  AND "shop_orderpayment"."transaction_id" IS NOT NULL) AND "shop_orderpayment"."transaction_id" IS NOT NULL)); args=(4, 'PENDING')
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = order_details ; args=(u'order_details',)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:35 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:52:35.838563 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:52:35.838563', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:52:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:36.522207 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:36.522207')
Sat, 17 Mar 2012 08:52:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:37 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:37.260118 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:37.260118')
Sat, 17 Mar 2012 08:52:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:47.225553 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:47.225553')
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:52:47.294255 ; args=(u'2012-03-10 08:52:47.294255',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:52:47.294289 ; args=(u'2012-03-16 08:52:47.294289',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:52:47.294305 ; args=(u'2012-03-17 07:52:47.294305',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:47 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:47 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:47 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:52:47 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:52:47 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:52:47.696536 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:52:47.696536', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:52:48 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:48.214229 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:48.214229')
Sat, 17 Mar 2012 08:52:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:48 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:52:48.965066 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:52:48.965066')
Sat, 17 Mar 2012 08:52:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:52:55.811035 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:52:55.811035')
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = tiered ; args=(u'tiered',)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:52:55.857850 ; args=(u'2012-03-10 08:52:55.857850',)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:52:55.857884 ; args=(u'2012-03-16 08:52:55.857884',)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:52:55.857900 ; args=(u'2012-03-17 07:52:55.857900',)
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:52:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:52:56.008562 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:52:56.008562', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:52:56.254925 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:52:56.254925')
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:52:56.686149 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:52:56.686149')
Sat, 17 Mar 2012 08:52:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:52:57.153042 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:52:57.153042')
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:52:57.230099 ; args=(u'2012-03-10 08:52:57.230099',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:52:57.230132 ; args=(u'2012-03-16 08:52:57.230132',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:52:57.230147 ; args=(u'2012-03-17 07:52:57.230147',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.004) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:52:57.399415 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:52:57.399415', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:52:57.703708 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:52:57.703708')
Sat, 17 Mar 2012 08:52:57 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:52:58 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:52:58.183553 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:52:58.183553')
Sat, 17 Mar 2012 08:52:58 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:00.847601 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:00.847601')
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "django_site"; args=()
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = site ; args=(u'site',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:00.896308 ; args=(u'2012-03-10 08:53:00.896308',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:00.896354 ; args=(u'2012-03-16 08:53:00.896354',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:00.896371 ; args=(u'2012-03-17 07:53:00.896371',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:00 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:01 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:01 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:01.037388 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:01.037388', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:01 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:01.222815 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:01.222815')
Sat, 17 Mar 2012 08:53:01 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:01 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:01.934902 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:01.934902')
Sat, 17 Mar 2012 08:53:01 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:03 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:02.990336 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:02.990336')
Sat, 17 Mar 2012 08:53:03 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:09.927547 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:09.927547')
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderauthorization"; args=()
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.001) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete", "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status", "django_site"."id", "django_site"."domain", "django_site"."name", "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date", "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id", T6."id", T6."site_id", T6."contact_id", T6."ship_addressee", T6."ship_street1", T6."ship_street2", T6."ship_city", T6."ship_state", T6."ship_postal_code", T6."ship_country", T6."bill_addressee", T6."bill_street1", T6."bill_street2", T6."bill_city", T6."bill_state", T6."bill_postal_code", T6."bill_country", T6."notes", T6."sub_total", T6."total", T6."discount_code", T6."discount", T6."method", T6."shipping_description", T6."shipping_method", T6."shipping_model", T6."shipping_cost", T6."shipping_discount", T6."tax", T6."time_stamp", T6."status", T7."id", T7."domain", T7."name", T8."id", T8."title", T8."first_name", T8."last_name", T8."user_id", T8."role_id", T8."organization_id", T8."dob", T8."email", T8."notes", T8."create_date" FROM "shop_orderauthorization" INNER JOIN "shop_order" ON ("shop_orderauthorization"."order_id" = "shop_order"."id") INNER JOIN "django_site" ON ("shop_order"."site_id" = "django_site"."id") INNER JOIN "contact_contact" ON ("shop_order"."contact_id" = "contact_contact"."id") INNER JOIN "shop_orderpayment" ON ("shop_orderauthorization"."capture_id" = "shop_orderpayment"."id") INNER JOIN "shop_order" T6 ON ("shop_orderpayment"."order_id" = T6."id") INNER JOIN "django_site" T7 ON (T6."site_id" = T7."id") INNER JOIN "contact_contact" T8 ON (T6."contact_id" = T8."id") ORDER BY "shop_orderauthorization"."id" DESC; args=()
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = orderauthorization ; args=(u'orderauthorization',)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:09.979193 ; args=(u'2012-03-10 08:53:09.979193',)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:09.979235 ; args=(u'2012-03-16 08:53:09.979235',)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:09.979251 ; args=(u'2012-03-17 07:53:09.979251',)
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:10.193076 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:10.193076', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.032) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:10.355325 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:10.355325')
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:10.972384 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:10.972384')
Sat, 17 Mar 2012 08:53:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:12 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:12.327316 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:12.327316')
Sat, 17 Mar 2012 08:53:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:17.254537 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:17.254537')
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_config"; args=()
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.001) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id", "django_site"."id", "django_site"."domain", "django_site"."name", "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "shop_config" INNER JOIN "django_site" ON ("shop_config"."site_id" = "django_site"."id") INNER JOIN "l10n_country" ON ("shop_config"."country_id" = "l10n_country"."id") ORDER BY "django_site"."domain" DESC; args=()
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = config ; args=(u'config',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:17.305291 ; args=(u'2012-03-10 08:53:17.305291',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:17.305335 ; args=(u'2012-03-16 08:53:17.305335',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:17.305351 ; args=(u'2012-03-17 07:53:17.305351',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:17.438940 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:17.438940', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:17.637086 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:17.637086')
Sat, 17 Mar 2012 08:53:17 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:18.392522 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:18.392522')
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:18.895896 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:18.895896')
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" INNER JOIN "shop_config_shipping_countries" ON ("l10n_country"."id" = "shop_config_shipping_countries"."country_id") WHERE "shop_config_shipping_countries"."config_id" = 1  ORDER BY "l10n_country"."name" ASC; args=(1,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = config  AND "django_content_type"."app_label" = shop ); args=('config', 'shop')
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 1 ; args=(u'1',)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:18.977705 ; args=(u'2012-03-10 08:53:18.977705',)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:18.977750 ; args=(u'2012-03-16 08:53:18.977750',)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:18.977766 ; args=(u'2012-03-17 07:53:18.977766',)
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.002) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" ORDER BY "l10n_country"."name" ASC; args=()
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.002) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" ORDER BY "l10n_country"."name" ASC; args=()
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.002) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" ORDER BY "l10n_country"."name" ASC; args=()
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:19.316109 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:19.316109', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:19.635362 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:19.635362')
Sat, 17 Mar 2012 08:53:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:20 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:20.654908 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:20.654908')
Sat, 17 Mar 2012 08:53:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:23 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:23.759376 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:23.759376')
Sat, 17 Mar 2012 08:53:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:26 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:26.027942 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:26.027942')
Sat, 17 Mar 2012 08:53:26 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:29.327132 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:29.327132')
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart"; args=()
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" ORDER BY "shop_cart"."id" DESC; args=()
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:29.380056 ; args=(u'2012-03-10 08:53:29.380056',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:29.380090 ; args=(u'2012-03-16 08:53:29.380090',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:29.380106 ; args=(u'2012-03-17 07:53:29.380106',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 8  ORDER BY "shop_cartitem"."id" ASC; args=(8,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 3 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('3'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 11 ; args=(11,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 10 ; args=(10,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 6  ORDER BY "shop_cartitem"."id" ASC; args=(6,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 6  ORDER BY "shop_cartitem"."id" ASC; args=(6,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 2 ; args=(2,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 2  ORDER BY "shop_cartitem"."id" ASC; args=(2,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 2  ORDER BY "shop_cartitem"."id" ASC; args=(2,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 1  ORDER BY "shop_cartitem"."id" ASC; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 1  ORDER BY "shop_cartitem"."id" ASC; args=(1,)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:29 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:29.964795 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:29.964795', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:30 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:30.147383 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:30.147383')
Sat, 17 Mar 2012 08:53:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:30 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:30.791732 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:30.791732')
Sat, 17 Mar 2012 08:53:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:32 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:32.459396 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:32.459396')
Sat, 17 Mar 2012 08:53:32 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:43.343507 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:43.343507')
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=(u'New',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order"; args=()
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status", "django_site"."id", "django_site"."domain", "django_site"."name", "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "shop_order" INNER JOIN "django_site" ON ("shop_order"."site_id" = "django_site"."id") INNER JOIN "contact_contact" ON ("shop_order"."contact_id" = "contact_contact"."id") WHERE "shop_order"."status" = New  ORDER BY "shop_order"."id" DESC; args=(u'New',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = order ; args=(u'order',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:43.403078 ; args=(u'2012-03-10 08:53:43.403078',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:43.403110 ; args=(u'2012-03-16 08:53:43.403110',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:43.403125 ; args=(u'2012-03-17 07:53:43.403125',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.001) SELECT MAX("shop_order"."time_stamp") AS "last", MIN("shop_order"."time_stamp") AS "first" FROM "shop_order" WHERE "shop_order"."status" = New ; args=(u'New',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.001) SELECT DISTINCT django_date_trunc('year', "shop_order"."time_stamp") FROM "shop_order" WHERE ("shop_order"."status" = New  AND "shop_order"."time_stamp" IS NOT NULL) ORDER BY 1 ASC; args=(u'New',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:43.586711 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:43.586711', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:43.788958 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:43.788958')
Sat, 17 Mar 2012 08:53:43 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:44 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:44.532472 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:44.532472')
Sat, 17 Mar 2012 08:53:44 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:45 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:45.395866 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:45.395866')
Sat, 17 Mar 2012 08:53:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:49.535647 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:49.535647')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ADWORDS ); args=(1, 1, 'GOOGLE', 'ADWORDS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ADWORDS ); args=(1, 1, 'GOOGLE', 'ADWORDS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = ORDER_EMAIL_OWNER ); args=(1, 1, 'PAYMENT', 'ORDER_EMAIL_OWNER')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = ORDER_EMAIL_OWNER ); args=(1, 1, 'PAYMENT', 'ORDER_EMAIL_OWNER')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART_MERGE ); args=(1, 1, 'SHOP', 'PERSISTENT_CART_MERGE')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART_MERGE ); args=(1, 1, 'SHOP', 'PERSISTENT_CART_MERGE')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = HTML_EMAIL ); args=(1, 1, 'SHOP', 'HTML_EMAIL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = HTML_EMAIL ); args=(1, 1, 'SHOP', 'HTML_EMAIL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = LOGO_URI ); args=(1, 1, 'SHOP', 'LOGO_URI')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = LOGO_URI ); args=(1, 1, 'SHOP', 'LOGO_URI')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTRA_LOGGING ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTRA_LOGGING')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTRA_LOGGING ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTRA_LOGGING')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_SIGNATURE_CODE')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_SIGNATURE_CODE')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TERMINAL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TERMINAL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_URL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = RENAME_IMAGES ); args=(1, 1, 'THUMBNAIL', 'RENAME_IMAGES')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = RENAME_IMAGES ); args=(1, 1, 'THUMBNAIL', 'RENAME_IMAGES')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_CLASS ); args=(1, 1, 'TAX', 'TAX_CLASS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_CLASS ); args=(1, 1, 'TAX', 'TAX_CLASS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = PRODUCTS_TAXABLE_BY_DEFAULT ); args=(1, 1, 'TAX', 'PRODUCTS_TAXABLE_BY_DEFAULT')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = IMAGE_DIR ); args=(1, 1, 'PRODUCT', 'IMAGE_DIR')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = IMAGE_DIR ); args=(1, 1, 'PRODUCT', 'IMAGE_DIR')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = MEASUREMENT_SYSTEM ); args=(1, 1, 'PRODUCT', 'MEASUREMENT_SYSTEM')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SEARCH_SHOW_PRODUCTVARIATIONS ); args=(1, 1, 'PRODUCT', 'SEARCH_SHOW_PRODUCTVARIATIONS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SEARCH_SHOW_PRODUCTVARIATIONS ); args=(1, 1, 'PRODUCT', 'SEARCH_SHOW_PRODUCTVARIATIONS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = TRACK_INVENTORY ); args=(1, 1, 'PRODUCT', 'TRACK_INVENTORY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = TRACK_INVENTORY ); args=(1, 1, 'PRODUCT', 'TRACK_INVENTORY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = AUTH_EARLY ); args=(1, 1, 'PAYMENT', 'AUTH_EARLY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = AUTH_EARLY ); args=(1, 1, 'PAYMENT', 'AUTH_EARLY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = CRON_KEY ); args=(1, 1, 'PAYMENT', 'CRON_KEY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = CRON_KEY ); args=(1, 1, 'PAYMENT', 'CRON_KEY')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = CC_NUM_YEARS ); args=(1, 1, 'PAYMENT', 'CC_NUM_YEARS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = CC_NUM_YEARS ); args=(1, 1, 'PAYMENT', 'CC_NUM_YEARS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = ALLOW_URL_REBILL ); args=(1, 1, 'PAYMENT', 'ALLOW_URL_REBILL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = ALLOW_URL_REBILL ); args=(1, 1, 'PAYMENT', 'ALLOW_URL_REBILL')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = STORE_CREDIT_NUMBERS ); args=(1, 1, 'PAYMENT', 'STORE_CREDIT_NUMBERS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = STORE_CREDIT_NUMBERS ); args=(1, 1, 'PAYMENT', 'STORE_CREDIT_NUMBERS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = DOWNLOAD_PDFS ); args=(1, 1, 'SHIPPING', 'DOWNLOAD_PDFS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = DOWNLOAD_PDFS ); args=(1, 1, 'SHIPPING', 'DOWNLOAD_PDFS')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = settings ; args=(u'settings',)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:53:49.956635 ; args=(u'2012-03-10 08:53:49.956635',)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:53:49.956677 ; args=(u'2012-03-16 08:53:49.956677',)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:53:49.956693 ; args=(u'2012-03-17 07:53:49.956693',)
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:53:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:53:50 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:50 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 08:53:50 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:53:50 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:53:50.268376 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:53:50.268376', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:53:50 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:50.597050 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:50.597050')
Sat, 17 Mar 2012 08:53:50 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:53:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:53:51.287086 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:53:51.287086')
Sat, 17 Mar 2012 08:53:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:45 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:45.197765 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:45.197765')
Sat, 17 Mar 2012 08:55:45 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:47.863569 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:47.863569')
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:55:47.954188 ; args=(u'2012-03-10 08:55:47.954188',)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:55:47.954222 ; args=(u'2012-03-16 08:55:47.954222',)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:55:47.954237 ; args=(u'2012-03-17 07:55:47.954237',)
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:55:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.004) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = admin_tools ; args=(u'admin_tools',)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:55:48.146217 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:55:48.146217', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:48.474095 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:48.474095')
Sat, 17 Mar 2012 08:55:48 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:49 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:49.077564 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:49.077564')
Sat, 17 Mar 2012 08:55:49 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:50.864619 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:50.864619')
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = In Process ; args=(u'In Process',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order"; args=()
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status", "django_site"."id", "django_site"."domain", "django_site"."name", "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "shop_order" INNER JOIN "django_site" ON ("shop_order"."site_id" = "django_site"."id") INNER JOIN "contact_contact" ON ("shop_order"."contact_id" = "contact_contact"."id") WHERE "shop_order"."status" = In Process  ORDER BY "shop_order"."id" DESC; args=(u'In Process',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = order ; args=(u'order',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:55:50.928493 ; args=(u'2012-03-10 08:55:50.928493',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:55:50.928528 ; args=(u'2012-03-16 08:55:50.928528',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:55:50.928543 ; args=(u'2012-03-17 07:55:50.928543',)
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:55:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.000) SELECT MAX("shop_order"."time_stamp") AS "last", MIN("shop_order"."time_stamp") AS "first" FROM "shop_order" WHERE "shop_order"."status" = In Process ; args=(u'In Process',)
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.000) SELECT DISTINCT django_date_trunc('year', "shop_order"."time_stamp") FROM "shop_order" WHERE ("shop_order"."status" = In Process  AND "shop_order"."time_stamp" IS NOT NULL) ORDER BY 1 ASC; args=(u'In Process',)
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:55:51.092591 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:55:51.092591', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.051) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:51.239072 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:51.239072')
Sat, 17 Mar 2012 08:55:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:52 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:52.219660 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:52.219660')
Sat, 17 Mar 2012 08:55:52 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:53 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:53.571191 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:53.571191')
Sat, 17 Mar 2012 08:55:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:58 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:58.974848 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:58.974848')
Sat, 17 Mar 2012 08:55:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "auth_user"; args=()
Sat, 17 Mar 2012 08:55:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" ORDER BY "auth_user"."username" ASC; args=()
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = user ; args=(u'user',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:55:59.028126 ; args=(u'2012-03-10 08:55:59.028126',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:55:59.028166 ; args=(u'2012-03-16 08:55:59.028166',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:55:59.028183 ; args=(u'2012-03-17 07:55:59.028183',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:55:59.318081 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:55:59.318081', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:55:59.488670 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:55:59.488670')
Sat, 17 Mar 2012 08:55:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:00.217263 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:00.217263')
Sat, 17 Mar 2012 08:56:00 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:04 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:04.255632 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:04.255632')
Sat, 17 Mar 2012 08:56:04 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:08.777586 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:08.777586')
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "configurable_productvariation"; args=()
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" INNER JOIN "product_product" ON ("configurable_productvariation"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" DESC, "product_product"."ordering" DESC, "product_product"."name" DESC; args=()
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = productvariation ; args=(u'productvariation',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:56:08.833144 ; args=(u'2012-03-10 08:56:08.833144',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:56:08.833178 ; args=(u'2012-03-16 08:56:08.833178',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:56:08.833194 ; args=(u'2012-03-17 07:56:08.833194',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:56:08 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:56:09.143251 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:56:09.143251', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:09.335803 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:09.335803')
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:09.957776 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:09.957776')
Sat, 17 Mar 2012 08:56:09 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:15 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:15.205955 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:15.205955')
Sat, 17 Mar 2012 08:56:15 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:27.877822 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:27.877822')
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contactinteractiontype"; args=()
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "contact_contactinteractiontype"."key", "contact_contactinteractiontype"."name" FROM "contact_contactinteractiontype" ORDER BY "contact_contactinteractiontype"."key" DESC; args=()
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = contactinteractiontype ; args=(u'contactinteractiontype',)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:56:27.931203 ; args=(u'2012-03-10 08:56:27.931203',)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:56:27.931238 ; args=(u'2012-03-16 08:56:27.931238',)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:56:27.931254 ; args=(u'2012-03-17 07:56:27.931254',)
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:56:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:56:28.136840 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:56:28.136840', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:28.310333 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:28.310333')
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:28.940317 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:28.940317')
Sat, 17 Mar 2012 08:56:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:30 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:30.890918 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:30.890918')
Sat, 17 Mar 2012 08:56:30 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:34.016624 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:34.016624')
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contactorganizationrole"; args=()
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "contact_contactorganizationrole"."key", "contact_contactorganizationrole"."name" FROM "contact_contactorganizationrole" ORDER BY "contact_contactorganizationrole"."key" DESC; args=()
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = contactorganizationrole ; args=(u'contactorganizationrole',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:56:34.071761 ; args=(u'2012-03-10 08:56:34.071761',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:56:34.071798 ; args=(u'2012-03-16 08:56:34.071798',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:56:34.071815 ; args=(u'2012-03-17 07:56:34.071815',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:56:34.244253 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:56:34.244253', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:34.492846 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:34.492846')
Sat, 17 Mar 2012 08:56:34 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:35 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:35.371654 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:35.371654')
Sat, 17 Mar 2012 08:56:35 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:36 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:36.955074 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:36.955074')
Sat, 17 Mar 2012 08:56:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:38.705356 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:38.705356')
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contactrole"; args=()
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" ORDER BY "contact_contactrole"."key" DESC; args=()
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = contactrole ; args=(u'contactrole',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:56:38.761134 ; args=(u'2012-03-10 08:56:38.761134',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:56:38.761167 ; args=(u'2012-03-16 08:56:38.761167',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:56:38.761183 ; args=(u'2012-03-17 07:56:38.761183',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:56:38 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:56:38.889701 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:56:38.889701', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:56:39 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:39.016979 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:39.016979')
Sat, 17 Mar 2012 08:56:39 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:39 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:39.707081 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:39.707081')
Sat, 17 Mar 2012 08:56:39 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:41 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:41.054346 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:41.054346')
Sat, 17 Mar 2012 08:56:41 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:45.296323 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:45.296323')
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contactorganization"; args=()
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "contact_contactorganization"."key", "contact_contactorganization"."name" FROM "contact_contactorganization" ORDER BY "contact_contactorganization"."key" DESC; args=()
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = contactorganization ; args=(u'contactorganization',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:56:45.346301 ; args=(u'2012-03-10 08:56:45.346301',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:56:45.346335 ; args=(u'2012-03-16 08:56:45.346335',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:56:45.346351 ; args=(u'2012-03-17 07:56:45.346351',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.001) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:56:45.488943 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:56:45.488943', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:45.697005 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:45.697005')
Sat, 17 Mar 2012 08:56:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:46 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:46.353370 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:46.353370')
Sat, 17 Mar 2012 08:56:46 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:48.346261 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:48.346261')
Sat, 17 Mar 2012 08:56:48 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:50.380973 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:50.380973')
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_organization"; args=()
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "contact_contactorganization"."key", "contact_contactorganization"."name" FROM "contact_contactorganization"; args=()
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "contact_contactorganizationrole"."key", "contact_contactorganizationrole"."name" FROM "contact_contactorganizationrole"; args=()
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "contact_organization"."id", "contact_organization"."name", "contact_organization"."type_id", "contact_organization"."role_id", "contact_organization"."create_date", "contact_organization"."notes" FROM "contact_organization" ORDER BY "contact_organization"."id" DESC; args=()
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = organization ; args=(u'organization',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:56:50.436242 ; args=(u'2012-03-10 08:56:50.436242',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:56:50.436280 ; args=(u'2012-03-16 08:56:50.436280',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:56:50.436296 ; args=(u'2012-03-17 07:56:50.436296',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT "contact_contactorganization"."key", "contact_contactorganization"."name" FROM "contact_contactorganization" WHERE "contact_contactorganization"."key" = Company ; args=(u'Company',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.001) SELECT "contact_contactorganizationrole"."key", "contact_contactorganizationrole"."name" FROM "contact_contactorganizationrole" WHERE "contact_contactorganizationrole"."key" = Supplier ; args=(u'Supplier',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:56:50.612011 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:56:50.612011', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:50.799126 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:50.799126')
Sat, 17 Mar 2012 08:56:50 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:51.459769 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:51.459769')
Sat, 17 Mar 2012 08:56:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:56:52 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:56:52.568341 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:56:52.568341')
Sat, 17 Mar 2012 08:56:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:02.155570 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:02.155570')
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category"; args=()
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = category ; args=(u'category',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:57:02.225340 ; args=(u'2012-03-10 08:57:02.225340',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:57:02.225383 ; args=(u'2012-03-16 08:57:02.225383',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:57:02.225400 ; args=(u'2012-03-17 07:57:02.225400',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:57:02.521466 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:57:02.521466', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:02.694792 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:02.694792')
Sat, 17 Mar 2012 08:57:02 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:03 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:03.463994 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:03.463994')
Sat, 17 Mar 2012 08:57:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:04 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:04.858130 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:04.858130')
Sat, 17 Mar 2012 08:57:04 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:21.752610 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:21.752610')
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderauthorization"; args=()
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.001) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete", "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status", "django_site"."id", "django_site"."domain", "django_site"."name", "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date", "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id", T6."id", T6."site_id", T6."contact_id", T6."ship_addressee", T6."ship_street1", T6."ship_street2", T6."ship_city", T6."ship_state", T6."ship_postal_code", T6."ship_country", T6."bill_addressee", T6."bill_street1", T6."bill_street2", T6."bill_city", T6."bill_state", T6."bill_postal_code", T6."bill_country", T6."notes", T6."sub_total", T6."total", T6."discount_code", T6."discount", T6."method", T6."shipping_description", T6."shipping_method", T6."shipping_model", T6."shipping_cost", T6."shipping_discount", T6."tax", T6."time_stamp", T6."status", T7."id", T7."domain", T7."name", T8."id", T8."title", T8."first_name", T8."last_name", T8."user_id", T8."role_id", T8."organization_id", T8."dob", T8."email", T8."notes", T8."create_date" FROM "shop_orderauthorization" INNER JOIN "shop_order" ON ("shop_orderauthorization"."order_id" = "shop_order"."id") INNER JOIN "django_site" ON ("shop_order"."site_id" = "django_site"."id") INNER JOIN "contact_contact" ON ("shop_order"."contact_id" = "contact_contact"."id") INNER JOIN "shop_orderpayment" ON ("shop_orderauthorization"."capture_id" = "shop_orderpayment"."id") INNER JOIN "shop_order" T6 ON ("shop_orderpayment"."order_id" = T6."id") INNER JOIN "django_site" T7 ON (T6."site_id" = T7."id") INNER JOIN "contact_contact" T8 ON (T6."contact_id" = T8."id") ORDER BY "shop_orderauthorization"."id" DESC; args=()
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = orderauthorization ; args=(u'orderauthorization',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:57:21.806774 ; args=(u'2012-03-10 08:57:21.806774',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:57:21.806808 ; args=(u'2012-03-16 08:57:21.806808',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:57:21.806824 ; args=(u'2012-03-17 07:57:21.806824',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:57:21 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:57:21.932379 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:57:21.932379', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:57:22 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:22.211350 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:22.211350')
Sat, 17 Mar 2012 08:57:22 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:23 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:23.006311 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:23.006311')
Sat, 17 Mar 2012 08:57:23 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:24 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:24.537794 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:24.537794')
Sat, 17 Mar 2012 08:57:24 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:26.168726 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:26.168726')
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "django_site"; args=()
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = site ; args=(u'site',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:57:26.226849 ; args=(u'2012-03-10 08:57:26.226849',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:57:26.226890 ; args=(u'2012-03-16 08:57:26.226890',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:57:26.226906 ; args=(u'2012-03-17 07:57:26.226906',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:57:26.384867 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:57:26.384867', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.034) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:26.531243 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:26.531243')
Sat, 17 Mar 2012 08:57:26 django.db.backends DEBUG    (0.011) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:27 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:27.194892 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:27.194892')
Sat, 17 Mar 2012 08:57:27 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:28 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 08:57:28.558701 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 08:57:28.558701')
Sat, 17 Mar 2012 08:57:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:41 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:57:41.985514 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:57:41.985514')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:57:42 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:57:42.351236 ; args=(u'2012-03-10 08:57:42.351236',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:57:42.351269 ; args=(u'2012-03-16 08:57:42.351269',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:57:42.351285 ; args=(u'2012-03-17 07:57:42.351285',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.004) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 08:57:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:57:43.080119 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:57:43.080119', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:57:43.596000 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:57:43.596000')
Sat, 17 Mar 2012 08:57:43 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:57:44.390460 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:57:44.390460')
Sat, 17 Mar 2012 08:57:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:57:54 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:57:54.880647 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:57:54.880647')
Sat, 17 Mar 2012 08:57:54 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:58:24.485796 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:58:24.485796')
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:24 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:24 satchmo_store.contact.forms DEBUG    Saving contact info for Jan Kowalski
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" WHERE "contact_contactrole"."key" = Customer ; args=(u'Customer',)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_contact" WHERE "contact_contact"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) UPDATE "contact_contact" SET "title" = , "first_name" = Jan, "last_name" = Kowalski, "user_id" = 1, "role_id" = Customer, "organization_id" = NULL, "dob" = NULL, "email" = coalas@o2.pl, "notes" = , "create_date" = 2012-01-18 WHERE "contact_contact"."id" = 4 ; args=(u'', u'Jan', u'Kowalski', 1, u'Customer', u'coalas@o2.pl', u'', '2012-01-18', 4)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 4)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = True WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, True, 4)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 5)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:58:24 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = False WHERE "contact_addressbook"."id" = 5 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, True, False, 5)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = False WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', False, 5)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = True WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', True, 5)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', u'', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (5) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (5); args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (4, 59, 1.000000, 1.6000000000, 0.3680000000, 1.6000000000, 0.3680000000, None, False, None); args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', None, False, None)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 4, "product_id" = 59, "quantity" = 1.000000, "unit_price" = 1.6000000000, "unit_tax" = 0.3680000000, "line_item_price" = 1.6000000000, "tax" = 0.3680000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 5 ; args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', False, u'0E-10', 5)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 4  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(4, True)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:25 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:25 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (7); args=(7,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (8); args=(8,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Default, 0.3680000000); args=(4, 'area', u'Default', u'0.3680000000')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Shipping, 0E-10); args=(4, 'area', 'Shipping', u'0E-10')
Sat, 17 Mar 2012 08:58:26 satchmo_store.shop.models DEBUG    Order #4, recalc: sub_total=zł 1,60, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,37
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:58:26.407878 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:58:26.407878', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:58:26.564025 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:58:26.564025')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sat, 17 Mar 2012 08:58:26 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 1.60  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('1.60'), '2012-03-17')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 1.60 ); args=(1, Decimal('1.60'))
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 08:58:26 shipping.Tiered DEBUG    No tiered price found for Carrier: Poczta Polska: total=1.60
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 1.60  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('1.60'), '2012-03-17')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 1.60 ); args=(2, Decimal('1.60'))
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 08:58:26 shipping.Tiered DEBUG    No tiered price found for Carrier: K-EX: total=1.60
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:26 payship      DEBUG    Skipping pay ship, nothing to select for shipping
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', u'', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (5) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(5,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (5); args=(5,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:26 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:27 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:27 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (4, 59, 1.000000, 1.6000000000, 0.3680000000, 1.6000000000, 0.3680000000, None, False, None); args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', None, False, None)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:27 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:27 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 4, "product_id" = 59, "quantity" = 1.000000, "unit_price" = 1.6000000000, "unit_tax" = 0.3680000000, "line_item_price" = 1.6000000000, "tax" = 0.3680000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 5 ; args=(4, 59, u'1.000000', u'1.6000000000', u'0.3680000000', u'1.6000000000', u'0.3680000000', False, u'0E-10', 5)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 4  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(4, True)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 08:58:27 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (7); args=(7,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (8); args=(8,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Default, 0.3680000000); args=(4, 'area', u'Default', u'0.3680000000')
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Shipping, 0E-10); args=(4, 'area', 'Shipping', u'0E-10')
Sat, 17 Mar 2012 08:58:27 satchmo_store.shop.models DEBUG    Order #4, recalc: sub_total=zł 1,60, shipping=zł 0,00, discount=zł 0,00, tax=zł 0,37
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 1.6000000000, "total" = 1.9680000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 0.3680000000, "time_stamp" = 2012-03-17 08:52:28.608981, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'1.6000000000', u'1.9680000000', '', u'0E-10', u'Online', u'0E-10', u'0E-10', u'0.3680000000', u'2012-03-17 08:52:28.608981', u'', 4)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 4  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(4, u'DOTPAY')
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 4  AND "shop_orderpendingpayment"."payment" = DOTPAY ) LIMIT 1; args=(4, u'DOTPAY')
Sat, 17 Mar 2012 08:58:27 payment.modules.base DEBUG    Found pending payment: Order Pending Payment #4
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 4  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(4, u'DOTPAY')
Sat, 17 Mar 2012 08:58:27 payment.modules.base DEBUG    Deleting 1 expired pending payment entries for order #4
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 4  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(4, u'DOTPAY')
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."capture_id" IN (4); args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."capture_id" IN (4); args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.033) SELECT "payment_creditcarddetail"."id", "payment_creditcarddetail"."orderpayment_id", "payment_creditcarddetail"."credit_type", "payment_creditcarddetail"."display_cc", "payment_creditcarddetail"."encrypted_cc", "payment_creditcarddetail"."expire_month", "payment_creditcarddetail"."expire_year", "payment_creditcarddetail"."card_holder", "payment_creditcarddetail"."start_month", "payment_creditcarddetail"."start_year", "payment_creditcarddetail"."issue_num" FROM "payment_creditcarddetail" WHERE "payment_creditcarddetail"."orderpayment_id" IN (4); args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpayment" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 08:58:27 payment.modules.base DEBUG    Creating pending DOTPAY payment of 0.00 for Order #4: Jan Kowalski
Sat, 17 Mar 2012 08:58:27 satchmo_store.shop.models DEBUG    Pending Payment - creating linked payment
Sat, 17 Mar 2012 08:58:27 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id") VALUES (DOTPAY, 0E-10, 2012-03-17 08:58:27.924330, LINKED, None, , 4); args=(u'DOTPAY', u'0E-10', u'2012-03-17 08:58:27.924330', 'LINKED', None, '', 4)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpendingpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id", "capture_id") VALUES (DOTPAY, 0E-10, None, None, None, None, 4, 4); args=(u'DOTPAY', u'0E-10', None, None, None, None, 4, 4)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:58:28.079989 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:58:28.079989', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:58:28.180975 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:58:28.180975')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 08:58:28 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-notify_callback
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 08:58:28 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-success
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 08:58:28 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-failure
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = DOTPAY_DOTID ); args=(1, 1, 'PAYMENT_DOTPAY', 'DOTPAY_DOTID')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = confirm ; args=(u'confirm',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 08:58:28.382574 ; args=(u'2012-03-10 08:58:28.382574',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 08:58:28.382618 ; args=(u'2012-03-16 08:58:28.382618',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 07:58:28.382634 ; args=(u'2012-03-17 07:58:28.382634',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(4, u'shipping')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4, u'shipping')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(4, u'shipping')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 4  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4, u'shipping')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE ("shop_orderpayment"."order_id" = 4  AND NOT (("shop_orderpayment"."transaction_id" = PENDING  AND "shop_orderpayment"."transaction_id" IS NOT NULL) AND "shop_orderpayment"."transaction_id" IS NOT NULL)); args=(4, 'PENDING')
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = order_details ; args=(u'order_details',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 08:58:28 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 08:58:28.700287 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 08:58:28.700287', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 08:58:29 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:58:29.277333 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:58:29.277333')
Sat, 17 Mar 2012 08:58:29 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:58:30 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:58:30.009135 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:58:30.009135')
Sat, 17 Mar 2012 08:58:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 08:59:45 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 08:59:45.443281 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 08:59:45.443281')
Sat, 17 Mar 2012 08:59:45 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:12.361848 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:12.361848')
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cache ; args=(u'cache',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:12.421943 ; args=(u'2012-03-10 09:07:12.421943',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:12.421976 ; args=(u'2012-03-16 09:07:12.421976',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:12.421992 ; args=(u'2012-03-17 08:07:12.421992',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:12 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:12.551460 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:12.551460', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:13 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:13.335007 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:13.335007')
Sat, 17 Mar 2012 09:07:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:16.119104 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:16.119104')
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = view ; args=(u'view',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:16.164778 ; args=(u'2012-03-10 09:07:16.164778',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:16.164812 ; args=(u'2012-03-16 09:07:16.164812',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:16.164828 ; args=(u'2012-03-17 08:07:16.164828',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:16.289751 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:16.289751', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:16.947811 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:16.947811')
Sat, 17 Mar 2012 09:07:16 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:22.343141 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:22.343141')
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = delete ; args=(u'delete',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:22.386929 ; args=(u'2012-03-10 09:07:22.386929',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:22.386973 ; args=(u'2012-03-16 09:07:22.386973',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:22.386990 ; args=(u'2012-03-17 08:07:22.386990',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:22 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:22.467852 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:22.467852', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:23 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:23.130759 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:23.130759')
Sat, 17 Mar 2012 09:07:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:27.418465 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:27.418465')
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:27.449025 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:27.449025')
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cache ; args=(u'cache',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:27.503773 ; args=(u'2012-03-10 09:07:27.503773',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:27.503806 ; args=(u'2012-03-16 09:07:27.503806',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:27.503822 ; args=(u'2012-03-17 08:07:27.503822',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:27 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:27.568524 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:27.568524', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:28 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:28.289754 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:28.289754')
Sat, 17 Mar 2012 09:07:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:30.199125 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:30.199125')
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = delete ; args=(u'delete',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:30.245805 ; args=(u'2012-03-10 09:07:30.245805',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:30.245837 ; args=(u'2012-03-16 09:07:30.245837',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:30.245853 ; args=(u'2012-03-17 08:07:30.245853',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:30.308943 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:30.308943', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:30.923651 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:30.923651')
Sat, 17 Mar 2012 09:07:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:35.965737 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:35.965737')
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.002) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cache ; args=(u'cache',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:36.016687 ; args=(u'2012-03-10 09:07:36.016687',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:36.016724 ; args=(u'2012-03-16 09:07:36.016724',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:36.016741 ; args=(u'2012-03-17 08:07:36.016741',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:36.079364 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:36.079364', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:36.720232 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:36.720232')
Sat, 17 Mar 2012 09:07:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:37.625090 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:37.625090')
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = view ; args=(u'view',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:37.673725 ; args=(u'2012-03-10 09:07:37.673725',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:37.673757 ; args=(u'2012-03-16 09:07:37.673757',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:37.673773 ; args=(u'2012-03-17 08:07:37.673773',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:37 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:37.733276 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:37.733276', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:38 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:38.442117 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:38.442117')
Sat, 17 Mar 2012 09:07:38 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:40.679135 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:40.679135')
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:40.758881 ; args=(u'2012-03-10 09:07:40.758881',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:40.758914 ; args=(u'2012-03-16 09:07:40.758914',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:40.758930 ; args=(u'2012-03-17 08:07:40.758930',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.004) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = admin_tools ; args=(u'admin_tools',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:40 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:40.928167 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:40.928167', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:41 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:41.231618 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:41.231618')
Sat, 17 Mar 2012 09:07:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:41 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:41.650735 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:41.650735')
Sat, 17 Mar 2012 09:07:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:45.768205 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:45.768205')
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carrier"; args=()
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" ORDER BY "tiered_carrier"."key" ASC; args=()
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = carrier ; args=(u'carrier',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:45.820611 ; args=(u'2012-03-10 09:07:45.820611',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:45.820645 ; args=(u'2012-03-16 09:07:45.820645',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:45.820661 ; args=(u'2012-03-17 08:07:45.820661',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:45 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:45.986875 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:45.986875', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:46 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:46.157167 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:46.157167')
Sat, 17 Mar 2012 09:07:46 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:46 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:46.841144 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:46.841144')
Sat, 17 Mar 2012 09:07:46 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:47 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:47.853650 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:47.853650')
Sat, 17 Mar 2012 09:07:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:47 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."id" = 2 ; args=(2,)
Sat, 17 Mar 2012 09:07:47 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" INNER JOIN "tiered_carrier" ON ("tiered_carriertranslation"."carrier_id" = "tiered_carrier"."id") WHERE "tiered_carriertranslation"."carrier_id" = 2  ORDER BY "tiered_carrier"."ordering" ASC; args=(2,)
Sat, 17 Mar 2012 09:07:47 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE "tiered_shippingtier"."carrier_id" = 2  ORDER BY "tiered_shippingtier"."min_total" ASC, "tiered_shippingtier"."expires" ASC; args=(2,)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 2 ; args=(u'2',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:07:48.067216 ; args=(u'2012-03-10 09:07:48.067216',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:07:48.067249 ; args=(u'2012-03-16 09:07:48.067249',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:07:48.067265 ; args=(u'2012-03-17 08:07:48.067265',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:07:48.434495 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:07:48.434495', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:48.753161 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:48.753161')
Sat, 17 Mar 2012 09:07:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:07:49 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:07:49.630569 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:07:49.630569')
Sat, 17 Mar 2012 09:07:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:03 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:03.871635 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:03.871635')
Sat, 17 Mar 2012 09:08:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:05 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:05.192018 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:05.192018')
Sat, 17 Mar 2012 09:08:05 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:09.911945 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:09.911945')
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "django_site"; args=()
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = site ; args=(u'site',)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:08:09.965466 ; args=(u'2012-03-10 09:08:09.965466',)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:08:09.965500 ; args=(u'2012-03-16 09:08:09.965500',)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:08:09.965515 ; args=(u'2012-03-17 08:08:09.965515',)
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:08:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:08:10.101072 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:08:10.101072', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:10.274671 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:10.274671')
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:10.966122 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:10.966122')
Sat, 17 Mar 2012 09:08:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:11 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:11.803908 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:11.803908')
Sat, 17 Mar 2012 09:08:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:14.725352 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:14.725352')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ADWORDS ); args=(1, 1, 'GOOGLE', 'ADWORDS')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ADWORDS ); args=(1, 1, 'GOOGLE', 'ADWORDS')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = ORDER_EMAIL_OWNER ); args=(1, 1, 'PAYMENT', 'ORDER_EMAIL_OWNER')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = ORDER_EMAIL_OWNER ); args=(1, 1, 'PAYMENT', 'ORDER_EMAIL_OWNER')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART_MERGE ); args=(1, 1, 'SHOP', 'PERSISTENT_CART_MERGE')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART_MERGE ); args=(1, 1, 'SHOP', 'PERSISTENT_CART_MERGE')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = HTML_EMAIL ); args=(1, 1, 'SHOP', 'HTML_EMAIL')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = HTML_EMAIL ); args=(1, 1, 'SHOP', 'HTML_EMAIL')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = LOGO_URI ); args=(1, 1, 'SHOP', 'LOGO_URI')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = LOGO_URI ); args=(1, 1, 'SHOP', 'LOGO_URI')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sat, 17 Mar 2012 09:08:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTRA_LOGGING ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTRA_LOGGING')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTRA_LOGGING ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTRA_LOGGING')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = DOTPAY_DOTID ); args=(1, 1, 'PAYMENT_DOTPAY', 'DOTPAY_DOTID')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_SIGNATURE_CODE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_SIGNATURE_CODE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TERMINAL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TERMINAL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_URL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = RENAME_IMAGES ); args=(1, 1, 'THUMBNAIL', 'RENAME_IMAGES')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = RENAME_IMAGES ); args=(1, 1, 'THUMBNAIL', 'RENAME_IMAGES')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_CLASS ); args=(1, 1, 'TAX', 'TAX_CLASS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_CLASS ); args=(1, 1, 'TAX', 'TAX_CLASS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = PRODUCTS_TAXABLE_BY_DEFAULT ); args=(1, 1, 'TAX', 'PRODUCTS_TAXABLE_BY_DEFAULT')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = IMAGE_DIR ); args=(1, 1, 'PRODUCT', 'IMAGE_DIR')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = IMAGE_DIR ); args=(1, 1, 'PRODUCT', 'IMAGE_DIR')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = MEASUREMENT_SYSTEM ); args=(1, 1, 'PRODUCT', 'MEASUREMENT_SYSTEM')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SEARCH_SHOW_PRODUCTVARIATIONS ); args=(1, 1, 'PRODUCT', 'SEARCH_SHOW_PRODUCTVARIATIONS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SEARCH_SHOW_PRODUCTVARIATIONS ); args=(1, 1, 'PRODUCT', 'SEARCH_SHOW_PRODUCTVARIATIONS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = TRACK_INVENTORY ); args=(1, 1, 'PRODUCT', 'TRACK_INVENTORY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = TRACK_INVENTORY ); args=(1, 1, 'PRODUCT', 'TRACK_INVENTORY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = AUTH_EARLY ); args=(1, 1, 'PAYMENT', 'AUTH_EARLY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = AUTH_EARLY ); args=(1, 1, 'PAYMENT', 'AUTH_EARLY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = CRON_KEY ); args=(1, 1, 'PAYMENT', 'CRON_KEY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = CRON_KEY ); args=(1, 1, 'PAYMENT', 'CRON_KEY')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = CC_NUM_YEARS ); args=(1, 1, 'PAYMENT', 'CC_NUM_YEARS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = CC_NUM_YEARS ); args=(1, 1, 'PAYMENT', 'CC_NUM_YEARS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = ALLOW_URL_REBILL ); args=(1, 1, 'PAYMENT', 'ALLOW_URL_REBILL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = ALLOW_URL_REBILL ); args=(1, 1, 'PAYMENT', 'ALLOW_URL_REBILL')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = STORE_CREDIT_NUMBERS ); args=(1, 1, 'PAYMENT', 'STORE_CREDIT_NUMBERS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = STORE_CREDIT_NUMBERS ); args=(1, 1, 'PAYMENT', 'STORE_CREDIT_NUMBERS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = DOWNLOAD_PDFS ); args=(1, 1, 'SHIPPING', 'DOWNLOAD_PDFS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = DOWNLOAD_PDFS ); args=(1, 1, 'SHIPPING', 'DOWNLOAD_PDFS')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = settings ; args=(u'settings',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:08:15.494997 ; args=(u'2012-03-10 09:08:15.494997',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:08:15.495030 ; args=(u'2012-03-16 09:08:15.495030',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:08:15.495046 ; args=(u'2012-03-17 08:08:15.495046',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:08:15 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:08:15.735908 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:08:15.735908', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:08:16 django.db.backends DEBUG    (0.041) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:16.042135 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:16.042135')
Sat, 17 Mar 2012 09:08:16 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:08:16 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:08:16.757849 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:08:16.757849')
Sat, 17 Mar 2012 09:08:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:19.807988 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:19.807988')
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:09:19.887659 ; args=(u'2012-03-10 09:09:19.887659',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:09:19.887692 ; args=(u'2012-03-16 09:09:19.887692',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:09:19.887708 ; args=(u'2012-03-17 08:09:19.887708',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:09:19 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.004) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:09:20.057767 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:09:20.057767', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:20.382722 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:20.382722')
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:20.853745 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:20.853745')
Sat, 17 Mar 2012 09:09:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:22 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:22.912379 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:22.912379')
Sat, 17 Mar 2012 09:09:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:26 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:26.133298 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:26.133298')
Sat, 17 Mar 2012 09:09:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:30 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:30.477017 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:30.477017')
Sat, 17 Mar 2012 09:09:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:48.438513 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:48.438513')
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "app_plugins_userpluginpreference"; args=()
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.001) SELECT "app_plugins_userpluginpreference"."id", "app_plugins_userpluginpreference"."user_id", "app_plugins_userpluginpreference"."plugin_id", "app_plugins_userpluginpreference"."visible", "app_plugins_userpluginpreference"."index", "app_plugins_userpluginpreference"."_order", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order", "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_userpluginpreference" INNER JOIN "auth_user" ON ("app_plugins_userpluginpreference"."user_id" = "auth_user"."id") INNER JOIN "app_plugins_plugin" ON ("app_plugins_userpluginpreference"."plugin_id" = "app_plugins_plugin"."id") INNER JOIN "app_plugins_pluginpoint" ON ("app_plugins_plugin"."point_id" = "app_plugins_pluginpoint"."id") ORDER BY "app_plugins_userpluginpreference"."_order" ASC; args=()
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = userpluginpreference ; args=(u'userpluginpreference',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:09:48.490757 ; args=(u'2012-03-10 09:09:48.490757',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:09:48.490793 ; args=(u'2012-03-16 09:09:48.490793',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:09:48.490809 ; args=(u'2012-03-17 08:09:48.490809',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:09:48.623131 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:09:48.623131', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:48.803618 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:48.803618')
Sat, 17 Mar 2012 09:09:48 django.db.backends DEBUG    (0.011) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:49 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:49.457228 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:49.457228')
Sat, 17 Mar 2012 09:09:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:50.571698 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:50.571698')
Sat, 17 Mar 2012 09:09:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:51.294534 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:51.294534')
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "app_plugins_plugin"; args=()
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" ORDER BY "app_plugins_plugin"."_order" ASC; args=()
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = plugin ; args=(u'plugin',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:09:51.344880 ; args=(u'2012-03-10 09:09:51.344880',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:09:51.344916 ; args=(u'2012-03-16 09:09:51.344916',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:09:51.344932 ; args=(u'2012-03-17 08:09:51.344932',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:09:51.484278 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:09:51.484278', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:51.713578 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:51.713578')
Sat, 17 Mar 2012 09:09:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:52 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:52.468538 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:52.468538')
Sat, 17 Mar 2012 09:09:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:53 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:53.602080 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:53.602080')
Sat, 17 Mar 2012 09:09:53 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:54.126423 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:54.126423')
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "app_plugins_pluginpoint"; args=()
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" ORDER BY "app_plugins_pluginpoint"."index" ASC; args=()
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = pluginpoint ; args=(u'pluginpoint',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:09:54.179003 ; args=(u'2012-03-10 09:09:54.179003',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:09:54.179036 ; args=(u'2012-03-16 09:09:54.179036',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:09:54.179052 ; args=(u'2012-03-17 08:09:54.179052',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:09:54.318018 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:09:54.318018', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:54.513724 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:54.513724')
Sat, 17 Mar 2012 09:09:54 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:55 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:55.187725 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:55.187725')
Sat, 17 Mar 2012 09:09:55 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:09:56 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:09:56.437121 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:09:56.437121')
Sat, 17 Mar 2012 09:09:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:11.776526 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:11.776526')
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:10:11.845514 ; args=(u'2012-03-10 09:10:11.845514',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:10:11.845549 ; args=(u'2012-03-16 09:10:11.845549',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:10:11.845565 ; args=(u'2012-03-17 08:10:11.845565',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 09:10:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 09:10:12 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:10:12.624852 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:10:12.624852', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:12.890738 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:12.890738')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:12.942885 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:12.942885')
Sat, 17 Mar 2012 09:10:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:13 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:13.717024 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:13.717024')
Sat, 17 Mar 2012 09:10:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:13 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:13.924320 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:13.924320')
Sat, 17 Mar 2012 09:10:13 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:20.592643 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:20.592643')
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 09:10:20 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:10:20.902367 ; args=(u'2012-03-10 09:10:20.902367',)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:10:20.902409 ; args=(u'2012-03-16 09:10:20.902409',)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:10:20.902426 ; args=(u'2012-03-17 08:10:20.902426',)
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:10:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:10:21.181751 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:10:21.181751', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:21.490287 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:21.490287')
Sat, 17 Mar 2012 09:10:21 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:22 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:22.246084 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:22.246084')
Sat, 17 Mar 2012 09:10:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:10:22 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:10:22.403427 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:10:22.403427')
Sat, 17 Mar 2012 09:10:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:15.805180 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:15.805180')
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitem"; args=()
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" ORDER BY "shop_orderitem"."id" ASC; args=()
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = orderitem ; args=(u'orderitem',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:48:15.869902 ; args=(u'2012-03-10 09:48:15.869902',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:48:15.869936 ; args=(u'2012-03-16 09:48:15.869936',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:48:15.869951 ; args=(u'2012-03-17 08:48:15.869951',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 09:48:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 63 ; args=(63,)
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:48:16.048557 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:48:16.048557', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:16.253893 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:16.253893')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:16.790913 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:16.790913')
Sat, 17 Mar 2012 09:48:16 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:17 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:17.944569 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:17.944569')
Sat, 17 Mar 2012 09:48:17 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:19.676811 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:19.676811')
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order"; args=()
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status", "django_site"."id", "django_site"."domain", "django_site"."name", "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "shop_order" INNER JOIN "django_site" ON ("shop_order"."site_id" = "django_site"."id") INNER JOIN "contact_contact" ON ("shop_order"."contact_id" = "contact_contact"."id") ORDER BY "shop_order"."id" DESC; args=()
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = order ; args=(u'order',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:48:19.736788 ; args=(u'2012-03-10 09:48:19.736788',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:48:19.736830 ; args=(u'2012-03-16 09:48:19.736830',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:48:19.736847 ; args=(u'2012-03-17 08:48:19.736847',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT MAX("shop_order"."time_stamp") AS "last", MIN("shop_order"."time_stamp") AS "first" FROM "shop_order"; args=()
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.001) SELECT DISTINCT django_date_trunc('day', "shop_order"."time_stamp") FROM "shop_order" WHERE (django_extract('month', "shop_order"."time_stamp") = 3 AND "shop_order"."time_stamp" BETWEEN 2012-01-01 and 2012-12-31 23:59:59.999999 AND "shop_order"."time_stamp" IS NOT NULL) ORDER BY 1 ASC; args=(3, '2012-01-01', '2012-12-31 23:59:59.999999')
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 3 ; args=(3,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 3  AND "shop_orderauthorization"."complete" = False ); args=(3, False)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 2 ; args=(2,)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 2  AND "shop_orderauthorization"."complete" = False ); args=(2, False)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:48:19 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:48:19.970986 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:48:19.970986', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:48:20 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:20.114619 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:20.114619')
Sat, 17 Mar 2012 09:48:20 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:20 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:20.514892 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:20.514892')
Sat, 17 Mar 2012 09:48:20 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:22.512266 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:22.512266')
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderstatus"."id", "shop_orderstatus"."order_id", "shop_orderstatus"."status", "shop_orderstatus"."notes", "shop_orderstatus"."time_stamp" FROM "shop_orderstatus" WHERE "shop_orderstatus"."order_id" = 4  ORDER BY "shop_orderstatus"."time_stamp" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_ordervariable"."id", "shop_ordervariable"."order_id", "shop_ordervariable"."key", "shop_ordervariable"."value" FROM "shop_ordervariable" WHERE "shop_ordervariable"."order_id" = 4  ORDER BY "shop_ordervariable"."key" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."order_id" = 4  ORDER BY "shop_orderauthorization"."id" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4  ORDER BY "shop_orderpayment"."id" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderpaymentfailure"."id", "shop_orderpaymentfailure"."payment", "shop_orderpaymentfailure"."amount", "shop_orderpaymentfailure"."time_stamp", "shop_orderpaymentfailure"."transaction_id", "shop_orderpaymentfailure"."details", "shop_orderpaymentfailure"."reason_code", "shop_orderpaymentfailure"."order_id" FROM "shop_orderpaymentfailure" WHERE "shop_orderpaymentfailure"."order_id" = 4  ORDER BY "shop_orderpaymentfailure"."id" ASC; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = orderitem  AND "django_content_type"."app_label" = shop ); args=('orderitem', 'shop')
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = ordertaxdetail  AND "django_content_type"."app_label" = shop ); args=('ordertaxdetail', 'shop')
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = orderpayment  AND "django_content_type"."app_label" = shop ); args=('orderpayment', 'shop')
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = order  AND "django_content_type"."app_label" = shop ); args=('order', 'shop')
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 4 ; args=(u'4',)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 09:48:22.960128 ; args=(u'2012-03-10 09:48:22.960128',)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 09:48:22.960166 ; args=(u'2012-03-16 09:48:22.960166',)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 08:48:22.960182 ; args=(u'2012-03-17 08:48:22.960182',)
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 09:48:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment"; args=()
Sat, 17 Mar 2012 09:48:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 09:48:23.701617 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 09:48:23.701617', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:23.860932 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:23.860932')
Sat, 17 Mar 2012 09:48:23 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:48:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 09:48:24.724122 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 09:48:24.724122')
Sat, 17 Mar 2012 09:48:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 09:56:31 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 09:56:31.774026 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 09:56:31.774026')
Sat, 17 Mar 2012 09:56:31 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:34 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:34.978994 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:34.978994')
Sat, 17 Mar 2012 10:01:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:01:35.063312 ; args=(u'2012-03-10 10:01:35.063312',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:01:35.063353 ; args=(u'2012-03-16 10:01:35.063353',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:01:35.063370 ; args=(u'2012-03-17 09:01:35.063370',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:35 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:35 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:35 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:35 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:01:35 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:01:35.859082 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:01:35.859082', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.009167 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.009167')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.146370 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.146370')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.190368 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.190368')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.026) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.244852 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.244852')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.030) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.324179 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.324179')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.402927 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.402927')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.448700 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.448700')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.893741 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.893741')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.923904 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.923904')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.032) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:36.954788 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:36.954788')
Sat, 17 Mar 2012 10:01:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.009805 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.009805')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.054681 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.054681')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.099393 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.099393')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.146402 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.146402')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.180190 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.180190')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.245239 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.245239')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.280401 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.280401')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.311005 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.311005')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.360953 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.360953')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.384427 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.384427')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.420381 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.420381')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.462086 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.462086')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.486135 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.486135')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.522239 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.522239')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.548253 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.548253')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.590655 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.590655')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.623024 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.623024')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.663720 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.663720')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.694099 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.694099')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.718308 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.718308')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.763542 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.763542')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.799069 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.799069')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.853966 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.853966')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:37.893244 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:37.893244')
Sat, 17 Mar 2012 10:01:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:38 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:38.039496 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:38.039496')
Sat, 17 Mar 2012 10:01:38 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:39 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:39.493837 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:39.493837')
Sat, 17 Mar 2012 10:01:39 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:46.157373 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:46.157373')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."id" = 13  AND "shop_cartitem"."cart_id" = 9 ); args=(13, 9)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 13  LIMIT 1; args=(13,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 9, "product_id" = 59, "quantity" = 50.000000 WHERE "shop_cartitem"."id" = 13 ; args=(9, 59, u'50.000000', 13)
Sat, 17 Mar 2012 10:01:46 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:46 satchmo_store.shop.models INFO     Deleting incomplete order #4 from database
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_ordervariable"."id", "shop_ordervariable"."order_id", "shop_ordervariable"."key", "shop_ordervariable"."value" FROM "shop_ordervariable" WHERE "shop_ordervariable"."order_id" IN (4) ORDER BY "shop_ordervariable"."key" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" IN (4) ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (5) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(5,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_orderstatus"."id", "shop_orderstatus"."order_id", "shop_orderstatus"."status", "shop_orderstatus"."notes", "shop_orderstatus"."time_stamp" FROM "shop_orderstatus" WHERE "shop_orderstatus"."order_id" IN (4) ORDER BY "shop_orderstatus"."time_stamp" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."capture_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."capture_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.073) SELECT "payment_creditcarddetail"."id", "payment_creditcarddetail"."orderpayment_id", "payment_creditcarddetail"."credit_type", "payment_creditcarddetail"."display_cc", "payment_creditcarddetail"."encrypted_cc", "payment_creditcarddetail"."expire_month", "payment_creditcarddetail"."expire_year", "payment_creditcarddetail"."card_holder", "payment_creditcarddetail"."start_month", "payment_creditcarddetail"."start_year", "payment_creditcarddetail"."issue_num" FROM "payment_creditcarddetail" WHERE "payment_creditcarddetail"."orderpayment_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_orderpaymentfailure"."id", "shop_orderpaymentfailure"."payment", "shop_orderpaymentfailure"."amount", "shop_orderpaymentfailure"."time_stamp", "shop_orderpaymentfailure"."transaction_id", "shop_orderpaymentfailure"."details", "shop_orderpaymentfailure"."reason_code", "shop_orderpaymentfailure"."order_id" FROM "shop_orderpaymentfailure" WHERE "shop_orderpaymentfailure"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" IN (4) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (5); args=(5,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpayment" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (8, 7); args=(8, 7)
Sat, 17 Mar 2012 10:01:46 django.db.backends DEBUG    (0.000) DELETE FROM "shop_order" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = YjU3MzBiYTlhNzI1MmVkYWM4MTRhY2QzMmFjNWM1NTAzOGU5ZGRmNDqAAn1xAShVDV9hdXRoX3Vz
ZXJfaWRLAVUKdGVzdGNvb2tpZVUGd29ya2VkVQRjYXJ0SwlVEl9hdXRoX3VzZXJfYmFja2VuZFUu
c2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUGY3VzdElESwR1
Lg==
, "expire_date" = 2012-03-31 10:01:47.042741 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('YjU3MzBiYTlhNzI1MmVkYWM4MTRhY2QzMmFjNWM1NTAzOGU5ZGRmNDqAAn1xAShVDV9hdXRoX3Vz\nZXJfaWRLAVUKdGVzdGNvb2tpZVUGd29ya2VkVQRjYXJ0SwlVEl9hdXRoX3VzZXJfYmFja2VuZFUu\nc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUGY3VzdElESwR1\nLg==\n', u'2012-03-31 10:01:47.042741', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:47.147666 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:47.147666')
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:01:47.215219 ; args=(u'2012-03-10 10:01:47.215219',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:01:47.215253 ; args=(u'2012-03-16 10:01:47.215253',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:01:47.215270 ; args=(u'2012-03-17 09:01:47.215270',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:47 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:47 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:47 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:47 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:01:47.593622 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:01:47.593622', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:47.927853 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:47.927853')
Sat, 17 Mar 2012 10:01:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:48 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:48.302254 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:48.302254')
Sat, 17 Mar 2012 10:01:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:50.386128 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:50.386128')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:50 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:01:50.747515 ; args=(u'2012-03-10 10:01:50.747515',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:01:50.747558 ; args=(u'2012-03-16 10:01:50.747558',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:01:50.747575 ; args=(u'2012-03-17 09:01:50.747575',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:01:51.038353 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:01:51.038353', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:51.367733 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:51.367733')
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:51.730558 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:51.730558')
Sat, 17 Mar 2012 10:01:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:56.900146 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:56.900146')
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 satchmo_store.contact.forms DEBUG    Saving contact info for Jan Kowalski
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" WHERE "contact_contactrole"."key" = Customer ; args=(u'Customer',)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_contact" WHERE "contact_contact"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) UPDATE "contact_contact" SET "title" = , "first_name" = Jan, "last_name" = Kowalski, "user_id" = 1, "role_id" = Customer, "organization_id" = NULL, "dob" = NULL, "email" = coalas@o2.pl, "notes" = , "create_date" = 2012-01-18 WHERE "contact_contact"."id" = 4 ; args=(u'', u'Jan', u'Kowalski', 1, u'Customer', u'coalas@o2.pl', u'', '2012-01-18', 4)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) DELETE FROM "contact_addressbook" WHERE "id" IN (5); args=(5,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, False, False, 4)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) UPDATE "contact_addressbook" SET "contact_id" = 4, "description" = , "addressee" = Jan Kowalski, "street1" = Toruńska 20, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-747, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = True WHERE "contact_addressbook"."id" = 4 ; args=(4, u'', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'', u'Gda\u0144sk', u'80-747', 176, True, True, 4)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 4  AND "contact_phonenumber"."primary" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = False WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', False, 5)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 4, "type" = , "phone" = +48 58 7634485, "primary" = True WHERE "contact_phonenumber"."id" = 5 ; args=(4, u'', u'+48 58 7634485', True, 5)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_billing" = True ); args=(4, True)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.020) INSERT INTO "shop_order" ("site_id", "contact_id", "ship_addressee", "ship_street1", "ship_street2", "ship_city", "ship_state", "ship_postal_code", "ship_country", "bill_addressee", "bill_street1", "bill_street2", "bill_city", "bill_state", "bill_postal_code", "bill_country", "notes", "sub_total", "total", "discount_code", "discount", "method", "shipping_description", "shipping_method", "shipping_model", "shipping_cost", "shipping_discount", "tax", "time_stamp", "status") VALUES (1, 4, Jan Kowalski, Toruńska 20, , Gdańsk, , 80-747, PL, Jan Kowalski, Toruńska 20, , Gdańsk, , 80-747, PL, None, 80.0000000000, 0E-10, , None, Online, None, None, None, None, None, 0E-10, 2012-03-17 10:01:57.696850, ); args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', None, u'80.0000000000', u'0E-10', '', None, 'Online', None, None, None, None, None, u'0E-10', u'2012-03-17 10:01:57.696850', '')
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:57 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (4, 59, 50.000000, 1.6000000000, 0.3680000000, 80.0000000000, 18.4000000000, None, False, None); args=(4, 59, u'50.000000', u'1.6000000000', u'0.3680000000', u'80.0000000000', u'18.4000000000', None, False, None)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 5  LIMIT 1; args=(5,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 4, "product_id" = 59, "quantity" = 50.000000, "unit_price" = 1.6000000000, "unit_tax" = 0.3680000000, "line_item_price" = 80.0000000000, "tax" = 18.4000000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 5 ; args=(4, 59, u'50.000000', u'1.6000000000', u'0.3680000000', u'80.0000000000', u'18.4000000000', False, u'0E-10', 5)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 4  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(4, True)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Default, 18.4000000000); args=(4, 'area', u'Default', u'18.4000000000')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Shipping, 0E-10); args=(4, 'area', 'Shipping', u'0E-10')
Sat, 17 Mar 2012 10:01:58 satchmo_store.shop.models DEBUG    Order #4, recalc: sub_total=zł 80,00, shipping=zł 0,00, discount=zł 0,00, tax=zł 18,40
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 4  LIMIT 1; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 4, "ship_addressee" = Jan Kowalski, "ship_street1" = Toruńska 20, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-747, "ship_country" = PL, "bill_addressee" = Jan Kowalski, "bill_street1" = Toruńska 20, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-747, "bill_country" = PL, "notes" = NULL, "sub_total" = 80.0000000000, "total" = 98.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = NULL, "shipping_method" = NULL, "shipping_model" = NULL, "shipping_cost" = 0E-10, "shipping_discount" = 0E-10, "tax" = 18.4000000000, "time_stamp" = 2012-03-17 10:01:57.696850, "status" =  WHERE "shop_order"."id" = 4 ; args=(1, 4, u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'Jan Kowalski', u'Toru\u0144ska 20', u'', u'Gda\u0144sk', u'', u'80-747', u'PL', u'80.0000000000', u'98.4000000000', '', u'0E-10', 'Online', u'0E-10', u'0E-10', u'18.4000000000', u'2012-03-17 10:01:57.696850', '', 4)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MzY1YWY5ZTJkOTRlMjc5NDc2YjZkODk1MmQ0NDM2MmZhMjJiZTJhOTqAAn1xAShVB29yZGVySURx
AksEVQ1fYXV0aF91c2VyX2lkSwFVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNr
ZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQRjYXJ0
SwlVBmN1c3RJREsEdS4=
, "expire_date" = 2012-03-31 10:01:58.560002 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('MzY1YWY5ZTJkOTRlMjc5NDc2YjZkODk1MmQ0NDM2MmZhMjJiZTJhOTqAAn1xAShVB29yZGVySURx\nAksEVQ1fYXV0aF91c2VyX2lkSwFVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNr\nZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQRjYXJ0\nSwlVBmN1c3RJREsEdS4=\n', u'2012-03-31 10:01:58.560002', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:01:58.649038 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:01:58.649038')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sat, 17 Mar 2012 10:01:58 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 80.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('80.00'), '2012-03-17')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ); args=(1, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 80.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('80.00'), '2012-03-17')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ); args=(1, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = dotpay ; args=(u'dotpay',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:01:58.930201 ; args=(u'2012-03-10 10:01:58.930201',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:01:58.930234 ; args=(u'2012-03-16 10:01:58.930234',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:01:58.930249 ; args=(u'2012-03-17 09:01:58.930249',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 80.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('80.00'), '2012-03-17')
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ); args=(2, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 80.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-17  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('80.00'), '2012-03-17')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ); args=(2, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 80.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('80.00'))
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = dotpay ; args=(u'dotpay',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:01:59.073391 ; args=(u'2012-03-10 10:01:59.073391',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:01:59.073423 ; args=(u'2012-03-16 10:01:59.073423',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:01:59.073464 ; args=(u'2012-03-17 09:01:59.073464',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 4  ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 5 ; args=(5,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 4  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(4, True)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:01:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 4  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (7); args=(7,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (8); args=(8,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Default, 18.4000000000); args=(4, 'area', u'Default', u'18.4000000000')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (4, area, Shipping, 0E-10); args=(4, 'area', 'Shipping', u'0E-10')
Sat, 17 Mar 2012 10:01:59 satchmo_store.shop.models DEBUG    Order #4, recalc: sub_total=zł 80,00, shipping=zł 0,00, discount=zł 0,00, tax=zł 18,40
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 4  AND "shop_orderauthorization"."complete" = False ); args=(4, False)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = dotpay ; args=(u'dotpay',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:01:59.605471 ; args=(u'2012-03-10 10:01:59.605471',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:01:59.605504 ; args=(u'2012-03-16 10:01:59.605504',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:01:59.605520 ; args=(u'2012-03-17 09:01:59.605520',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:01:59 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:01:59.844709 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NmJjNzEyYmNjYmUzMWU4Y2MzMDFkMmJhMGMzODZjNDZlNmQyZjI0YzqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLCVUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:01:59.844709', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:02:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:02:00.151612 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:02:00.151612')
Sat, 17 Mar 2012 10:02:00 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:00 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:02:00.536691 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:02:00.536691')
Sat, 17 Mar 2012 10:02:00 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:41 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:41.915289 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:41.915289')
Sat, 17 Mar 2012 10:02:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:43.744655 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:43.744655')
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:02:43.834047 ; args=(u'2012-03-10 10:02:43.834047',)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:02:43.834079 ; args=(u'2012-03-16 10:02:43.834079',)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:02:43.834095 ; args=(u'2012-03-17 09:02:43.834095',)
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:02:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.020) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = admin_tools ; args=(u'admin_tools',)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:02:44.133270 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:02:44.133270', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:44.250096 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:44.250096')
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:44.664216 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:44.664216')
Sat, 17 Mar 2012 10:02:44 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:46.663272 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:46.663272')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ADWORDS ); args=(1, 1, 'GOOGLE', 'ADWORDS')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ADWORDS ); args=(1, 1, 'GOOGLE', 'ADWORDS')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = ORDER_EMAIL_OWNER ); args=(1, 1, 'PAYMENT', 'ORDER_EMAIL_OWNER')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = ORDER_EMAIL_OWNER ); args=(1, 1, 'PAYMENT', 'ORDER_EMAIL_OWNER')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART ); args=(1, 1, 'SHOP', 'PERSISTENT_CART')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = PERSISTENT_CART_MERGE ); args=(1, 1, 'SHOP', 'PERSISTENT_CART_MERGE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = PERSISTENT_CART_MERGE ); args=(1, 1, 'SHOP', 'PERSISTENT_CART_MERGE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = HTML_EMAIL ); args=(1, 1, 'SHOP', 'HTML_EMAIL')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = HTML_EMAIL ); args=(1, 1, 'SHOP', 'HTML_EMAIL')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = LOGO_URI ); args=(1, 1, 'SHOP', 'LOGO_URI')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = LOGO_URI ); args=(1, 1, 'SHOP', 'LOGO_URI')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTRA_LOGGING ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTRA_LOGGING')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTRA_LOGGING ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTRA_LOGGING')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = DOTPAY_DOTID ); args=(1, 1, 'PAYMENT_DOTPAY', 'DOTPAY_DOTID')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_SIGNATURE_CODE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_SIGNATURE_CODE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TERMINAL')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TERMINAL')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_URL')
Sat, 17 Mar 2012 10:02:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = RENAME_IMAGES ); args=(1, 1, 'THUMBNAIL', 'RENAME_IMAGES')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = RENAME_IMAGES ); args=(1, 1, 'THUMBNAIL', 'RENAME_IMAGES')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_CLASS ); args=(1, 1, 'TAX', 'TAX_CLASS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_CLASS ); args=(1, 1, 'TAX', 'TAX_CLASS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = PRODUCTS_TAXABLE_BY_DEFAULT ); args=(1, 1, 'TAX', 'PRODUCTS_TAXABLE_BY_DEFAULT')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = IMAGE_DIR ); args=(1, 1, 'PRODUCT', 'IMAGE_DIR')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = IMAGE_DIR ); args=(1, 1, 'PRODUCT', 'IMAGE_DIR')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = MEASUREMENT_SYSTEM ); args=(1, 1, 'PRODUCT', 'MEASUREMENT_SYSTEM')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SEARCH_SHOW_PRODUCTVARIATIONS ); args=(1, 1, 'PRODUCT', 'SEARCH_SHOW_PRODUCTVARIATIONS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SEARCH_SHOW_PRODUCTVARIATIONS ); args=(1, 1, 'PRODUCT', 'SEARCH_SHOW_PRODUCTVARIATIONS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = TRACK_INVENTORY ); args=(1, 1, 'PRODUCT', 'TRACK_INVENTORY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = TRACK_INVENTORY ); args=(1, 1, 'PRODUCT', 'TRACK_INVENTORY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = AUTH_EARLY ); args=(1, 1, 'PAYMENT', 'AUTH_EARLY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = AUTH_EARLY ); args=(1, 1, 'PAYMENT', 'AUTH_EARLY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = CRON_KEY ); args=(1, 1, 'PAYMENT', 'CRON_KEY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = CRON_KEY ); args=(1, 1, 'PAYMENT', 'CRON_KEY')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = CC_NUM_YEARS ); args=(1, 1, 'PAYMENT', 'CC_NUM_YEARS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = CC_NUM_YEARS ); args=(1, 1, 'PAYMENT', 'CC_NUM_YEARS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = ALLOW_URL_REBILL ); args=(1, 1, 'PAYMENT', 'ALLOW_URL_REBILL')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = ALLOW_URL_REBILL ); args=(1, 1, 'PAYMENT', 'ALLOW_URL_REBILL')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = STORE_CREDIT_NUMBERS ); args=(1, 1, 'PAYMENT', 'STORE_CREDIT_NUMBERS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = STORE_CREDIT_NUMBERS ); args=(1, 1, 'PAYMENT', 'STORE_CREDIT_NUMBERS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = DOWNLOAD_PDFS ); args=(1, 1, 'SHIPPING', 'DOWNLOAD_PDFS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = DOWNLOAD_PDFS ); args=(1, 1, 'SHIPPING', 'DOWNLOAD_PDFS')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = settings ; args=(u'settings',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:02:47.275261 ; args=(u'2012-03-10 10:02:47.275261',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:02:47.275294 ; args=(u'2012-03-16 10:02:47.275294',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:02:47.275311 ; args=(u'2012-03-17 09:02:47.275311',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:02:47.514787 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:02:47.514787', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:47.668049 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:47.668049')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:02:47.976362 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:02:47.976362')
Sat, 17 Mar 2012 10:02:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:08 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:03:08.974572 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:03:08.974572')
Sat, 17 Mar 2012 10:03:08 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:09 configuration DEBUG    new setting PAYMENT.MINIMUM_ORDER
Sat, 17 Mar 2012 10:03:09 configuration INFO     Updated setting PAYMENT.MINIMUM_ORDER = 50
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.001) INSERT INTO "livesettings_setting" ("site_id", "group", "key", "value") VALUES (1, PAYMENT, MINIMUM_ORDER, 50); args=(1, 'PAYMENT', 'MINIMUM_ORDER', u'50')
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:03:09.264843 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:03:09.264843')
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = settings ; args=(u'settings',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:09.456288 ; args=(u'2012-03-10 10:03:09.456288',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:09.456321 ; args=(u'2012-03-16 10:03:09.456321',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:09.456337 ; args=(u'2012-03-17 09:03:09.456337',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:03:09.704677 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:03:09.704677', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.030) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:03:09.889035 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:03:09.889035')
Sat, 17 Mar 2012 10:03:09 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:10 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:03:10.246280 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:03:10.246280')
Sat, 17 Mar 2012 10:03:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:13.192949 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:13.192949')
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:13.267926 ; args=(u'2012-03-10 10:03:13.267926',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:13.267962 ; args=(u'2012-03-16 10:03:13.267962',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:13.267979 ; args=(u'2012-03-17 09:03:13.267979',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:13 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('50'))
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:13 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL
BFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:03:13.663327 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZWQ4NzA0MWVkMGMyYzFiNjU4YTc1ODlmNmFmZWFjYzI2OWFhNWMxYTqAAn1xAShVB29yZGVySURL\nBFUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsJ\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:03:13.663327', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:14 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:14.035365 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:14.035365')
Sat, 17 Mar 2012 10:03:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:14 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:14.330087 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:14.330087')
Sat, 17 Mar 2012 10:03:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:17.868651 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:17.868651')
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."id" = 13  AND "shop_cartitem"."cart_id" = 9 ); args=(13, 9)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 13  LIMIT 1; args=(13,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 9, "product_id" = 59, "quantity" = 5.000000 WHERE "shop_cartitem"."id" = 13 ; args=(9, 59, u'5.000000', 13)
Sat, 17 Mar 2012 10:03:17 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:17 satchmo_store.shop.models INFO     Deleting incomplete order #4 from database
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_ordervariable"."id", "shop_ordervariable"."order_id", "shop_ordervariable"."key", "shop_ordervariable"."value" FROM "shop_ordervariable" WHERE "shop_ordervariable"."order_id" IN (4) ORDER BY "shop_ordervariable"."key" ASC; args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" IN (4) ORDER BY "shop_orderitem"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (5) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(5,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderstatus"."id", "shop_orderstatus"."order_id", "shop_orderstatus"."status", "shop_orderstatus"."notes", "shop_orderstatus"."time_stamp" FROM "shop_orderstatus" WHERE "shop_orderstatus"."order_id" IN (4) ORDER BY "shop_orderstatus"."time_stamp" ASC; args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpaymentfailure"."id", "shop_orderpaymentfailure"."payment", "shop_orderpaymentfailure"."amount", "shop_orderpaymentfailure"."time_stamp", "shop_orderpaymentfailure"."transaction_id", "shop_orderpaymentfailure"."details", "shop_orderpaymentfailure"."reason_code", "shop_orderpaymentfailure"."order_id" FROM "shop_orderpaymentfailure" WHERE "shop_orderpaymentfailure"."order_id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" IN (4) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(4,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (5); args=(5,)
Sat, 17 Mar 2012 10:03:17 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (8, 7); args=(8, 7)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) DELETE FROM "shop_order" WHERE "id" IN (4); args=(4,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = YjU3MzBiYTlhNzI1MmVkYWM4MTRhY2QzMmFjNWM1NTAzOGU5ZGRmNDqAAn1xAShVDV9hdXRoX3Vz
ZXJfaWRLAVUKdGVzdGNvb2tpZVUGd29ya2VkVQRjYXJ0SwlVEl9hdXRoX3VzZXJfYmFja2VuZFUu
c2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUGY3VzdElESwR1
Lg==
, "expire_date" = 2012-03-31 10:03:18.059679 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('YjU3MzBiYTlhNzI1MmVkYWM4MTRhY2QzMmFjNWM1NTAzOGU5ZGRmNDqAAn1xAShVDV9hdXRoX3Vz\nZXJfaWRLAVUKdGVzdGNvb2tpZVUGd29ya2VkVQRjYXJ0SwlVEl9hdXRoX3VzZXJfYmFja2VuZFUu\nc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUGY3VzdElESwR1\nLg==\n', u'2012-03-31 10:03:18.059679', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:18.150248 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:18.150248')
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:18.232373 ; args=(u'2012-03-10 10:03:18.232373',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:18.232416 ; args=(u'2012-03-16 10:03:18.232416',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:18.232457 ; args=(u'2012-03-17 09:03:18.232457',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:18 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:18 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:18 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:18 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:18.626572 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:18.626572', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:18.925650 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:18.925650')
Sat, 17 Mar 2012 10:03:18 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:19 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:19.234005 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:19.234005')
Sat, 17 Mar 2012 10:03:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:20.567998 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:20.567998')
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:20.646044 ; args=(u'2012-03-10 10:03:20.646044',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:20.646076 ; args=(u'2012-03-16 10:03:20.646076',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:20.646093 ; args=(u'2012-03-17 09:03:20.646093',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:20 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:20.857804 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:20.857804', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:21 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:21.084979 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:21.084979')
Sat, 17 Mar 2012 10:03:21 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:21 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:21.469632 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:21.469632')
Sat, 17 Mar 2012 10:03:21 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:27.745338 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:27.745338')
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:27.818894 ; args=(u'2012-03-10 10:03:27.818894',)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:27.818932 ; args=(u'2012-03-16 10:03:27.818932',)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:27.818950 ; args=(u'2012-03-17 09:03:27.818950',)
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:28 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:28 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:28 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('5'))
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:28 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:28.296328 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:28.296328', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:28.593592 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:28.593592')
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:28.906616 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:28.906616')
Sat, 17 Mar 2012 10:03:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:34.021802 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:34.021802')
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."id" = 13  AND "shop_cartitem"."cart_id" = 9 ); args=(13, 9)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 13  LIMIT 1; args=(13,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 9, "product_id" = 59, "quantity" = 25.000000 WHERE "shop_cartitem"."id" = 13 ; args=(9, 59, u'25.000000', 13)
Sat, 17 Mar 2012 10:03:34 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:34.125075 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:34.125075', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:34.238218 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:34.238218')
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:34.313700 ; args=(u'2012-03-10 10:03:34.313700',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:34.313733 ; args=(u'2012-03-16 10:03:34.313733',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:34.313749 ; args=(u'2012-03-17 09:03:34.313749',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:34 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:34 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:34 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:34 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:34.697699 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:34.697699', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:34 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:34.969535 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:34.969535')
Sat, 17 Mar 2012 10:03:35 django.db.backends DEBUG    (0.011) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:35 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:35.345504 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:35.345504')
Sat, 17 Mar 2012 10:03:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:36.417978 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:36.417978')
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:36.500320 ; args=(u'2012-03-10 10:03:36.500320',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:36.500356 ; args=(u'2012-03-16 10:03:36.500356',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:36.500372 ; args=(u'2012-03-17 09:03:36.500372',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:36 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:36.701523 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:36.701523', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:37 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:36.975120 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:36.975120')
Sat, 17 Mar 2012 10:03:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:37.267083 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:37.267083')
Sat, 17 Mar 2012 10:03:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:40.217360 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:40.217360')
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:40.656708 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:40.656708')
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = openers  AND "product_category"."site_id" = 1 ); args=(True, u'openers', 1)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.073) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 1  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(1, True, 1)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', True)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(2, True)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = openers ; args=(u'openers',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:40.821702 ; args=(u'2012-03-10 10:03:40.821702',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:40.821736 ; args=(u'2012-03-16 10:03:40.821736',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:40.821752 ; args=(u'2012-03-17 09:03:40.821752',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 1 ); args=(True, 1)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:41.082937 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:41.082937', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:41.361519 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:41.361519')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:41.699204 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:41.699204')
Sat, 17 Mar 2012 10:03:41 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:42 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:42.089126 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:42.089126')
Sat, 17 Mar 2012 10:03:42 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:43.161296 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:43.161296')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = ch-cards  AND "product_category"."site_id" = 1 ); args=(True, u'ch-cards', 1)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 10  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(10, True, 1)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (36, 37, 38, 39) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 36, 37, 38, 39, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(10, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = ch-cards ; args=(u'ch-cards',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:43.285631 ; args=(u'2012-03-10 10:03:43.285631',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:43.285673 ; args=(u'2012-03-16 10:03:43.285673',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:43.285689 ; args=(u'2012-03-17 09:03:43.285689',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 10 ); args=(True, 10)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 10 ; args=(10,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 36 ; args=(36,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 36  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(36,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 36  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(36, u'pl')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 36  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(36, u'pl%')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 36 ; args=(36,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 36 ; args=(36,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 36 ; args=(36,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 36  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(36, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 37 ; args=(37,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 37  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(37,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 37  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(37, u'pl')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 37  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(37, u'pl%')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 37 ; args=(37,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 37 ; args=(37,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 37 ; args=(37,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 37  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(37, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 38 ; args=(38,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 38  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(38,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 38  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(38, u'pl')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 38  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(38, u'pl%')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 38 ; args=(38,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 38 ; args=(38,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 38 ; args=(38,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 38  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(38, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 39 ; args=(39,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 39  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(39,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 39  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(39, u'pl')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 39  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(39, u'pl%')
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 39 ; args=(39,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 39 ; args=(39,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 39 ; args=(39,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 39  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(39, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:43 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:43 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:43.910497 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:43.910497', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:44.191645 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:44.191645')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:44.252415 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:44.252415')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:44.283134 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:44.283134')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:44.324721 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:44.324721')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:44.365324 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:44.365324')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:44.632632 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:44.632632')
Sat, 17 Mar 2012 10:03:44 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:45 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:45.672975 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:45.672975')
Sat, 17 Mar 2012 10:03:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:46.373456 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:46.373456')
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = christmas-postcards  AND "product_category"."site_id" = 1 ); args=(True, u'christmas-postcards', 1)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 19  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(19, True, 1)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', True)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(19, True)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = christmas-postcards ; args=(u'christmas-postcards',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:46.441690 ; args=(u'2012-03-10 10:03:46.441690',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:46.441721 ; args=(u'2012-03-16 10:03:46.441721',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:46.441737 ; args=(u'2012-03-17 09:03:46.441737',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 19 ); args=(True, 19)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 19 ; args=(19,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:46 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:46.692421 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:46.692421', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:47.132153 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:47.132153')
Sat, 17 Mar 2012 10:03:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:47.368561 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:47.368561')
Sat, 17 Mar 2012 10:03:47 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:49 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:49.064537 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:49.064537')
Sat, 17 Mar 2012 10:03:49 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:50.081012 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:50.081012')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = eighteens  AND "product_category"."site_id" = 1 ); args=(True, u'eighteens', 1)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 16  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(16, True, 1)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (21, 25, 26, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 21, 25, 26, 28, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(16, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = eighteens ; args=(u'eighteens',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:50.153008 ; args=(u'2012-03-10 10:03:50.153008',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:50.153046 ; args=(u'2012-03-16 10:03:50.153046',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:50.153063 ; args=(u'2012-03-17 09:03:50.153063',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 16 ); args=(True, 16)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 16 ; args=(16,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 21  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(21,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 21  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 21  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 28  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(28,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:50 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:50 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:50.747187 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:50.747187', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:51.036754 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:51.036754')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:51.086556 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:51.086556')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:51.109639 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:51.109639')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:51.139952 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:51.139952')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:51.165174 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:51.165174')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:51.477051 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:51.477051')
Sat, 17 Mar 2012 10:03:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:53.680642 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:53.680642')
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-urodzinowa-18ka-2  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-urodzinowa-18ka-2', 1)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 28, True)
Sat, 17 Mar 2012 10:03:53 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 10:03:53 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-urodzinowa-18ka-2 ; args=(u'kartka-urodzinowa-18ka-2',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:53.819011 ; args=(u'2012-03-10 10:03:53.819011',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:53.819044 ; args=(u'2012-03-16 10:03:53.819044',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:53.819060 ; args=(u'2012-03-17 09:03:53.819060',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 28  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(28,)
Sat, 17 Mar 2012 10:03:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 28  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(28,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:54 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 28  ORDER BY "product_productimage"."sort" ASC; args=(28,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 28  AND "product_productattribute"."languagecode" = pl ); args=(28, 'pl')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 28  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(28, '')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:54.180264 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:54.180264', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:54.442809 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:54.442809')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:54.491397 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:54.491397')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:54.518871 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:54.518871')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:54.826658 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:54.826658')
Sat, 17 Mar 2012 10:03:54 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:55.939664 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:55.939664')
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:55 shop.views.cart DEBUG    FORM: <QueryDict: {u'addcart': [u'Dodaj do koszyka'], u'csrfmiddlewaretoken': [u'724a6ee0d1a0fb5c0a52e80a2a75fc2f'], u'productname': [u'kartka-urodzinowa-18ka-2'], u'quantity': [u'1']}>
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."slug" = kartka-urodzinowa-18ka-2  AND "product_product"."site_id" = 1 ); args=(u'kartka-urodzinowa-18ka-2', 1)
Sat, 17 Mar 2012 10:03:55 shop.views.cart DEBUG    found product: Kartka urodzinowa - 18ka
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:55 shop.views.cart DEBUG    product kartka-urodzinowa-18ka-2 is active
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."cart_id" = 9  AND "shop_cartitem"."product_id" = 28 ) ORDER BY "shop_cartitem"."id" ASC; args=(9, 28)
Sat, 17 Mar 2012 10:03:55 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cartitem" ("cart_id", "product_id", "quantity") VALUES (9, 28, 0.000000); args=(9, 28, u'0.000000')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 14  LIMIT 1; args=(14,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 9, "product_id" = 28, "quantity" = 1.000000 WHERE "shop_cartitem"."id" = 14 ; args=(9, 28, u'1.000000', 14)
Sat, 17 Mar 2012 10:03:56 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:56.247690 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:56.247690', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:56.357182 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:56.357182')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 28, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:56.429173 ; args=(u'2012-03-10 10:03:56.429173',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:56.429215 ; args=(u'2012-03-16 10:03:56.429215',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:56.429231 ; args=(u'2012-03-17 09:03:56.429231',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:56 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:03:56 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:56 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:56 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:03:57 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:03:57.024617 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:03:57.024617', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:57.567810 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:57.567810')
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:57.895535 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:57.895535')
Sat, 17 Mar 2012 10:03:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:03:59.554784 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:03:59.554784')
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:03:59.662172 ; args=(u'2012-03-10 10:03:59.662172',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:03:59.662206 ; args=(u'2012-03-16 10:03:59.662206',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:03:59.662221 ; args=(u'2012-03-17 09:03:59.662221',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:03:59 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:03:59.907853 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:03:59.907853', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:04:00 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:04:00.189635 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:04:00.189635')
Sat, 17 Mar 2012 10:04:00 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:04:00.506772 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:04:00.506772')
Sat, 17 Mar 2012 10:04:00 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:04:04.100024 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:04:04.100024')
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 28, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:04:04.177188 ; args=(u'2012-03-10 10:04:04.177188',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:04:04.177222 ; args=(u'2012-03-16 10:04:04.177222',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:04:04.177238 ; args=(u'2012-03-17 09:04:04.177238',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:04:04 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:04:04 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:04:04 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:04:04 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:04:04.746410 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:04:04.746410', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:04:05 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:04:05.031002 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:04:05.031002')
Sat, 17 Mar 2012 10:04:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:04:05 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:04:05.371996 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:04:05.371996')
Sat, 17 Mar 2012 10:04:05 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:09 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:05:09.947559 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:05:09.947559')
Sat, 17 Mar 2012 10:05:09 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 configuration INFO     Deleted setting TAX.DEFAULT_VIEW_TAX
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.001) DELETE FROM "livesettings_setting" WHERE "id" IN (9); args=(9,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:05:10.242509 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:05:10.242509')
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = settings ; args=(u'settings',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:05:10.473823 ; args=(u'2012-03-10 10:05:10.473823',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:05:10.473856 ; args=(u'2012-03-16 10:05:10.473856',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:05:10.473872 ; args=(u'2012-03-17 09:05:10.473872',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 10:05:10 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:05:10.715912 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('MDZkZTkzZDY0ZTM1MWUxN2E1YjBhOTJjMjMyMTUyYWRlODQ2ZDlmYjqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLB1USX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:05:10.715912', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 10:05:11 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:05:11.025161 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:05:11.025161')
Sat, 17 Mar 2012 10:05:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:11 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:05:11.729315 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:05:11.729315')
Sat, 17 Mar 2012 10:05:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:13.410980 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:13.410980')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:05:13.470871 ; args=(u'2012-03-10 10:05:13.470871',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:05:13.470917 ; args=(u'2012-03-16 10:05:13.470917',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:05:13.470933 ; args=(u'2012-03-17 09:05:13.470933',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:05:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:05:14.130367 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:05:14.130367', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.442368 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.442368')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.503296 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.503296')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.534197 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.534197')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.558770 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.558770')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.587188 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.587188')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.635511 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.635511')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.664127 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.664127')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.691898 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.691898')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.729957 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.729957')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:14.891106 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:14.891106')
Sat, 17 Mar 2012 10:05:14 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:17.377466 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:17.377466')
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 28, True)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:05:17.447718 ; args=(u'2012-03-10 10:05:17.447718',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:05:17.447759 ; args=(u'2012-03-16 10:05:17.447759',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:05:17.447775 ; args=(u'2012-03-17 09:05:17.447775',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:17 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:17 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:05:17 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:05:17.838329 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:05:17.838329', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:05:18 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:18.109710 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:18.109710')
Sat, 17 Mar 2012 10:05:18 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:18 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:18.430637 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:18.430637')
Sat, 17 Mar 2012 10:05:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:22.785128 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:22.785128')
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:05:22.887185 ; args=(u'2012-03-10 10:05:22.887185',)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:05:22.887230 ; args=(u'2012-03-16 10:05:22.887230',)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:05:22.887247 ; args=(u'2012-03-17 09:05:22.887247',)
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:05:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:05:23.090786 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:05:23.090786', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:23.371068 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:23.371068')
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:05:23.648491 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:05:23.648491')
Sat, 17 Mar 2012 10:05:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:06:57.068715 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:06:57.068715')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sat, 17 Mar 2012 10:06:57 configuration DEBUG    new setting TAX.DEFAULT_VIEW_TAX
Sat, 17 Mar 2012 10:06:57 configuration INFO     Updated setting TAX.DEFAULT_VIEW_TAX = True
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.001) INSERT INTO "livesettings_setting" ("site_id", "group", "key", "value") VALUES (1, TAX, DEFAULT_VIEW_TAX, True); args=(1, 'TAX', 'DEFAULT_VIEW_TAX', u'True')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:06:57.479679 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:06:57.479679')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 7 ; args=(7,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 7  ORDER BY "shop_cartitem"."id" ASC; args=(7,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = settings ; args=(u'settings',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:06:57.694053 ; args=(u'2012-03-10 10:06:57.694053',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:06:57.694088 ; args=(u'2012-03-16 10:06:57.694088',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:06:57.694104 ; args=(u'2012-03-17 09:06:57.694104',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  LIMIT 1; args=('1787aa4bf137035436f1b68b61b56895',)
Sat, 17 Mar 2012 10:06:57 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL
A1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH
VQZjdXN0SURLBHUu
, "expire_date" = 2012-03-31 10:06:57.945806 WHERE "django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895 ; args=('ZGIzNjdmMjE2ODA1OTVjZGEzZGMxZTY1NTIyZWY4MTIwYjk3MzZhZTqAAn1xAShVB29yZGVySURL\nA1UNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsH\nVQZjdXN0SURLBHUu\n', u'2012-03-31 10:06:57.945806', '1787aa4bf137035436f1b68b61b56895')
Sat, 17 Mar 2012 10:06:58 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:06:58.293105 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:06:58.293105')
Sat, 17 Mar 2012 10:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:06:59 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 1787aa4bf137035436f1b68b61b56895  AND "django_session"."expire_date" > 2012-03-17 10:06:59.047785 ); args=('1787aa4bf137035436f1b68b61b56895', u'2012-03-17 10:06:59.047785')
Sat, 17 Mar 2012 10:06:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:07:00.033516 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:07:00.033516')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 28, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:07:00.107042 ; args=(u'2012-03-10 10:07:00.107042',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:07:00.107079 ; args=(u'2012-03-16 10:07:00.107079',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:07:00.107095 ; args=(u'2012-03-17 09:07:00.107095',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:07:00 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:07:00 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:00 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:07:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.001) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:07:01 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:07:01.050573 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:07:01.050573', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:07:01.342355 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:07:01.342355')
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:07:01.687900 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:07:01.687900')
Sat, 17 Mar 2012 10:07:01 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.060) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:10:55.656389 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:10:55.656389')
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:10:55.868812 ; args=(u'2012-03-10 10:10:55.868812',)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:10:55.868846 ; args=(u'2012-03-16 10:10:55.868846',)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:10:55.868862 ; args=(u'2012-03-17 09:10:55.868862',)
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:10:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:10:56.104688 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:10:56.104688', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:10:56.439177 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:10:56.439177')
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:10:56.947337 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:10:56.947337')
Sat, 17 Mar 2012 10:10:56 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.037) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:49:03.762543 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:49:03.762543')
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 28, True)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:49:03 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:49:04.195372 ; args=(u'2012-03-10 10:49:04.195372',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:49:04.195406 ; args=(u'2012-03-16 10:49:04.195406',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:49:04.195422 ; args=(u'2012-03-17 09:49:04.195422',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.015) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 10:49:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.003) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:05 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:49:05 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:05 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:49:05 django.db.backends DEBUG    (0.056) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 10:49:05.470029 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 10:49:05.470029', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:49:06 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:49:06.068573 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:49:06.068573')
Sat, 17 Mar 2012 10:49:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:06 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:49:06.922849 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:49:06.922849')
Sat, 17 Mar 2012 10:49:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:49:10.399012 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:49:10.399012')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.014) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 10:49:10.516880 ; args=(u'2012-03-10 10:49:10.516880',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 10:49:10.516914 ; args=(u'2012-03-16 10:49:10.516914',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 09:49:10.516930 ; args=(u'2012-03-17 09:49:10.516930',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:10 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:10 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:49:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 10:49:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 10:49:11.405075 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 10:49:11.405075', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:49:11.703561 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:49:11.703561')
Sat, 17 Mar 2012 10:49:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 10:49:12 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 10:49:12.094873 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 10:49:12.094873')
Sat, 17 Mar 2012 10:49:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:01 django.db.backends DEBUG    (1.057) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:24:59.030632 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:24:59.030632')
Sat, 17 Mar 2012 13:25:01 django.db.backends DEBUG    (0.019) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.019) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.018) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:25:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.014) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.024) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:25:03.733793 ; args=(u'2012-03-10 13:25:03.733793',)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:25:03.733837 ; args=(u'2012-03-16 13:25:03.733837',)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:25:03.733854 ; args=(u'2012-03-17 12:25:03.733854',)
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:25:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.004) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:25:04 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.004) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.001) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.001) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:25:06 django.db.backends DEBUG    (0.033) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:25:06.773042 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:25:06.773042', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.036) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:07.734018 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:07.734018')
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:07.873469 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:07.873469')
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:07.904708 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:07.904708')
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:07.968750 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:07.968750')
Sat, 17 Mar 2012 13:25:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:08 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:08.061013 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:08.061013')
Sat, 17 Mar 2012 13:25:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:08 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:08.112284 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:08.112284')
Sat, 17 Mar 2012 13:25:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:10.614005 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:10.614005')
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:10.826269 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:10.826269')
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:10.872710 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:10.872710')
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:10.903238 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:10.903238')
Sat, 17 Mar 2012 13:25:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:10.998294 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:10.998294')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.059716 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.059716')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.095968 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.095968')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.140895 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.140895')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.187019 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.187019')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.228137 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.228137')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.268929 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.268929')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.302163 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.302163')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.335455 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.335455')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.368372 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.368372')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.398722 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.398722')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.438204 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.438204')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.492679 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.492679')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.514918 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.514918')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.552070 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.552070')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.570977 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.570977')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.622019 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.622019')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.671233 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.671233')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.692699 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.692699')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.771758 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.771758')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.807457 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.807457')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.837229 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.837229')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.867081 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.867081')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.897352 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.897352')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.936302 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.936302')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:11.977570 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:11.977570')
Sat, 17 Mar 2012 13:25:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:12.020108 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:12.020108')
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:12.067538 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:12.067538')
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:12.110412 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:12.110412')
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:12.132499 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:12.132499')
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:12.335653 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:12.335653')
Sat, 17 Mar 2012 13:25:12 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:35.869418 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:35.869418')
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa-4  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa-4', 1)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:35 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (63) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 63, True)
Sat, 17 Mar 2012 13:25:35 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 13:25:35 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-walentynkowa-4 ; args=(u'kartka-walentynkowa-4',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:25:36.058103 ; args=(u'2012-03-10 13:25:36.058103',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:25:36.058148 ; args=(u'2012-03-16 13:25:36.058148',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:25:36.058164 ; args=(u'2012-03-17 12:25:36.058164',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 63  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 63  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC; args=(63,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 63  AND "product_productattribute"."languagecode" = pl ); args=(63, 'pl')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 63  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(63, '')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:25:36.413062 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:25:36.413062', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:36.803053 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:36.803053')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:36.823793 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:36.823793')
Sat, 17 Mar 2012 13:25:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:37 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:37.601585 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:37.601585')
Sat, 17 Mar 2012 13:25:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:40.102529 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:40.102529')
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:40.136280 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:40.136280')
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:40.209172 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:40.209172')
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:40.269241 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:40.269241')
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:40.313958 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:40.313958')
Sat, 17 Mar 2012 13:25:40 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:44.179494 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:44.179494')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:25:44.243497 ; args=(u'2012-03-10 13:25:44.243497',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:25:44.243541 ; args=(u'2012-03-16 13:25:44.243541',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:25:44.243558 ; args=(u'2012-03-17 12:25:44.243558',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:25:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:25:45.015927 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:25:45.015927', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.031) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:45.309633 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:45.309633')
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:25:45.877070 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:25:45.877070')
Sat, 17 Mar 2012 13:25:45 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:17.457382 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:17.457382')
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-okolicznosciowa  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-okolicznosciowa', 1)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (72) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 72, True)
Sat, 17 Mar 2012 13:27:17 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 13:27:17 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-okolicznosciowa ; args=(u'kartka-okolicznosciowa',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:27:17.562322 ; args=(u'2012-03-10 13:27:17.562322',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:27:17.562367 ; args=(u'2012-03-16 13:27:17.562367',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:27:17.562384 ; args=(u'2012-03-17 12:27:17.562384',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 72  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 72  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 4 ); args=(True, 4)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:17 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC; args=(72,)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 72  AND "product_productattribute"."languagecode" = pl ); args=(72, 'pl')
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 72  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(72, '')
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:27:17 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:27:17.931870 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:27:17.931870', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:27:18 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:18.281981 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:18.281981')
Sat, 17 Mar 2012 13:27:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:18 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:18.322504 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:18.322504')
Sat, 17 Mar 2012 13:27:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:18 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:18.960743 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:18.960743')
Sat, 17 Mar 2012 13:27:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:20 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:20.357822 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:20.357822')
Sat, 17 Mar 2012 13:27:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:20 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:20.455248 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:20.455248')
Sat, 17 Mar 2012 13:27:20 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:35.771247 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:35.771247')
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:27:35.833884 ; args=(u'2012-03-10 13:27:35.833884',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:27:35.833928 ; args=(u'2012-03-16 13:27:35.833928',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:27:35.833945 ; args=(u'2012-03-17 12:27:35.833945',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:27:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.003) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:36 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:27:36.619711 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:27:36.619711', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:36.961728 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:36.961728')
Sat, 17 Mar 2012 13:27:36 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:37 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:37.353059 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:37.353059')
Sat, 17 Mar 2012 13:27:37 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:40 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:40.066788 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:40.066788')
Sat, 17 Mar 2012 13:27:40 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:48.883929 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:48.883929')
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa-8  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa-8', 1)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (67) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 67, True)
Sat, 17 Mar 2012 13:27:48 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 13:27:48 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-walentynkowa-8 ; args=(u'kartka-walentynkowa-8',)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:27:48.985640 ; args=(u'2012-03-10 13:27:48.985640',)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:27:48.985684 ; args=(u'2012-03-16 13:27:48.985684',)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:27:48.985729 ; args=(u'2012-03-17 12:27:48.985729',)
Sat, 17 Mar 2012 13:27:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 67  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 67  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:27:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC; args=(67,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 67  AND "product_productattribute"."languagecode" = pl ); args=(67, 'pl')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 67  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(67, '')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:27:49.486142 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:27:49.486142', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:49.757700 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:49.757700')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:49.827966 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:49.827966')
Sat, 17 Mar 2012 13:27:49 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:50.237636 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:50.237636')
Sat, 17 Mar 2012 13:27:50 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:51.130626 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:51.130626')
Sat, 17 Mar 2012 13:27:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:51.175534 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:51.175534')
Sat, 17 Mar 2012 13:27:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:27:54 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:27:54.548881 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:27:54.548881')
Sat, 17 Mar 2012 13:27:54 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:04.619035 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:04.619035')
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:28:04.682312 ; args=(u'2012-03-10 13:28:04.682312',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:28:04.682346 ; args=(u'2012-03-16 13:28:04.682346',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:28:04.682361 ; args=(u'2012-03-17 12:28:04.682361',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:04 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:04 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:05 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:28:05.492124 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:28:05.492124', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.040) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:05.717774 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:05.717774')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:05.887637 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:05.887637')
Sat, 17 Mar 2012 13:28:05 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:07.155529 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:07.155529')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-okolicznosciowa-9  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-okolicznosciowa-9', 1)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 81, True)
Sat, 17 Mar 2012 13:28:07 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 13:28:07 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-okolicznosciowa-9 ; args=(u'kartka-okolicznosciowa-9',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:28:07.258832 ; args=(u'2012-03-10 13:28:07.258832',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:28:07.258877 ; args=(u'2012-03-16 13:28:07.258877',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:28:07.258894 ; args=(u'2012-03-17 12:28:07.258894',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 81  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 81  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:07 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC; args=(81,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 81  AND "product_productattribute"."languagecode" = pl ); args=(81, 'pl')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 81  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(81, '')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:28:07.623251 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:28:07.623251', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:07.896192 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:07.896192')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:07.942295 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:07.942295')
Sat, 17 Mar 2012 13:28:07 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:08 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:08.305389 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:08.305389')
Sat, 17 Mar 2012 13:28:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:08 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:08.978113 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:08.978113')
Sat, 17 Mar 2012 13:28:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:09 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:09.081364 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:09.081364')
Sat, 17 Mar 2012 13:28:09 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:12.366397 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:12.366397')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:28:12.425989 ; args=(u'2012-03-10 13:28:12.425989',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:28:12.426024 ; args=(u'2012-03-16 13:28:12.426024',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:28:12.426040 ; args=(u'2012-03-17 12:28:12.426040',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.002) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:13 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:28:13.227577 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:28:13.227577', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:13.577242 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:13.577242')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:13.963916 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:13.963916')
Sat, 17 Mar 2012 13:28:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:15.331416 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:15.331416')
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa-3  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa-3', 1)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (62) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 62, True)
Sat, 17 Mar 2012 13:28:15 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 13:28:15 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-walentynkowa-3 ; args=(u'kartka-walentynkowa-3',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:28:15.436009 ; args=(u'2012-03-10 13:28:15.436009',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:28:15.436044 ; args=(u'2012-03-16 13:28:15.436044',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:28:15.436060 ; args=(u'2012-03-17 12:28:15.436060',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 62  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 62  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:15 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC; args=(62,)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 62  AND "product_productattribute"."languagecode" = pl ); args=(62, 'pl')
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 62  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(62, '')
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:28:15 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:28:15.872804 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:28:15.872804', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:28:16 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:16.170765 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:16.170765')
Sat, 17 Mar 2012 13:28:16 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:16 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:16.200534 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:16.200534')
Sat, 17 Mar 2012 13:28:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:16.478914 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:16.478914')
Sat, 17 Mar 2012 13:28:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:17.783638 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:17.783638')
Sat, 17 Mar 2012 13:28:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:17.880188 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:17.880188')
Sat, 17 Mar 2012 13:28:17 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:20.728772 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:20.728772')
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:28:20.793368 ; args=(u'2012-03-10 13:28:20.793368',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:28:20.793402 ; args=(u'2012-03-16 13:28:20.793402',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:28:20.793419 ; args=(u'2012-03-17 12:28:20.793419',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:28:21 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:28:21.591062 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:28:21.591062', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:21.931812 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:21.931812')
Sat, 17 Mar 2012 13:28:21 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:22 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:22.379986 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:22.379986')
Sat, 17 Mar 2012 13:28:22 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:28:39 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:28:39.434398 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:28:39.434398')
Sat, 17 Mar 2012 13:28:39 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:50.099286 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:50.099286')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = eighteens  AND "product_category"."site_id" = 1 ); args=(True, u'eighteens', 1)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 16  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(16, True, 1)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (21, 25, 26, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 21, 25, 26, 28, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(16, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = eighteens ; args=(u'eighteens',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:29:50.178163 ; args=(u'2012-03-10 13:29:50.178163',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:29:50.178204 ; args=(u'2012-03-16 13:29:50.178204',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:29:50.178221 ; args=(u'2012-03-17 12:29:50.178221',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 16 ); args=(True, 16)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 16 ; args=(16,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 21  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(21,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 21  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 21  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 28  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:50 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:29:50 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:29:50.851665 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:29:50.851665', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:51.096713 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:51.096713')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:51.166194 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:51.166194')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:51.207336 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:51.207336')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:51.233072 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:51.233072')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:51.270034 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:51.270034')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:51.559134 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:51.559134')
Sat, 17 Mar 2012 13:29:51 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:54.844133 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:54.844133')
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-18  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-18', 1)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (25) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 25, True)
Sat, 17 Mar 2012 13:29:54 root         DEBUG    subtypes = ()
Sat, 17 Mar 2012 13:29:54 product.views DEBUG    finding product template: ['product/product.html']
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-18 ; args=(u'kartka-18',)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:29:54.954930 ; args=(u'2012-03-10 13:29:54.954930',)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:29:54.954975 ; args=(u'2012-03-16 13:29:54.954975',)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:29:54.954991 ; args=(u'2012-03-17 12:29:54.954991',)
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:29:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 25  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(25,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 25  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(25,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:29:55 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC; args=(25,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 25  AND "product_productattribute"."languagecode" = pl ); args=(25, 'pl')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 25  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(25, '')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:29:55.320035 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:29:55.320035', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:55.614198 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:55.614198')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:55.667489 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:55.667489')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:55.947994 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:55.947994')
Sat, 17 Mar 2012 13:29:55 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:57 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:57.011589 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:57.011589')
Sat, 17 Mar 2012 13:29:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:29:57 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:29:57.100749 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:29:57.100749')
Sat, 17 Mar 2012 13:29:57 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:08.737711 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:08.737711')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17 ); args=(True, True, 1, '2012-03-17', '2012-03-17')
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 70 ; args=(70,)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:30:08.833946 ; args=(u'2012-03-10 13:30:08.833946',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:30:08.833980 ; args=(u'2012-03-16 13:30:08.833980',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:30:08.833996 ; args=(u'2012-03-17 12:30:08.833996',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sat, 17 Mar 2012 13:30:08 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.002) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:10 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy
X2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1
Lg==
, "expire_date" = 2012-03-31 13:30:10.084236 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('ZGM1YzE5NzMxNWIyMWIwOWZkZDlkZjdhNWI3MWY0YWQ5NTNjMzI3NTqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUEY2FydEsJVRJfYXV0aF91c2Vy\nX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmR1\nLg==\n', u'2012-03-31 13:30:10.084236', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:10.409592 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:10.409592')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:10.780254 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:10.780254')
Sat, 17 Mar 2012 13:30:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:11.321716 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:11.321716')
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-17  AND "product_discount"."endDate" > 2012-03-17  AND ("product_discount_valid_products"."product_id" IN (59, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-17', '2012-03-17', 59, 28, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-10 13:30:11.393870 ; args=(u'2012-03-10 13:30:11.393870',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-16 13:30:11.393905 ; args=(u'2012-03-16 13:30:11.393905',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-03-17 12:30:11.393921 ; args=(u'2012-03-17 12:30:11.393921',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-03-10 ; args=('2012-03-10',)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9 ; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:11 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:11 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 13:30:11 shop.templatetags.satchmo_cart DEBUG    sub details
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 9  ORDER BY "shop_cartitem"."id" ASC; args=(9,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Sat, 17 Mar 2012 13:30:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 25 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-03-17', Decimal('25'))
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 13 ; args=(13,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:12 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-17  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-03-17', Decimal('1'))
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 14 ; args=(14,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sat, 17 Mar 2012 13:30:12 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  LIMIT 1; args=('5ab6587c249ba5fc72ce01579096640e',)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE
VRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F
bWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-03-31 13:30:12.081922 WHERE "django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e ; args=('NWY4MjViZmQ2ZjgwOTVkNjBiMzVkZDI3NTk3ODNhMzZlZTg4NDVhYTqAAn1xAShVBmN1c3RJREsE\nVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9fc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5F\nbWFpbEJhY2tlbmRVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsJVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-03-31 13:30:12.081922', '5ab6587c249ba5fc72ce01579096640e')
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:12.354882 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:12.354882')
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:12.718003 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:12.718003')
Sat, 17 Mar 2012 13:30:12 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Sat, 17 Mar 2012 13:30:46 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 5ab6587c249ba5fc72ce01579096640e  AND "django_session"."expire_date" > 2012-03-17 13:30:46.538581 ); args=('5ab6587c249ba5fc72ce01579096640e', u'2012-03-17 13:30:46.538581')
Sat, 17 Mar 2012 13:30:46 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
