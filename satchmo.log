Mon, 12 Dec 2011 02:40:29 root         INFO     Satchmo Started
Mon, 12 Dec 2011 02:40:29 root         INFO     Satchmo Started
Mon, 12 Dec 2011 02:40:29 shop.listeners DEBUG    Added default shop listeners
Mon, 12 Dec 2011 02:40:29 satchmo_toolbar DEBUG    Satchmo toolbar ready
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Management command: runserver
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.005) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Management command: runserver
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Management command: runserver
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Management command: runserver
Mon, 12 Dec 2011 02:40:29 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = CREDITCHOICES ); args=(1, 1, 'PAYMENT_DUMMY', 'CREDITCHOICES')
Mon, 12 Dec 2011 02:40:29 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = CREDITCHOICES ); args=(1, 1, 'PAYMENT_DUMMY', 'CREDITCHOICES')
Mon, 12 Dec 2011 02:40:31 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:31.947133 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:31.947133')
Mon, 12 Dec 2011 02:40:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:32 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Mon, 12 Dec 2011 02:40:32 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Mon, 12 Dec 2011 02:40:33 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ubuntu/workspace_python/store/../store/static/
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Mon, 12 Dec 2011 02:40:33 payment.urls DEBUG    Found payment processor: DUMMY, adding urls at ^dummy/
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = neat-book  AND "product_product"."site_id" = 1 ); args=(True, u'neat-book', 1)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-12  AND "product_discount"."endDate" > 2011-12-12  AND ("product_discount_valid_products"."product_id" IN (3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-12', '2011-12-12', 3, True)
Mon, 12 Dec 2011 02:40:33 root         DEBUG    subtypes = ('ConfigurableProduct',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" INNER JOIN "product_product" T4 ON ("configurable_productvariation"."product_id" = T4."id") WHERE ("configurable_productvariation"."parent_id" = 3  AND T4."active" = True ); args=(3, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(14,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(15,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(16,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."site_id", "product_optiongroup"."name", "product_optiongroup"."description", "product_optiongroup"."sort_order", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_optiongroup" INNER JOIN "configurable_configurableproduct_option_group" ON ("product_optiongroup"."id" = "configurable_configurableproduct_option_group"."optiongroup_id") INNER JOIN "django_site" ON ("product_optiongroup"."site_id" = "django_site"."id") WHERE "configurable_configurableproduct_option_group"."configurableproduct_id" = 3  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "product_option"."option_group_id" = 3  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."sort_order" FROM "product_optiongroup" ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=()
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE ("product_option"."option_group_id" IN (3) AND "product_option"."value" IN (tape, hard, soft)) ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(3, 'tape', 'hard', 'soft')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."site_id", "product_optiongroup"."name", "product_optiongroup"."description", "product_optiongroup"."sort_order" FROM "product_optiongroup" WHERE "product_optiongroup"."id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiongrouptranslation" WHERE ("product_optiongrouptranslation"."optiongroup_id" = 3  AND "product_optiongrouptranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiongrouptranslation" WHERE ("product_optiongrouptranslation"."optiongroup_id" = 3  AND "product_optiongrouptranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiongrouptranslation" WHERE ("product_optiongrouptranslation"."optiongroup_id" = 3  AND "product_optiongrouptranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Mon, 12 Dec 2011 02:40:33 product.utils DEBUG    serialized: ({'id': 3, 'items': (<Option: Hard cover>, <Option: Soft cover>, <Option: On tape>), 'name': u'Book type', 'description': u''},)
Mon, 12 Dec 2011 02:40:33 product.utils DEBUG    Serialized Options neat-book: ({'id': 3, 'items': (<Option: Hard cover>, <Option: Soft cover>, <Option: On tape>), 'name': u'Book type', 'description': u''},)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-12  AND "product_discount"."endDate" > 2011-12-12  AND ("product_discount_valid_products"."product_id" IN (3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-12', '2011-12-12', 3, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productpricelookup" WHERE "product_productpricelookup"."parentid" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE "product_productpricelookup"."parentid" = 3  ORDER BY "product_productpricelookup"."price" DESC; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_soft ; args=(u'neat-book_soft',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 15  ORDER BY "product_productimage"."sort" ASC; args=(15,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_hard ; args=(u'neat-book_hard',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 14  ORDER BY "product_productimage"."sort" ASC; args=(14,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_tape ; args=(u'neat-book_tape',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 16  ORDER BY "product_productimage"."sort" ASC; args=(16,)
Mon, 12 Dec 2011 02:40:33 product.views DEBUG    finding product template: ['product/detail_configurableproduct.html', 'product/product.html']
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.002) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-12  AND "product_discount"."endDate" > 2011-12-12 ); args=(True, True, 1, '2011-12-12', '2011-12-12')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 1  ORDER BY "shop_cartitem"."id" ASC; args=(1,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book ; args=(u'neat-book',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."parent_id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-05 02:40:33.344146 ; args=(u'2011-12-05 02:40:33.344146',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-11 02:40:33.344193 ; args=(u'2011-12-11 02:40:33.344193',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-12 01:40:33.344200 ; args=(u'2011-12-12 01:40:33.344200',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-05 ; args=('2011-12-05',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 3  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 3  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 4 ); args=(True, 4)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-12  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-12', Decimal('1'))
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC; args=(3,)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 3  AND "product_productattribute"."languagecode" = pl-pl ); args=(3, 'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 3  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(3, '')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 7  AND "product_optiontranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 7  AND "product_optiontranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 7  AND "product_optiontranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 8  AND "product_optiontranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 8  AND "product_optiontranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 8  AND "product_optiontranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 9  AND "product_optiontranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 9  AND "product_optiontranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 9  AND "product_optiontranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Mon, 12 Dec 2011 02:40:33 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.026743 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.026743')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.047116 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.047116')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.061094 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.061094')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.075269 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.075269')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.016) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.099343 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.099343')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.114603 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.114603')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.141885 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.141885')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.167314 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.167314')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.181923 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.181923')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.208017 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.208017')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.015) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.231444 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.231444')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.372662 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.372662')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.560370 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.560370')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.577151 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.577151')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.591168 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.591168')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.009) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.631308 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.631308')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.644522 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.644522')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.673364 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.673364')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.697290 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.697290')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.731692 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.731692')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.765095 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.765095')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.789222 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.789222')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.813623 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.813623')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.840967 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.840967')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 18a01e827c7f05c79b973de65f5455b0  AND "django_session"."expire_date" > 2011-12-12 02:40:34.864445 ); args=('18a01e827c7f05c79b973de65f5455b0', u'2011-12-12 02:40:34.864445')
Mon, 12 Dec 2011 02:40:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
