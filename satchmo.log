Sun, 18 Mar 2012 20:20:04 root         INFO     Satchmo Started
Sun, 18 Mar 2012 20:20:04 root         INFO     Satchmo Started
Sun, 18 Mar 2012 12:20:04 configuration DEBUG    Could not load default shipping module configuration: fedex_web_services
Sun, 18 Mar 2012 12:20:04 tiered.config DEBUG    loaded
Sun, 18 Mar 2012 12:20:04 shop.listeners DEBUG    Added default shop listeners
Sun, 18 Mar 2012 12:20:05 satchmo_toolbar DEBUG    Satchmo toolbar ready
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Management command: runserver
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Sun, 18 Mar 2012 12:20:05 django.db.backends DEBUG    (0.007) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Management command: runserver
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sun, 18 Mar 2012 12:20:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sun, 18 Mar 2012 12:20:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sun, 18 Mar 2012 12:20:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sun, 18 Mar 2012 12:20:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Management command: runserver
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Management command: runserver
Sun, 18 Mar 2012 12:20:05 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Sun, 18 Mar 2012 12:20:05 configuration DEBUG    SettingNotSet: PAYMENT_DOTPAY.CREDITCHOICES
Sun, 18 Mar 2012 12:20:12 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:12.508389 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:12.508389')
Sun, 18 Mar 2012 12:20:13 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sun, 18 Mar 2012 12:20:13 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sun, 18 Mar 2012 12:20:14 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ko/workspace/store/../store/static/
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sun, 18 Mar 2012 12:20:14 payment.urls DEBUG    Found payment processor: DOTPAY, adding urls at ^dotpay/
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_billing" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_shipping" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:14 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sun, 18 Mar 2012 12:20:14 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-03-18  AND "product_discount"."endDate" > 2012-03-18  AND ("product_discount_valid_products"."product_id" IN (81) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-03-18', '2012-03-18', 81, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:15 satchmo_store.contact.forms DEBUG    Saving contact info for Kasia Sikorska
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_contactrole"."key", "contact_contactrole"."name" FROM "contact_contactrole" WHERE "contact_contactrole"."key" = Customer ; args=(u'Customer',)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_contact" WHERE "contact_contact"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "contact_contact" SET "title" = , "first_name" = Kasia, "last_name" = Sikorska, "user_id" = NULL, "role_id" = Customer, "organization_id" = NULL, "dob" = NULL, "email" = coalas.bladeforums@gmail.com, "notes" = , "create_date" = 2012-03-18 WHERE "contact_contact"."id" = 5 ; args=(u'', u'Kasia', u'Sikorska', u'Customer', u'coalas.bladeforums@gmail.com', u'', '2012-03-18', 5)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_billing" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_shipping" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_billing" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 6  LIMIT 1; args=(6,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 5, "description" = , "addressee" = Kasia Sikorska, "street1" = Okopowa 2, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-643, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = False WHERE "contact_addressbook"."id" = 6 ; args=(5, u'', u'Kasia Sikorska', u'Okopowa 2', u'', u'', u'Gda\u0144sk', u'80-643', 176, True, False, 6)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_shipping" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 6  LIMIT 1; args=(6,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.002) UPDATE "contact_addressbook" SET "contact_id" = 5, "description" = , "addressee" = Kasia Sikorska, "street1" = Okopowa 2, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-643, "country_id" = 176, "is_default_shipping" = False, "is_default_billing" = False WHERE "contact_addressbook"."id" = 6 ; args=(5, u'', u'Kasia Sikorska', u'Okopowa 2', u'', u'', u'Gda\u0144sk', u'80-643', 176, False, False, 6)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_addressbook" WHERE "contact_addressbook"."id" = 6  LIMIT 1; args=(6,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "contact_addressbook" SET "contact_id" = 5, "description" = , "addressee" = Kasia Sikorska, "street1" = Okopowa 2, "street2" = , "state" = , "city" = Gdańsk, "postal_code" = 80-643, "country_id" = 176, "is_default_shipping" = True, "is_default_billing" = True WHERE "contact_addressbook"."id" = 6 ; args=(5, u'', u'Kasia Sikorska', u'Okopowa 2', u'', u'', u'Gda\u0144sk', u'80-643', 176, True, True, 6)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 5  AND "contact_phonenumber"."primary" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 5  AND "contact_phonenumber"."primary" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 5  AND "contact_phonenumber"."primary" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 6  LIMIT 1; args=(6,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 5, "type" = , "phone" = +48 58 7634485, "primary" = False WHERE "contact_phonenumber"."id" = 6 ; args=(5, u'', u'+48 58 7634485', False, 6)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "contact_phonenumber" WHERE "contact_phonenumber"."id" = 6  LIMIT 1; args=(6,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "contact_phonenumber" SET "contact_id" = 5, "type" = , "phone" = +48 58 7634485, "primary" = True WHERE "contact_phonenumber"."id" = 6 ; args=(5, u'', u'+48 58 7634485', True, 6)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_shipping" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_billing" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', u'', u'0E-10', u'Online', u'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (8) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(8,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.002) DELETE FROM "shop_orderitem" WHERE "id" IN (8); args=(8,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', '', u'0E-10', u'Online', u'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:15 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:15 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:15 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (5, 81, 50.000000, 1.0000000000, 0.2300000000, 50.0000000000, 11.5000000000, None, False, None); args=(5, 81, u'50.000000', u'1.0000000000', u'0.2300000000', u'50.0000000000', u'11.5000000000', None, False, None)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:16 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:16 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 8  LIMIT 1; args=(8,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 5, "product_id" = 81, "quantity" = 50.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 50.0000000000, "tax" = 11.5000000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 8 ; args=(5, 81, u'50.000000', u'1.0000000000', u'0.2300000000', u'50.0000000000', u'11.5000000000', False, u'0E-10', 8)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 5  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(5, True)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:16 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_SHIPPING ); args=(1, 1, 'TAX', 'TAX_SHIPPING')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 5  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (14); args=(14,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (15); args=(15,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Default, 11.5000000000); args=(5, 'area', u'Default', u'11.5000000000')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Shipping, 0E-10); args=(5, 'area', 'Shipping', u'0E-10')
Sun, 18 Mar 2012 12:20:16 satchmo_store.shop.models DEBUG    Order #5, recalc: sub_total=zł 50,00, shipping=zł 19,90, discount=zł 0,00, tax=zł 11,50
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', '', u'0E-10', u'Online', u'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  LIMIT 1; args=('36f351f5fdd646a9ce68064ffe588d20',)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZDQ2ZGMwODg4NzU4NjU2OTc2YjZlYTBkYmRhOWQ1NDlmNDhkZjI1MzqAAn1xAShVB29yZGVySURL
BVUKdGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBVUEY2FydEsKdS4=
, "expire_date" = 2012-04-01 12:20:16.658259 WHERE "django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20 ; args=('ZDQ2ZGMwODg4NzU4NjU2OTc2YjZlYTBkYmRhOWQ1NDlmNDhkZjI1MzqAAn1xAShVB29yZGVySURL\nBVUKdGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBVUEY2FydEsKdS4=\n', u'2012-04-01 12:20:16.658259', '36f351f5fdd646a9ce68064ffe588d20')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:16.753458 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:16.753458')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.002) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.001) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-03-18  AND "product_discount"."endDate" > 2012-03-18 ); args=(True, True, 1, '2012-03-18', '2012-03-18')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = HIDING ); args=(1, 1, 'SHIPPING', 'HIDING')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = SELECT_CHEAPEST ); args=(1, 1, 'SHIPPING', 'SELECT_CHEAPEST')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 5  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(5, True)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:17 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 5  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (14); args=(14,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (15); args=(15,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Default, 11.5000000000); args=(5, 'area', u'Default', u'11.5000000000')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Shipping, 0E-10); args=(5, 'area', 'Shipping', u'0E-10')
Sun, 18 Mar 2012 12:20:17 satchmo_store.shop.models DEBUG    Order #5, recalc: sub_total=zł 50,00, shipping=zł 19,90, discount=zł 0,00, tax=zł 11,50
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT', 'LIVE')
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sun, 18 Mar 2012 12:20:17 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 18 Mar 2012 12:20:18 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 18 Mar 2012 12:20:19 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:19.048254 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:19.048254')
Sun, 18 Mar 2012 12:20:19 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:19.634501 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:19.634501')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:21.481371 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:21.481371')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_shipping" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_billing" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', u'', u'0E-10', u'Online', u'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:20:21 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.000) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (8) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(8,)
Sun, 18 Mar 2012 12:20:21 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (8); args=(8,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', '', u'0E-10', u'Online', 'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.003) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (5, 81, 50.000000, 1.0000000000, 0.2300000000, 50.0000000000, 11.5000000000, None, False, None); args=(5, 81, u'50.000000', u'1.0000000000', u'0.2300000000', u'50.0000000000', u'11.5000000000', None, False, None)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 8  LIMIT 1; args=(8,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 5, "product_id" = 81, "quantity" = 50.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 50.0000000000, "tax" = 11.5000000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 8 ; args=(5, 81, u'50.000000', u'1.0000000000', u'0.2300000000', u'50.0000000000', u'11.5000000000', False, u'0E-10', 8)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 5  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(5, True)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:20:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 5  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (14); args=(14,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (15); args=(15,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Default, 11.5000000000); args=(5, 'area', u'Default', u'11.5000000000')
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Shipping, 0E-10); args=(5, 'area', 'Shipping', u'0E-10')
Sun, 18 Mar 2012 12:20:22 satchmo_store.shop.models DEBUG    Order #5, recalc: sub_total=zł 50,00, shipping=zł 19,90, discount=zł 0,00, tax=zł 11,50
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', '', u'0E-10', u'Online', 'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MODULE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MODULE')
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ) LIMIT 1; args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:20:22 payment.modules.base DEBUG    Found pending payment: Order Pending Payment #5
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:20:22 payment.modules.base DEBUG    Deleting 1 expired pending payment entries for order #5
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."capture_id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."capture_id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) SELECT "payment_creditcarddetail"."id", "payment_creditcarddetail"."orderpayment_id", "payment_creditcarddetail"."credit_type", "payment_creditcarddetail"."display_cc", "payment_creditcarddetail"."encrypted_cc", "payment_creditcarddetail"."expire_month", "payment_creditcarddetail"."expire_year", "payment_creditcarddetail"."card_holder", "payment_creditcarddetail"."start_month", "payment_creditcarddetail"."start_year", "payment_creditcarddetail"."issue_num" FROM "payment_creditcarddetail" WHERE "payment_creditcarddetail"."orderpayment_id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpayment" WHERE "id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:20:22 payment.modules.base DEBUG    Creating pending DOTPAY payment of 0.00 for Order #5: Kasia Sikorska
Sun, 18 Mar 2012 12:20:22 satchmo_store.shop.models DEBUG    Pending Payment - creating linked payment
Sun, 18 Mar 2012 12:20:22 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id") VALUES (DOTPAY, 0E-10, 2012-03-18 12:20:22.982358, LINKED, None, , 5); args=(u'DOTPAY', u'0E-10', u'2012-03-18 12:20:22.982358', 'LINKED', None, '', 5)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpendingpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id", "capture_id") VALUES (DOTPAY, 0E-10, None, None, None, None, 5, 5); args=(u'DOTPAY', u'0E-10', None, None, None, None, 5, 5)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  LIMIT 1; args=('36f351f5fdd646a9ce68064ffe588d20',)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZjM3MDA0M2YwMWFiMDNmMGE1MGIwYjgyYTUzYmZmNThlZTUyY2JjMzqAAn1xAShVB29yZGVySURL
BVUGY3VzdElESwVVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsKdS4=
, "expire_date" = 2012-04-01 12:20:23.145274 WHERE "django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20 ; args=('ZjM3MDA0M2YwMWFiMDNmMGE1MGIwYjgyYTUzYmZmNThlZTUyY2JjMzqAAn1xAShVB29yZGVySURL\nBVUGY3VzdElESwVVCnRlc3Rjb29raWVVBndvcmtlZFUEY2FydEsKdS4=\n', u'2012-04-01 12:20:23.145274', '36f351f5fdd646a9ce68064ffe588d20')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:23.241588 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:23.241588')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LIVE ); args=(1, 1, 'PAYMENT_DOTPAY', 'LIVE')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = POST_TEST_URL ); args=(1, 1, 'PAYMENT_DOTPAY', 'POST_TEST_URL')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_SIGNATURE_CODE ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_SIGNATURE_CODE')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TEST_TERMINAL ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TEST_TERMINAL')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_CALLBACK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_CALLBACK')
Sun, 18 Mar 2012 12:20:23 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-notify_callback
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_OK ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_OK')
Sun, 18 Mar 2012 12:20:23 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-success
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_URL_KO ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_URL_KO')
Sun, 18 Mar 2012 12:20:23 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-failure
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = EXTENDED_SIGNATURE ); args=(1, 1, 'PAYMENT_DOTPAY', 'EXTENDED_SIGNATURE')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = DOTPAY_DOTID ); args=(1, 1, 'PAYMENT_DOTPAY', 'DOTPAY_DOTID')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_CURRENCY ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_CURRENCY')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = MERCHANT_TITULAR ); args=(1, 1, 'PAYMENT_DOTPAY', 'MERCHANT_TITULAR')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 5  AND "contact_phonenumber"."primary" = True ); args=(5, True)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(5, u'shipping')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5, u'shipping')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(5, u'shipping')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5, u'shipping')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE ("shop_orderpayment"."order_id" = 5  AND NOT (("shop_orderpayment"."transaction_id" = PENDING  AND "shop_orderpayment"."transaction_id" IS NOT NULL) AND "shop_orderpayment"."transaction_id" IS NOT NULL)); args=(5, 'PENDING')
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = order_details ; args=(u'order_details',)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:20:23 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:20:24 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:24.092363 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:24.092363')
Sun, 18 Mar 2012 12:20:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:20:24.480627 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:20:24.480627')
Sun, 18 Mar 2012 12:21:20 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:20.489325 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:20.489325')
Sun, 18 Mar 2012 12:21:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:24.089947 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:24.089947')
Sun, 18 Mar 2012 12:21:24 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:24.812632 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:24.812632')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:25.438231 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:25.438231')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(2, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 2  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(2, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ); args=(2, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 2  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(2, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_shipping" = True ); args=(5, True)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 5  AND "contact_addressbook"."is_default_billing" = True ); args=(5, True)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', u'', u'0E-10', u'Online', u'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:21:25 configuration DEBUG    Getting shipping methods: [u'shipping.modules.tiered']
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carrier"."id", "tiered_carrier"."key", "tiered_carrier"."ordering", "tiered_carrier"."active" FROM "tiered_carrier" WHERE "tiered_carrier"."active" = True  ORDER BY "tiered_carrier"."ordering" ASC; args=(True,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ); args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_carriertranslation"."id", "tiered_carriertranslation"."carrier_id", "tiered_carriertranslation"."languagecode", "tiered_carriertranslation"."name", "tiered_carriertranslation"."description", "tiered_carriertranslation"."method", "tiered_carriertranslation"."delivery" FROM "tiered_carriertranslation" WHERE ("tiered_carriertranslation"."carrier_id" = 1  AND "tiered_carriertranslation"."languagecode" = pl ) ORDER BY "tiered_carriertranslation"."languagecode" ASC, "tiered_carriertranslation"."name" ASC; args=(1, 'pl')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NOT NULL AND "tiered_shippingtier"."min_total" <= 50.00  AND NOT (("tiered_shippingtier"."expires" < 2012-03-18  AND "tiered_shippingtier"."expires" IS NOT NULL))); args=(1, Decimal('50.00'), '2012-03-18')
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ); args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.000) SELECT "tiered_shippingtier"."id", "tiered_shippingtier"."carrier_id", "tiered_shippingtier"."min_total", "tiered_shippingtier"."price", "tiered_shippingtier"."expires" FROM "tiered_shippingtier" WHERE ("tiered_shippingtier"."carrier_id" = 1  AND "tiered_shippingtier"."expires" IS NULL AND "tiered_shippingtier"."min_total" <= 50.00 ) ORDER BY "tiered_shippingtier"."min_total" DESC LIMIT 1; args=(1, Decimal('50.00'))
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (8) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(8,)
Sun, 18 Mar 2012 12:21:25 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderitem" WHERE "id" IN (8); args=(8,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', '', u'0E-10', u'Online', 'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:26 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:26 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.002) INSERT INTO "shop_orderitem" ("order_id", "product_id", "quantity", "unit_price", "unit_tax", "line_item_price", "tax", "expire_date", "completed", "discount") VALUES (5, 81, 50.000000, 1.0000000000, 0.2300000000, 50.0000000000, 11.5000000000, None, False, None); args=(5, 81, u'50.000000', u'1.0000000000', u'0.2300000000', u'50.0000000000', u'11.5000000000', None, False, None)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" = 8 ; args=(8,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:26 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:26 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_orderitem" WHERE "shop_orderitem"."id" = 8  LIMIT 1; args=(8,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) UPDATE "shop_orderitem" SET "order_id" = 5, "product_id" = 81, "quantity" = 50.000000, "unit_price" = 1.0000000000, "unit_tax" = 0.2300000000, "line_item_price" = 50.0000000000, "tax" = 11.5000000000, "expire_date" = NULL, "completed" = False, "discount" = 0E-10 WHERE "shop_orderitem"."id" = 8 ; args=(5, 81, u'50.000000', u'1.0000000000', u'0.2300000000', u'50.0000000000', u'11.5000000000', False, u'0E-10', 8)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" INNER JOIN "product_product" ON ("shop_orderitem"."product_id" = "product_product"."id") WHERE ("shop_orderitem"."order_id" = 5  AND "product_product"."taxable" = True ) ORDER BY "shop_orderitem"."id" ASC; args=(5, True)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 18 Mar 2012 12:21:26 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" = 5  ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (14); args=(14,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (15); args=(15,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Default, 11.5000000000); args=(5, 'area', u'Default', u'11.5000000000')
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) INSERT INTO "shop_ordertaxdetail" ("order_id", "method", "description", "tax") VALUES (5, area, Shipping, 0E-10); args=(5, 'area', 'Shipping', u'0E-10')
Sun, 18 Mar 2012 12:21:26 satchmo_store.shop.models DEBUG    Order #5, recalc: sub_total=zł 50,00, shipping=zł 19,90, discount=zł 0,00, tax=zł 11,50
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_order" WHERE "shop_order"."id" = 5  LIMIT 1; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) UPDATE "shop_order" SET "site_id" = 1, "contact_id" = 5, "ship_addressee" = Kasia Sikorska, "ship_street1" = Okopowa 2, "ship_street2" = , "ship_city" = Gdańsk, "ship_state" = , "ship_postal_code" = 80-643, "ship_country" = PL, "bill_addressee" = Kasia Sikorska, "bill_street1" = Okopowa 2, "bill_street2" = , "bill_city" = Gdańsk, "bill_state" = , "bill_postal_code" = 80-643, "bill_country" = PL, "notes" = NULL, "sub_total" = 50.0000000000, "total" = 81.4000000000, "discount_code" = , "discount" = 0E-10, "method" = Online, "shipping_description" = Poczta Polska, "shipping_method" = pp, "shipping_model" = PP, "shipping_cost" = 19.9000000000, "shipping_discount" = 0E-10, "tax" = 11.5000000000, "time_stamp" = 2012-03-18 11:59:34.840242, "status" =  WHERE "shop_order"."id" = 5 ; args=(1, 5, u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'Kasia Sikorska', u'Okopowa 2', u'', u'Gda\u0144sk', u'', u'80-643', u'PL', u'50.0000000000', u'81.4000000000', '', u'0E-10', u'Online', 'Poczta Polska', u'pp', u'PP', u'19.9000000000', u'0E-10', u'11.5000000000', u'2012-03-18 11:59:34.840242', u'', 5)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ) LIMIT 1; args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:21:26 payment.modules.base DEBUG    Found pending payment: Order Pending Payment #5
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:21:26 payment.modules.base DEBUG    Deleting 1 expired pending payment entries for order #5
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE ("shop_orderpendingpayment"."order_id" = 5  AND "shop_orderpendingpayment"."payment" = DOTPAY ); args=(5, u'DOTPAY')
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."capture_id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."capture_id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) SELECT "payment_creditcarddetail"."id", "payment_creditcarddetail"."orderpayment_id", "payment_creditcarddetail"."credit_type", "payment_creditcarddetail"."display_cc", "payment_creditcarddetail"."encrypted_cc", "payment_creditcarddetail"."expire_month", "payment_creditcarddetail"."expire_year", "payment_creditcarddetail"."card_holder", "payment_creditcarddetail"."start_month", "payment_creditcarddetail"."start_year", "payment_creditcarddetail"."issue_num" FROM "payment_creditcarddetail" WHERE "payment_creditcarddetail"."orderpayment_id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpayment" WHERE "id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderpendingpayment" WHERE "id" IN (5); args=(5,)
Sun, 18 Mar 2012 12:21:26 payment.modules.base DEBUG    Creating pending DOTPAY payment of 0.00 for Order #5: Kasia Sikorska
Sun, 18 Mar 2012 12:21:26 satchmo_store.shop.models DEBUG    Pending Payment - creating linked payment
Sun, 18 Mar 2012 12:21:26 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id") VALUES (DOTPAY, 0E-10, 2012-03-18 12:21:26.979782, LINKED, None, , 5); args=(u'DOTPAY', u'0E-10', u'2012-03-18 12:21:26.979782', 'LINKED', None, '', 5)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) INSERT INTO "shop_orderpendingpayment" ("payment", "amount", "time_stamp", "transaction_id", "details", "reason_code", "order_id", "capture_id") VALUES (DOTPAY, 0E-10, None, None, None, None, 5, 5); args=(u'DOTPAY', u'0E-10', None, None, None, None, 5, 5)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  LIMIT 1; args=('36f351f5fdd646a9ce68064ffe588d20',)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZDQ2ZGMwODg4NzU4NjU2OTc2YjZlYTBkYmRhOWQ1NDlmNDhkZjI1MzqAAn1xAShVB29yZGVySURL
BVUKdGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBVUEY2FydEsKdS4=
, "expire_date" = 2012-04-01 12:21:27.136695 WHERE "django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20 ; args=('ZDQ2ZGMwODg4NzU4NjU2OTc2YjZlYTBkYmRhOWQ1NDlmNDhkZjI1MzqAAn1xAShVB29yZGVySURL\nBVUKdGVzdGNvb2tpZVUGd29ya2VkVQZjdXN0SURLBVUEY2FydEsKdS4=\n', u'2012-04-01 12:21:27.136695', '36f351f5fdd646a9ce68064ffe588d20')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:27.381042 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:27.381042')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:27 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-notify_callback
Sun, 18 Mar 2012 12:21:27 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-success
Sun, 18 Mar 2012 12:21:27 satchmo_utils DEBUG    No url found for DOTPAY_DOTPAY_satchmo_checkout-failure
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10 ; args=(10,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 10  ORDER BY "shop_cartitem"."id" ASC; args=(10,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-03-18  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 50 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-03-18', Decimal('50'))
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 16 ; args=(16,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "contact_phonenumber"."id", "contact_phonenumber"."contact_id", "contact_phonenumber"."type", "contact_phonenumber"."phone", "contact_phonenumber"."primary" FROM "contact_phonenumber" WHERE ("contact_phonenumber"."contact_id" = 5  AND "contact_phonenumber"."primary" = True ); args=(5, True)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."iso2_code" = PL ; args=(u'PL',)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(5, u'shipping')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5, u'shipping')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" = 5  ORDER BY "shop_orderitem"."id" ASC; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ); args=(5, u'shipping')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE ("shop_ordertaxdetail"."order_id" = 5  AND "shop_ordertaxdetail"."description" LIKE shipping ESCAPE '\' ) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(5, u'shipping')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.001) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE ("shop_orderpayment"."order_id" = 5  AND NOT (("shop_orderpayment"."transaction_id" = PENDING  AND "shop_orderpayment"."transaction_id" IS NOT NULL) AND "shop_orderpayment"."transaction_id" IS NOT NULL)); args=(5, 'PENDING')
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" = 5 ; args=(5,)
Sun, 18 Mar 2012 12:21:27 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE ("shop_orderauthorization"."order_id" = 5  AND "shop_orderauthorization"."complete" = False ); args=(5, False)
Sun, 18 Mar 2012 12:21:28 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:28.129709 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:28.129709')
Sun, 18 Mar 2012 12:21:28 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:28.457742 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:28.457742')
Sun, 18 Mar 2012 12:21:53 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:53.109507 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:53.109507')
Sun, 18 Mar 2012 12:21:54 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:54.274965 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:54.274965')
Sun, 18 Mar 2012 12:21:58 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 36f351f5fdd646a9ce68064ffe588d20  AND "django_session"."expire_date" > 2012-03-18 12:21:58.118310 ); args=('36f351f5fdd646a9ce68064ffe588d20', u'2012-03-18 12:21:58.118310')
