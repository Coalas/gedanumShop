Mon, 23 Jan 2012 12:59:22 root         INFO     Satchmo Started
Mon, 23 Jan 2012 12:59:22 root         INFO     Satchmo Started
Mon, 23 Jan 2012 03:59:22 shop.listeners DEBUG    Added default shop listeners
Mon, 23 Jan 2012 03:59:22 satchmo_toolbar DEBUG    Satchmo toolbar ready
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Management command: runserver
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.006) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Management command: runserver
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Management command: runserver
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Management command: runserver
Mon, 23 Jan 2012 03:59:22 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Mon, 23 Jan 2012 03:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = CREDITCHOICES ); args=(1, 1, 'PAYMENT_DUMMY', 'CREDITCHOICES')
Mon, 23 Jan 2012 03:59:24 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:24.572258 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:24.572258')
Mon, 23 Jan 2012 03:59:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Mon, 23 Jan 2012 03:59:25 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ubuntu/workspace_python/store/../store/static/
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Mon, 23 Jan 2012 03:59:25 payment.urls DEBUG    Found payment processor: DUMMY, adding urls at ^dummy/
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-okolicznosciowa  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-okolicznosciowa', 1)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (72) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 72, True)
Mon, 23 Jan 2012 03:59:25 root         DEBUG    subtypes = ()
Mon, 23 Jan 2012 03:59:25 product.views DEBUG    finding product template: ['product/product.html']
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23 ); args=(True, True, 1, '2012-01-23', '2012-01-23')
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-okolicznosciowa ; args=(u'kartka-okolicznosciowa',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 03:59:25.870433 ; args=(u'2012-01-16 03:59:25.870433',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 03:59:25.870509 ; args=(u'2012-01-22 03:59:25.870509',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 02:59:25.870516 ; args=(u'2012-01-23 02:59:25.870516',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Mon, 23 Jan 2012 03:59:25 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 72  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(72,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 72  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(72,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 4 ); args=(True, 4)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.004) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(72, u'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 03:59:26 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC; args=(72,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 72  AND "product_productattribute"."languagecode" = pl-pl ); args=(72, 'pl-pl')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 72  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(72, '')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 03:59:26.799095 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-02-06 03:59:26.799095', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:26.900115 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:26.900115')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:26.935695 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:26.935695')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:26.953859 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:26.953859')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:26.966856 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:26.966856')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:26.985166 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:26.985166')
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:26 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:26.995254 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:26.995254')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.015629 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.015629')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.051014 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.051014')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.074158 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.074158')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.101608 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.101608')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.184782 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.184782')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.210689 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.210689')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.240681 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.240681')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.256983 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.256983')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.272541 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.272541')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.290529 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.290529')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.320033 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.320033')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.337877 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.337877')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.355214 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.355214')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.381733 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.381733')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.418709 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.418709')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.444602 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.444602')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.011) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.463387 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.463387')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.503372 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.503372')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.549432 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.549432')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.577642 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.577642')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.608989 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.608989')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.013) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.040) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.646819 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.646819')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.011) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.720597 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.720597')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.757870 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.757870')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.780910 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.780910')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.804689 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.804689')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.825491 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.825491')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.859129 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.859129')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.908150 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.908150')
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:27 django.db.backends DEBUG    (0.049) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:27.947470 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:27.947470')
Mon, 23 Jan 2012 03:59:28 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:28 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:28.009320 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:28.009320')
Mon, 23 Jan 2012 03:59:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:28 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:28.027519 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:28.027519')
Mon, 23 Jan 2012 03:59:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.026) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:29.382448 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:29.382448')
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:29.420032 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:29.420032')
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:29.600467 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:29.600467')
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.042) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:29.643002 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:29.643002')
Mon, 23 Jan 2012 03:59:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:49.752020 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:49.752020')
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-okolicznosciowa  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-okolicznosciowa', 1)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (72) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 72, True)
Mon, 23 Jan 2012 03:59:49 root         DEBUG    subtypes = ()
Mon, 23 Jan 2012 03:59:49 product.views DEBUG    finding product template: ['product/product.html']
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-okolicznosciowa ; args=(u'kartka-okolicznosciowa',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 03:59:49.867006 ; args=(u'2012-01-16 03:59:49.867006',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 03:59:49.867024 ; args=(u'2012-01-22 03:59:49.867024',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 02:59:49.867033 ; args=(u'2012-01-23 02:59:49.867033',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 72  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 72  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(72,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 4 ); args=(True, 4)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(72, u'pl-pl')
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 03:59:49 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 03:59:50 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC; args=(72,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 72  AND "product_productattribute"."languagecode" = pl-pl ); args=(72, 'pl-pl')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 72  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(72, '')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = NTdlZmZiNTYyYjZkYzkxMGY3NmQyODI1ZGU1YzM5ZWRkMTk5Njk5ZjqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsE
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 03:59:50.040789 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('NTdlZmZiNTYyYjZkYzkxMGY3NmQyODI1ZGU1YzM5ZWRkMTk5Njk5ZjqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsE\nVQZjdXN0SURLBHUu\n', u'2012-02-06 03:59:50.040789', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.127833 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.127833')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.164957 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.164957')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.193717 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.193717')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.234236 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.234236')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.262858 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.262858')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.296756 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.296756')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.309706 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.309706')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.345029 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.345029')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.362295 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.362295')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.388568 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.388568')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.509941 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.509941')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.007) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.566986 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.566986')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.601003 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.601003')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.620459 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.620459')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.658340 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.658340')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.686104 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.686104')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.716613 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.716613')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.756590 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.756590')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.786324 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.786324')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.811414 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.811414')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.832095 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.832095')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.875618 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.875618')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.938758 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.938758')
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:50 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:50.981491 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:50.981491')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.012910 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.012910')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.037487 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.037487')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.013) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.076972 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.076972')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.093466 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.093466')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.032) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.115029 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.115029')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.173002 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.173002')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.209409 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.209409')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.252945 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.252945')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.298876 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.298876')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.322396 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.322396')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.345499 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.345499')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.367341 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.367341')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.384774 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.384774')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:51.397612 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:51.397612')
Mon, 23 Jan 2012 03:59:51 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:52.276655 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:52.276655')
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:52.316364 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:52.316364')
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:52.394002 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:52.394002')
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 03:59:52.440282 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 03:59:52.440282')
Mon, 23 Jan 2012 03:59:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:55 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:55.430614 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:55.430614')
Mon, 23 Jan 2012 04:00:55 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:58.638443 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:58.638443')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = valentine  AND "product_category"."site_id" = 1 ); args=(True, u'valentine', 1)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.012) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 12  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(12, True, 1)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(15, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(14, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(13, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.004) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = valentine ; args=(u'valentine',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:00:58.706841 ; args=(u'2012-01-16 04:00:58.706841',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:00:58.706856 ; args=(u'2012-01-22 04:00:58.706856',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:00:58.706861 ; args=(u'2012-01-23 03:00:58.706861',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 12 ; args=(12,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 59 ; args=(59,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 59  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(59,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(59, u'pl-pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(59, u'pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 59  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(59, u'pl%')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 59 ; args=(59,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 59 ; args=(59,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 59 ; args=(59,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 59  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(59, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 60 ; args=(60,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 60  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(60,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 60  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(60, u'pl-pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 60  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(60, u'pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 60  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(60, u'pl%')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 60 ; args=(60,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 60 ; args=(60,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 60 ; args=(60,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 60  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(60, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.002) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 61 ; args=(61,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 61  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(61,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 61  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(61, u'pl-pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 61  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(61, u'pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 61  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(61, u'pl%')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 61 ; args=(61,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 61 ; args=(61,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 61 ; args=(61,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 61  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(61, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(62, u'pl-pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:00:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.002) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(63, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 64 ; args=(64,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 64  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(64,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 64  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(64, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 64  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(64, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 64  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(64, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 64 ; args=(64,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 64 ; args=(64,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 64 ; args=(64,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 64  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(64, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 65 ; args=(65,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 65  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(65,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 65  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(65, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 65  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(65, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 65  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(65, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 65 ; args=(65,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 65 ; args=(65,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 65 ; args=(65,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 65  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(65, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 66 ; args=(66,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 66  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(66,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 66  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(66, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 66  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(66, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 66  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(66, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 66 ; args=(66,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 66 ; args=(66,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 66 ; args=(66,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 66  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(66, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(67, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 68 ; args=(68,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 68  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(68,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 68  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(68, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 68  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(68, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 68  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(68, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 68 ; args=(68,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 68 ; args=(68,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 68 ; args=(68,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 68  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(68, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:00:59 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 04:00:59.230822 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-02-06 04:00:59.230822', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.348360 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.348360')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.386598 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.386598')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.412775 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.412775')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.450464 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.450464')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.472861 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.472861')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.504654 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.504654')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.026) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.536071 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.536071')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.586947 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.586947')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.610241 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.610241')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.625961 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.625961')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.649922 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.649922')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:00:59.774676 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:00:59.774676')
Mon, 23 Jan 2012 04:00:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:01.644164 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:01.644164')
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa-3  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa-3', 1)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (62) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 62, True)
Mon, 23 Jan 2012 04:01:01 root         DEBUG    subtypes = ()
Mon, 23 Jan 2012 04:01:01 product.views DEBUG    finding product template: ['product/product.html']
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-walentynkowa-3 ; args=(u'kartka-walentynkowa-3',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:01:01.738667 ; args=(u'2012-01-16 04:01:01.738667',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:01:01.738686 ; args=(u'2012-01-22 04:01:01.738686',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:01:01.738691 ; args=(u'2012-01-23 03:01:01.738691',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 62  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 62  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(62, u'pl-pl')
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:01 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC; args=(62,)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 62  AND "product_productattribute"."languagecode" = pl-pl ); args=(62, 'pl-pl')
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 62  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(62, '')
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:01 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = NTdlZmZiNTYyYjZkYzkxMGY3NmQyODI1ZGU1YzM5ZWRkMTk5Njk5ZjqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsE
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 04:01:01.951628 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('NTdlZmZiNTYyYjZkYzkxMGY3NmQyODI1ZGU1YzM5ZWRkMTk5Njk5ZjqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsE\nVQZjdXN0SURLBHUu\n', u'2012-02-06 04:01:01.951628', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:02 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:02.156685 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:02.156685')
Mon, 23 Jan 2012 04:01:02 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:02 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:02.361762 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:02.361762')
Mon, 23 Jan 2012 04:01:02 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:16 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:16.735923 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:16.735923')
Mon, 23 Jan 2012 04:01:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:17.783934 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:17.783934')
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = v-carnet  AND "product_category"."site_id" = 1 ); args=(True, u'v-carnet', 1)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 15  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(15, True, 1)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', True)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(15, True)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = v-carnet ; args=(u'v-carnet',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:01:17.833314 ; args=(u'2012-01-16 04:01:17.833314',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:01:17.833329 ; args=(u'2012-01-22 04:01:17.833329',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:01:17.833334 ; args=(u'2012-01-23 03:01:17.833334',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 15 ); args=(True, 15)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 15 ; args=(15,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 12 ; args=(12,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:17 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 04:01:17.962999 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-02-06 04:01:17.962999', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:18 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:18.203283 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:18.203283')
Mon, 23 Jan 2012 04:01:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:18 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:18.381546 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:18.381546')
Mon, 23 Jan 2012 04:01:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:19 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:19.768902 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:19.768902')
Mon, 23 Jan 2012 04:01:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:23.138400 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:23.138400')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = birthday-cards  AND "product_category"."site_id" = 1 ); args=(True, u'birthday-cards', 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 8  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(8, True, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 44, 45, 46, 47, 48, 49, 50, 51, 29, 25, 26, 28, 3, 27) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 44, 45, 46, 47, 48, 49, 50, 51, 29, 25, 26, 28, 3, 27, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(16, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(18, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(17, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = birthday-cards ; args=(u'birthday-cards',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:01:23.205666 ; args=(u'2012-01-16 04:01:23.205666',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:01:23.205670 ; args=(u'2012-01-22 04:01:23.205670',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:01:23.205680 ; args=(u'2012-01-23 03:01:23.205680',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.005) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(72, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.004) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.002) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 73  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(73,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(73, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(73, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(73, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 73  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(73, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 74 ; args=(74,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 74  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(74,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 74  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(74, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 74  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(74, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 74  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(74, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 74 ; args=(74,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 74 ; args=(74,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 74 ; args=(74,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 74  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(74, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(75, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 76 ; args=(76,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 76  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(76,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 76  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(76, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 76  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(76, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 76  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(76, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 76 ; args=(76,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 76 ; args=(76,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 76 ; args=(76,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 76  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(76, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 77 ; args=(77,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 77  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(77,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 77  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(77, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 77  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(77, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 77  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(77, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 77 ; args=(77,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 77 ; args=(77,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 77 ; args=(77,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.004) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 77  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(77, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 78 ; args=(78,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 78  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(78,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 78  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(78, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 78  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(78, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 78  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(78, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 78 ; args=(78,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 78 ; args=(78,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 78 ; args=(78,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 78  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(78, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.006) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(79, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.003) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 80 ; args=(80,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 80  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(80,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 80  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(80, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 80  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(80, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 80  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(80, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 80 ; args=(80,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 80 ; args=(80,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 80 ; args=(80,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 80  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(80, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(81, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:23 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = NTdlZmZiNTYyYjZkYzkxMGY3NmQyODI1ZGU1YzM5ZWRkMTk5Njk5ZjqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu
ZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsE
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 04:01:23.809033 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('NTdlZmZiNTYyYjZkYzkxMGY3NmQyODI1ZGU1YzM5ZWRkMTk5Njk5ZjqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVEl9hdXRoX3VzZXJfYmFja2Vu\nZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2VuZFUEY2FydEsE\nVQZjdXN0SURLBHUu\n', u'2012-02-06 04:01:23.809033', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:23.956261 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:23.956261')
Mon, 23 Jan 2012 04:01:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:24 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:24.162698 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:24.162698')
Mon, 23 Jan 2012 04:01:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.039) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:31.139473 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:31.139473')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-okolicznosciowa-1  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-okolicznosciowa-1', 1)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.005) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (73) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 73, True)
Mon, 23 Jan 2012 04:01:31 root         DEBUG    subtypes = ()
Mon, 23 Jan 2012 04:01:31 product.views DEBUG    finding product template: ['product/product.html']
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.005) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = kartka-okolicznosciowa-1 ; args=(u'kartka-okolicznosciowa-1',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.001) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:01:31.283420 ; args=(u'2012-01-16 04:01:31.283420',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:01:31.283445 ; args=(u'2012-01-22 04:01:31.283445',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:01:31.283450 ; args=(u'2012-01-23 03:01:31.283450',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 73  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 73  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(73, u'pl-pl')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(73, u'pl')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(73, u'pl%')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 73  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(73, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:31 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 73  ORDER BY "product_productimage"."sort" ASC; args=(73,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 73  AND "product_productattribute"."languagecode" = pl-pl ); args=(73, 'pl-pl')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 73  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(73, '')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL
AVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl
cl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k
VQZjdXN0SURLBHUu
, "expire_date" = 2012-02-06 04:01:31.549103 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('ZTM3MjVhNjhkZDYyYmYwODhiNWJlNWIzYmM4NzliZTg5ZmY4NDk2NTqAAn1xAShVB29yZGVySURL\nAVUNX2F1dGhfdXNlcl9pZEsBVQp0ZXN0Y29va2llVQZ3b3JrZWRVBGNhcnRLBFUSX2F1dGhfdXNl\ncl9iYWNrZW5kVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5k\nVQZjdXN0SURLBHUu\n', u'2012-02-06 04:01:31.549103', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:31.700905 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:31.700905')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:31.746255 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:31.746255')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:31.917054 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:31.917054')
Mon, 23 Jan 2012 04:01:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:34 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:34.664105 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:34.664105')
Mon, 23 Jan 2012 04:01:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:41.199908 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:41.199908')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 shop.views.cart DEBUG    FORM: <QueryDict: {u'addcart': [u'Dodaj do koszyka'], u'csrfmiddlewaretoken': [u'1a7ac02f45ca3c34c255dc083796c317'], u'productname': [u'kartka-okolicznosciowa-1'], u'quantity': [u'1']}>
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.005) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."slug" = kartka-okolicznosciowa-1  AND "product_product"."site_id" = 1 ); args=(u'kartka-okolicznosciowa-1', 1)
Mon, 23 Jan 2012 04:01:41 shop.views.cart DEBUG    found product: Kartka Okolicznościowa
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.016) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 shop.views.cart DEBUG    product kartka-okolicznosciowa-1 is active
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.013) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."cart_id" = 4  AND "shop_cartitem"."product_id" = 73 ) ORDER BY "shop_cartitem"."id" ASC; args=(4, 73)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.010) INSERT INTO "shop_cartitem" ("cart_id", "product_id", "quantity") VALUES (4, 73, 0.000000); args=(4, 73, u'0.000000')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 8  LIMIT 1; args=(8,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) UPDATE "shop_cartitem" SET "cart_id" = 4, "product_id" = 73, "quantity" = 1.000000 WHERE "shop_cartitem"."id" = 8 ; args=(4, 73, u'1.000000', 8)
Mon, 23 Jan 2012 04:01:41 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 satchmo_store.shop.models INFO     Deleting incomplete order #1 from database
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_ordervariable"."id", "shop_ordervariable"."order_id", "shop_ordervariable"."key", "shop_ordervariable"."value" FROM "shop_ordervariable" WHERE "shop_ordervariable"."order_id" IN (1) ORDER BY "shop_ordervariable"."key" ASC; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.004) SELECT "shop_orderitem"."id", "shop_orderitem"."order_id", "shop_orderitem"."product_id", "shop_orderitem"."quantity", "shop_orderitem"."unit_price", "shop_orderitem"."unit_tax", "shop_orderitem"."line_item_price", "shop_orderitem"."tax", "shop_orderitem"."expire_date", "shop_orderitem"."completed", "shop_orderitem"."discount" FROM "shop_orderitem" WHERE "shop_orderitem"."order_id" IN (1) ORDER BY "shop_orderitem"."id" ASC; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "shop_orderitemdetail"."id", "shop_orderitemdetail"."item_id", "shop_orderitemdetail"."name", "shop_orderitemdetail"."value", "shop_orderitemdetail"."price_change", "shop_orderitemdetail"."sort_order" FROM "shop_orderitemdetail" WHERE "shop_orderitemdetail"."item_id" IN (1, 2, 3) ORDER BY "shop_orderitemdetail"."sort_order" ASC; args=(1, 2, 3)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_orderstatus"."id", "shop_orderstatus"."order_id", "shop_orderstatus"."status", "shop_orderstatus"."notes", "shop_orderstatus"."time_stamp" FROM "shop_orderstatus" WHERE "shop_orderstatus"."order_id" IN (1) ORDER BY "shop_orderstatus"."time_stamp" ASC; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_orderauthorization"."id", "shop_orderauthorization"."payment", "shop_orderauthorization"."amount", "shop_orderauthorization"."time_stamp", "shop_orderauthorization"."transaction_id", "shop_orderauthorization"."details", "shop_orderauthorization"."reason_code", "shop_orderauthorization"."order_id", "shop_orderauthorization"."capture_id", "shop_orderauthorization"."complete" FROM "shop_orderauthorization" WHERE "shop_orderauthorization"."order_id" IN (1); args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_orderpayment"."id", "shop_orderpayment"."payment", "shop_orderpayment"."amount", "shop_orderpayment"."time_stamp", "shop_orderpayment"."transaction_id", "shop_orderpayment"."details", "shop_orderpayment"."reason_code", "shop_orderpayment"."order_id" FROM "shop_orderpayment" WHERE "shop_orderpayment"."order_id" IN (1); args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_orderpendingpayment"."id", "shop_orderpendingpayment"."payment", "shop_orderpendingpayment"."amount", "shop_orderpendingpayment"."time_stamp", "shop_orderpendingpayment"."transaction_id", "shop_orderpendingpayment"."details", "shop_orderpendingpayment"."reason_code", "shop_orderpendingpayment"."order_id", "shop_orderpendingpayment"."capture_id" FROM "shop_orderpendingpayment" WHERE "shop_orderpendingpayment"."order_id" IN (1); args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_orderpaymentfailure"."id", "shop_orderpaymentfailure"."payment", "shop_orderpaymentfailure"."amount", "shop_orderpaymentfailure"."time_stamp", "shop_orderpaymentfailure"."transaction_id", "shop_orderpaymentfailure"."details", "shop_orderpaymentfailure"."reason_code", "shop_orderpaymentfailure"."order_id" FROM "shop_orderpaymentfailure" WHERE "shop_orderpaymentfailure"."order_id" IN (1); args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_ordertaxdetail"."id", "shop_ordertaxdetail"."order_id", "shop_ordertaxdetail"."method", "shop_ordertaxdetail"."description", "shop_ordertaxdetail"."tax" FROM "shop_ordertaxdetail" WHERE "shop_ordertaxdetail"."order_id" IN (1) ORDER BY "shop_ordertaxdetail"."id" ASC; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) DELETE FROM "shop_ordertaxdetail" WHERE "id" IN (2, 1); args=(2, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) DELETE FROM "shop_orderitem" WHERE "id" IN (3, 2, 1); args=(3, 2, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) DELETE FROM "shop_order" WHERE "id" IN (1); args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = NDBiYzhiNDc1ZThmYTA5M2U4ZWVlZGI4MzAzZDlkYmIzMjIyMDg3YjqAAn1xAShVDV9hdXRoX3Vz
ZXJfaWRLAVUKdGVzdGNvb2tpZVUGd29ya2VkVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9f
c3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmRVBGNhcnRLBFUGY3VzdElESwR1
Lg==
, "expire_date" = 2012-02-06 04:01:41.480373 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('NDBiYzhiNDc1ZThmYTA5M2U4ZWVlZGI4MzAzZDlkYmIzMjIyMDg3YjqAAn1xAShVDV9hdXRoX3Vz\nZXJfaWRLAVUKdGVzdGNvb2tpZVUGd29ya2VkVRJfYXV0aF91c2VyX2JhY2tlbmRVLnNhdGNobW9f\nc3RvcmUuYWNjb3VudHMuZW1haWwtYXV0aC5FbWFpbEJhY2tlbmRVBGNhcnRLBFUGY3VzdElESwR1\nLg==\n', u'2012-02-06 04:01:41.480373', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:41.509579 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:41.509579')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (27, 49, 67, 73) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 27, 49, 67, 73, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.003) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:01:41.571577 ; args=(u'2012-01-16 04:01:41.571577',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:01:41.571600 ; args=(u'2012-01-22 04:01:41.571600',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:01:41.571609 ; args=(u'2012-01-23 03:01:41.571609',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 73  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(73, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 27  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(27, u'pl-pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 27  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(27, u'pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 27  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(27, u'pl%')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 49  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(49, u'pl-pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 49  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(49, u'pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 49  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(49, u'pl%')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(67, u'pl-pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(73, u'pl-pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(73, u'pl')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 73  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(73, u'pl%')
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 73  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(73, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 73  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(73, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.001) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 73 ; args=(73,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 73  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(73, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 8 ; args=(8,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:41 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:41 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = NDBiZGE3ZTFjM2MyNzM4NTU3OTM2YjQ2OWU0YzNmYTU5YWUxZWFlZDqAAn1xAShVBGNhcnRLBFUG
Y3VzdElESwRVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNrZW5kVS5zYXRjaG1v
X3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-02-06 04:01:41.986561 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('NDBiZGE3ZTFjM2MyNzM4NTU3OTM2YjQ2OWU0YzNmYTU5YWUxZWFlZDqAAn1xAShVBGNhcnRLBFUG\nY3VzdElESwRVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNrZW5kVS5zYXRjaG1v\nX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-02-06 04:01:41.986561', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:42 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:42.053275 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:42.053275')
Mon, 23 Jan 2012 04:01:42 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:42 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:42.170908 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:42.170908')
Mon, 23 Jan 2012 04:01:42 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:42 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:42.267439 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:42.267439')
Mon, 23 Jan 2012 04:01:42 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:45 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:45.975004 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:45.975004')
Mon, 23 Jan 2012 04:01:45 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.002) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."id" = 8  AND "shop_cartitem"."cart_id" = 4 ); args=(8, 4)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitemdetails"."id", "shop_cartitemdetails"."cartitem_id", "shop_cartitemdetails"."value", "shop_cartitemdetails"."name", "shop_cartitemdetails"."price_change", "shop_cartitemdetails"."sort_order" FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" IN (8) ORDER BY "shop_cartitemdetails"."sort_order" ASC; args=(8,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) DELETE FROM "shop_cartitem" WHERE "id" IN (8); args=(8,)
Mon, 23 Jan 2012 04:01:46 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = ZWQzZTI4NTA5YTJjOGQxNGQwYmRiMzUzOWJlMmNmMWY2ZWE0OWM4NzqAAn1xAShVCnRlc3Rjb29r
aWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUSX2F1dGhfdXNlcl9iYWNrZW5k
VS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQRjYXJ0SwR1
Lg==
, "expire_date" = 2012-02-06 04:01:46.052284 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('ZWQzZTI4NTA5YTJjOGQxNGQwYmRiMzUzOWJlMmNmMWY2ZWE0OWM4NzqAAn1xAShVCnRlc3Rjb29r\naWVVBndvcmtlZFUNX2F1dGhfdXNlcl9pZEsBVQZjdXN0SURLBFUSX2F1dGhfdXNlcl9iYWNrZW5k\nVS5zYXRjaG1vX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQRjYXJ0SwR1\nLg==\n', u'2012-02-06 04:01:46.052284', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:46.206661 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:46.206661')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.001) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-23  AND "product_discount"."endDate" > 2012-01-23  AND ("product_discount_valid_products"."product_id" IN (27, 49, 67) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-23', '2012-01-23', 27, 49, 67, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.007) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-16 04:01:46.300859 ; args=(u'2012-01-16 04:01:46.300859',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-22 04:01:46.300875 ; args=(u'2012-01-22 04:01:46.300875',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2012-01-23 03:01:46.300880 ; args=(u'2012-01-23 03:01:46.300880',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2012-01-16 ; args=('2012-01-16',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4 ; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 27  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(27, u'pl-pl')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 27  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(27, u'pl')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 27  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(27, u'pl%')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.008) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 49  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(49, u'pl-pl')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 49  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(49, u'pl')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 49  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(49, u'pl%')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.001) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.004) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(67, u'pl-pl')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 shop.templatetags.satchmo_cart DEBUG    sub details
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 4  ORDER BY "shop_cartitem"."id" ASC; args=(4,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 27 ; args=(27,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 27  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(27, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 5 ; args=(5,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.003) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 49 ; args=(49,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 49  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 5 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(49, '2012-01-23', Decimal('5'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 6 ; args=(6,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-23  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-01-23', Decimal('1'))
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "contact_addressbook"."id", "contact_addressbook"."contact_id", "contact_addressbook"."description", "contact_addressbook"."addressee", "contact_addressbook"."street1", "contact_addressbook"."street2", "contact_addressbook"."state", "contact_addressbook"."city", "contact_addressbook"."postal_code", "contact_addressbook"."country_id", "contact_addressbook"."is_default_shipping", "contact_addressbook"."is_default_billing" FROM "contact_addressbook" WHERE ("contact_addressbook"."contact_id" = 4  AND "contact_addressbook"."is_default_shipping" = True ); args=(4, True)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Mon, 23 Jan 2012 04:01:46 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  LIMIT 1; args=('bfc24ee7091667f9b958b48992bf653d',)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) UPDATE "django_session" SET "session_data" = NDBiZGE3ZTFjM2MyNzM4NTU3OTM2YjQ2OWU0YzNmYTU5YWUxZWFlZDqAAn1xAShVBGNhcnRLBFUG
Y3VzdElESwRVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNrZW5kVS5zYXRjaG1v
X3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQ1fYXV0aF91c2VyX2lkSwF1
Lg==
, "expire_date" = 2012-02-06 04:01:46.730621 WHERE "django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d ; args=('NDBiZGE3ZTFjM2MyNzM4NTU3OTM2YjQ2OWU0YzNmYTU5YWUxZWFlZDqAAn1xAShVBGNhcnRLBFUG\nY3VzdElESwRVCnRlc3Rjb29raWVVBndvcmtlZFUSX2F1dGhfdXNlcl9iYWNrZW5kVS5zYXRjaG1v\nX3N0b3JlLmFjY291bnRzLmVtYWlsLWF1dGguRW1haWxCYWNrZW5kVQ1fYXV0aF91c2VyX2lkSwF1\nLg==\n', u'2012-02-06 04:01:46.730621', 'bfc24ee7091667f9b958b48992bf653d')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:46.789756 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:46.789756')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = bfc24ee7091667f9b958b48992bf653d  AND "django_session"."expire_date" > 2012-01-23 04:01:46.894630 ); args=('bfc24ee7091667f9b958b48992bf653d', u'2012-01-23 04:01:46.894630')
Mon, 23 Jan 2012 04:01:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
