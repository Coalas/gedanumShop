Sun, 01 Apr 2012 21:41:56 root         INFO     Satchmo Started
Sun, 01 Apr 2012 21:41:56 root         INFO     Satchmo Started
Sun, 01 Apr 2012 12:41:57 configuration DEBUG    Could not load default shipping module configuration: fedex_web_services
Sun, 01 Apr 2012 12:41:57 tiered.config DEBUG    loaded
Sun, 01 Apr 2012 12:41:57 shop.listeners DEBUG    Added default shop listeners
Sun, 01 Apr 2012 12:41:57 satchmo_toolbar DEBUG    Satchmo toolbar ready
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Management command: runserver
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Sun, 01 Apr 2012 12:41:57 django.db.backends DEBUG    (0.052) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:41:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Management command: runserver
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sun, 01 Apr 2012 12:41:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sun, 01 Apr 2012 12:41:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DOTPAY', 'LABEL')
Sun, 01 Apr 2012 12:41:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sun, 01 Apr 2012 12:41:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DOTPAY', 'KEY')
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Management command: runserver
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Management command: runserver
Sun, 01 Apr 2012 12:41:57 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Sun, 01 Apr 2012 12:41:57 configuration DEBUG    SettingNotSet: PAYMENT_DOTPAY.CREDITCHOICES
Sun, 01 Apr 2012 12:42:00 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sun, 01 Apr 2012 12:42:00 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sun, 01 Apr 2012 12:42:01 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ko/workspace/store/../store/static/
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DOTPAY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DOTPAY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DOTPAY', 'URL_BASE')
Sun, 01 Apr 2012 12:42:01 payment.urls DEBUG    Found payment processor: DOTPAY, adding urls at ^dotpay/
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-04-01  AND "product_discount"."endDate" > 2012-04-01 ); args=(True, True, 1, '2012-04-01', '2012-04-01')
Sun, 01 Apr 2012 12:42:01 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 72 ; args=(72,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 72  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(72,)
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(72, u'pl')
Sun, 01 Apr 2012 12:42:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 72  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(72, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 72 ; args=(72,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 72 ; args=(72,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 72 ; args=(72,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 72  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(72, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 75 ; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 75  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(75, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 75  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(75, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 75 ; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 75 ; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 75 ; args=(75,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 75  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(75, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 79 ; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 79  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(79, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 79  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(79, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 79 ; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 79 ; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 79 ; args=(79,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 79  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(79, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 81 ; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 81  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(81, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 81  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(81, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 81 ; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 81 ; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 81 ; args=(81,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 81  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(81, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 51 ; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 51  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(51, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 51  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(51, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 51 ; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 51 ; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 51 ; args=(51,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 51  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(51, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 67 ; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 67  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(67, u'pl')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 67  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(67, u'pl%')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 67 ; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 67 ; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 67 ; args=(67,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 67  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-04-01  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(67, '2012-04-01', Decimal('1'))
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 01 Apr 2012 12:42:03 tax.area     DEBUG    Got rate [Default] = Default - Poland = 23.00%
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 01 Apr 2012 12:42:03 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
