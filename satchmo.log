Sun, 15 Jan 2012 10:56:40 root         INFO     Satchmo Started
Sun, 15 Jan 2012 10:56:41 root         INFO     Satchmo Started
Sun, 15 Jan 2012 01:56:45 configuration DEBUG    Could not load default shipping module configuration: fedex_web_services
Sun, 15 Jan 2012 01:56:46 shop.listeners DEBUG    Added default shop listeners
Sun, 15 Jan 2012 01:56:46 satchmo_toolbar DEBUG    Satchmo toolbar ready
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Management command: runserver
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.008) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Management command: runserver
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Management command: runserver
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Management command: runserver
Sun, 15 Jan 2012 01:56:46 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Sun, 15 Jan 2012 01:56:46 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = CREDITCHOICES ); args=(1, 1, 'PAYMENT_DUMMY', 'CREDITCHOICES')
Sun, 15 Jan 2012 01:56:52 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:52.735320 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:52.735320')
Sun, 15 Jan 2012 01:56:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sun, 15 Jan 2012 01:56:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Sun, 15 Jan 2012 01:56:54 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ko/workspace/store/../store/static/
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Sun, 15 Jan 2012 01:56:55 payment.urls DEBUG    Found payment processor: DUMMY, adding urls at ^dummy/
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.012) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15 ); args=(True, True, 1, '2012-01-15', '2012-01-15')
Sun, 15 Jan 2012 01:56:56 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sun, 15 Jan 2012 01:56:56 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sun, 15 Jan 2012 01:56:56 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sun, 15 Jan 2012 01:56:56 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sun, 15 Jan 2012 01:56:57 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.012) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = MODULE ); args=(1, 1, 'TAX', 'MODULE')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(43, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(43, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 43  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(43, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(44, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(44, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 44  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(44, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:56:58 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:56:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.181074 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.181074')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.323040 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.323040')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.391445 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.391445')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.429521 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.429521')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.473313 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.473313')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.518767 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.518767')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.608243 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.608243')
Sun, 15 Jan 2012 01:56:59 django.db.backends DEBUG    (0.049) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:56:59.682041 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:56:59.682041')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.388149 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.388149')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.439272 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.439272')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.475655 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.475655')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.501761 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.501761')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.531907 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.531907')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.564438 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.564438')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.602122 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.602122')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.632221 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.632221')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.685479 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.685479')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.725949 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.725949')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.779504 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.779504')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.896690 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.896690')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.942889 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.942889')
Sun, 15 Jan 2012 01:57:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:00.979292 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:00.979292')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.022232 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.022232')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.043088 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.043088')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.069620 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.069620')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.091301 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.091301')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.120244 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.120244')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.137989 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.137989')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.155329 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.155329')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.228192 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.228192')
Sun, 15 Jan 2012 01:57:01 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:01.337281 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:01.337281')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.075824 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.075824')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(43, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(43, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 43  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(43, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(44, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(44, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 44  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(44, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:57:49 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.781963 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.781963')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.833425 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.833425')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.850718 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.850718')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.872905 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.872905')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.889849 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.889849')
Sun, 15 Jan 2012 01:57:49 django.db.backends DEBUG    (0.050) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:49.931740 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:49.931740')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.029111 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.029111')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.086893 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.086893')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.659379 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.659379')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.705017 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.705017')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.741029 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.741029')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.778904 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.778904')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.799745 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.799745')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.840358 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.840358')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.882516 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.882516')
Sun, 15 Jan 2012 01:57:50 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.910033 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.910033')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:50.972200 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:50.972200')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.034) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.027369 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.027369')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.080050 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.080050')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.125249 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.125249')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.174605 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.174605')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.219969 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.219969')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.033) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.259443 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.259443')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.316449 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.316449')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.342984 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.342984')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.395999 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.395999')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.434448 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.434448')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.471273 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.471273')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.522119 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.522119')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.560703 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.560703')
Sun, 15 Jan 2012 01:57:51 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:57:51.656763 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:57:51.656763')
Sun, 15 Jan 2012 01:58:41 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:41.375184 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:41.375184')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:42.184611 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:42.184611')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(43, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(43, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 43  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(43, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(44, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(44, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 44  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(44, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:58:42 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:58:42 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:42.919625 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:42.919625')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:42.998950 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:42.998950')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.042929 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.042929')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.080432 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.080432')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.104239 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.104239')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.134232 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.134232')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.173205 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.173205')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.199452 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.199452')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.670451 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.670451')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.719362 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.719362')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.751112 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.751112')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.783509 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.783509')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.802302 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.802302')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.831038 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.831038')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.847832 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.847832')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.872973 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.872973')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.909322 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.909322')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.940546 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.940546')
Sun, 15 Jan 2012 01:58:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.964863 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.964863')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:43.995194 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:43.995194')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.018299 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.018299')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.046792 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.046792')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.076795 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.076795')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.101753 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.101753')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.124469 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.124469')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.149179 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.149179')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.192708 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.192708')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.230875 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.230875')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.271417 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.271417')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.301751 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.301751')
Sun, 15 Jan 2012 01:58:44 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:58:44.509527 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:58:44.509527')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:16.339067 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:16.339067')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:16.696985 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:16.696985')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = picture-postcards  AND "product_category"."site_id" = 1 ); args=(True, u'picture-postcards', 1)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 3  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(3, True, 1)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', True)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(6, True)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(5, True)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 3 ); args=(True, 3)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sun, 15 Jan 2012 01:59:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sun, 15 Jan 2012 01:59:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sun, 15 Jan 2012 01:59:17 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:17.067412 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:17.067412')
Sun, 15 Jan 2012 01:59:17 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:17.112765 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:17.112765')
Sun, 15 Jan 2012 01:59:17 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:17.229008 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:17.229008')
Sun, 15 Jan 2012 01:59:17 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:17.788285 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:17.788285')
Sun, 15 Jan 2012 01:59:18 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:18.951985 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:18.951985')
Sun, 15 Jan 2012 01:59:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = panoramic  AND "product_category"."site_id" = 1 ); args=(True, u'panoramic', 1)
Sun, 15 Jan 2012 01:59:18 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:18 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 6  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(6, True, 1)
Sun, 15 Jan 2012 01:59:18 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (22, 2, 3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 22, 2, 3, True)
Sun, 15 Jan 2012 01:59:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(6, True)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 6 ); args=(True, 6)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 6 ; args=(6,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_categoryimage"."id", "product_categoryimage"."category_id", "product_categoryimage"."picture", "product_categoryimage"."caption", "product_categoryimage"."sort" FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 6  ORDER BY "product_categoryimage"."sort" ASC LIMIT 1; args=(6,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 6 ; args=(6,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_categoryimage"."id", "product_categoryimage"."category_id", "product_categoryimage"."picture", "product_categoryimage"."caption", "product_categoryimage"."sort" FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 6  ORDER BY "product_categoryimage"."sort" ASC LIMIT 1; args=(6,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:19 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:19 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:19 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.442238 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.442238')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.509785 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.509785')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.622106 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.622106')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.685850 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.685850')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.721533 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.721533')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.816524 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.816524')
Sun, 15 Jan 2012 01:59:19 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:19.854916 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:19.854916')
Sun, 15 Jan 2012 01:59:20 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:20.105872 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:20.105872')
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:22.217474 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:22.217474')
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-urodzinowa-roczek-1  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-urodzinowa-roczek-1', 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 3, True)
Sun, 15 Jan 2012 01:59:22 root         DEBUG    subtypes = ('ConfigurableProduct',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" INNER JOIN "product_product" T4 ON ("configurable_productvariation"."product_id" = T4."id") WHERE ("configurable_productvariation"."parent_id" = 3  AND T4."active" = True ); args=(3, True)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."site_id", "product_optiongroup"."name", "product_optiongroup"."description", "product_optiongroup"."sort_order", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_optiongroup" INNER JOIN "configurable_configurableproduct_option_group" ON ("product_optiongroup"."id" = "configurable_configurableproduct_option_group"."optiongroup_id") INNER JOIN "django_site" ON ("product_optiongroup"."site_id" = "django_site"."id") WHERE "configurable_configurableproduct_option_group"."configurableproduct_id" = 3  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "product_option"."option_group_id" = 5  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(5,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."sort_order" FROM "product_optiongroup" ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=()
Sun, 15 Jan 2012 01:59:22 product.utils DEBUG    Serialized Options kartka-urodzinowa-roczek-1: []
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 3, True)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productpricelookup" WHERE "product_productpricelookup"."parentid" = 3 ; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE "product_productpricelookup"."parentid" = 3  ORDER BY "product_productpricelookup"."price" DESC; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_soft ; args=(u'neat-book_soft',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 15  ORDER BY "product_productimage"."sort" ASC; args=(15,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_m ; args=(u'neat-book_m',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 24  ORDER BY "product_productimage"."sort" ASC; args=(24,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_s ; args=(u'neat-book_s',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 23  ORDER BY "product_productimage"."sort" ASC; args=(23,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_hard ; args=(u'neat-book_hard',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 14  ORDER BY "product_productimage"."sort" ASC; args=(14,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_hard ; args=(u'neat-book_hard',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 14  ORDER BY "product_productimage"."sort" ASC; args=(14,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_tape ; args=(u'neat-book_tape',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 16  ORDER BY "product_productimage"."sort" ASC; args=(16,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:22 product.views DEBUG    finding product template: ['product/detail_configurableproduct.html', 'product/product.html']
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 3  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 3  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 6 ); args=(True, 6)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:22 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:22 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC; args=(3,)
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 3  AND "product_productattribute"."languagecode" = pl ); args=(3, 'pl')
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 3  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(3, '')
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:23.712197 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:23.712197')
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:23.822518 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:23.822518')
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:23.852058 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:23.852058')
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:23.892430 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:23.892430')
Sun, 15 Jan 2012 01:59:23 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:23.944665 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:23.944665')
Sun, 15 Jan 2012 01:59:24 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:23.993516 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:23.993516')
Sun, 15 Jan 2012 01:59:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:24.031903 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:24.031903')
Sun, 15 Jan 2012 01:59:24 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:24.460115 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:24.460115')
Sun, 15 Jan 2012 01:59:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:24.488895 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:24.488895')
Sun, 15 Jan 2012 01:59:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:24.712824 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:24.712824')
Sun, 15 Jan 2012 01:59:30 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:30.968600 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:30.968600')
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:32.439647 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:32.439647')
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = circle  AND "product_category"."site_id" = 1 ); args=(True, u'circle', 1)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 2  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(2, True, 1)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', True)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(2, True)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 2 ); args=(True, 2)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:32.691599 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:32.691599')
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:32.727501 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:32.727501')
Sun, 15 Jan 2012 01:59:32 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:32.802488 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:32.802488')
Sun, 15 Jan 2012 01:59:33 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:33.147797 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:33.147797')
Sun, 15 Jan 2012 01:59:34 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:34.424462 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:34.424462')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:35.577437 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:35.577437')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = postcards  AND "product_category"."site_id" = 1 ); args=(True, u'postcards', 1)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 4  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4, True, 1)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(10, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(9, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(19, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(16, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(18, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(17, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(15, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(14, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(13, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(11, True)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 4 ); args=(True, 4)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sun, 15 Jan 2012 01:59:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sun, 15 Jan 2012 01:59:36 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:36.051488 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:36.051488')
Sun, 15 Jan 2012 01:59:36 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:36.106421 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:36.106421')
Sun, 15 Jan 2012 01:59:36 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:36.177357 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:36.177357')
Sun, 15 Jan 2012 01:59:36 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:36.602689 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:36.602689')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:38.360083 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:38.360083')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = ch-cards  AND "product_category"."site_id" = 1 ); args=(True, u'ch-cards', 1)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 10  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(10, True, 1)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (36, 37, 38, 39) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 36, 37, 38, 39, True)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(10, True)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 10 ); args=(True, 10)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 10 ; args=(10,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 36 ; args=(36,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 36  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(36,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 36  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(36, u'pl')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 36  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(36, u'pl%')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 36 ; args=(36,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 36 ; args=(36,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 36 ; args=(36,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 36  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(36, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 37  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(37,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 37  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(37, u'pl')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 37  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(37, u'pl%')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 37  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(37, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 38 ; args=(38,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 38  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(38,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 38  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(38, u'pl')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 38  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(38, u'pl%')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 38 ; args=(38,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 38 ; args=(38,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 38 ; args=(38,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 38  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(38, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 39 ; args=(39,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 39  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(39,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 39  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(39, u'pl')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 39  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(39, u'pl%')
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 39 ; args=(39,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 39 ; args=(39,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 39 ; args=(39,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 39  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(39, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:38 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:38 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:38.991704 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:38.991704')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.027901 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.027901')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.210662 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.210662')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.237407 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.237407')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.257862 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.257862')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.280116 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.280116')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.303421 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.303421')
Sun, 15 Jan 2012 01:59:39 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:39.588205 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:39.588205')
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:40.577442 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:40.577442')
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-pamiatka-chrztu-sw-1  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-pamiatka-chrztu-sw-1', 1)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 37 ; args=(37,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (37) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 37, True)
Sun, 15 Jan 2012 01:59:40 root         DEBUG    subtypes = ()
Sun, 15 Jan 2012 01:59:40 product.views DEBUG    finding product template: ['product/product.html']
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 37  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(37,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 37  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(37,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 10 ); args=(True, 10)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 37  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(37, u'pl')
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 37  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(37, u'pl%')
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 37  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(37, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 01:59:40 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 37  ORDER BY "product_productimage"."sort" ASC; args=(37,)
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 37  AND "product_productattribute"."languagecode" = pl ); args=(37, 'pl')
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 37  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(37, '')
Sun, 15 Jan 2012 01:59:40 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:40.927614 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:40.927614')
Sun, 15 Jan 2012 01:59:41 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:40.988848 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:40.988848')
Sun, 15 Jan 2012 01:59:41 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:41.152809 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:41.152809')
Sun, 15 Jan 2012 01:59:41 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:41.188353 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:41.188353')
Sun, 15 Jan 2012 01:59:41 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:41.219798 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:41.219798')
Sun, 15 Jan 2012 01:59:41 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:41.447842 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:41.447842')
Sun, 15 Jan 2012 01:59:49 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:49.874112 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:49.874112')
Sun, 15 Jan 2012 01:59:50 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:50.030383 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:50.030383')
Sun, 15 Jan 2012 01:59:51 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:51.434231 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:51.434231')
Sun, 15 Jan 2012 01:59:59 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 01:59:59.772926 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 01:59:59.772926')
Sun, 15 Jan 2012 01:59:59 satchmo_store.accounts.views DEBUG    No contact in request
Sun, 15 Jan 2012 01:59:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sun, 15 Jan 2012 01:59:59 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ALLOW_NICKNAME_USERNAME ); args=(1, 1, 'SHOP', 'ALLOW_NICKNAME_USERNAME')
Sun, 15 Jan 2012 02:00:00 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:00.002991 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:00.002991')
Sun, 15 Jan 2012 02:00:00 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:00.067605 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:00.067605')
Sun, 15 Jan 2012 02:00:00 django.db.backends DEBUG    (0.028) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:00.285650 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:00.285650')
Sun, 15 Jan 2012 02:00:00 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:00.522963 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:00.522963')
Sun, 15 Jan 2012 02:00:06 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:06.863198 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:06.863198')
Sun, 15 Jan 2012 02:00:07 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:07.073195 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:07.073195')
Sun, 15 Jan 2012 02:00:07 django.db.backends DEBUG    (0.033) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:07.150750 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:07.150750')
Sun, 15 Jan 2012 02:00:07 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:07.364998 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:07.364998')
Sun, 15 Jan 2012 02:00:07 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:07.573478 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:07.573478')
Sun, 15 Jan 2012 02:00:08 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:08.461059 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:08.461059')
Sun, 15 Jan 2012 02:00:08 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:08.647267 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:08.647267')
Sun, 15 Jan 2012 02:00:08 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:08.700249 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:08.700249')
Sun, 15 Jan 2012 02:00:08 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:08.786053 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:08.786053')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:09.145334 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:09.145334')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:09.444341 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:09.444341')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(43, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(43, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 43  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(43, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(44, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(44, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 44  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(44, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:09 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:00:10 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:10.099482 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:10.099482')
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:10.129251 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:10.129251')
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:10.210159 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:10.210159')
Sun, 15 Jan 2012 02:00:10 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:10.674373 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:10.674373')
Sun, 15 Jan 2012 02:00:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:11.413626 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:11.413626')
Sun, 15 Jan 2012 02:00:11 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:11.576990 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:11.576990')
Sun, 15 Jan 2012 02:00:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:11.642150 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:11.642150')
Sun, 15 Jan 2012 02:00:11 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:11.802154 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:11.802154')
Sun, 15 Jan 2012 02:00:12 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:12.009443 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:12.009443')
Sun, 15 Jan 2012 02:00:16 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:16.044929 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:16.044929')
Sun, 15 Jan 2012 02:00:16 django.db.backends DEBUG    (0.040) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:16.218101 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:16.218101')
Sun, 15 Jan 2012 02:00:16 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:16.310623 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:16.310623')
Sun, 15 Jan 2012 02:00:16 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:16.515044 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:16.515044')
Sun, 15 Jan 2012 02:00:16 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:00:16.709452 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:00:16.709452')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:03:54.626094 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:03:54.626094')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15 ); args=(True, True, 1, '2012-01-15', '2012-01-15')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Sun, 15 Jan 2012 02:03:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:03:55.315330 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:03:55.315330')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:03:55.376934 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:03:55.376934')
Sun, 15 Jan 2012 02:03:55 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:03:55.500171 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:03:55.500171')
Sun, 15 Jan 2012 02:03:56 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:03:56.141851 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:03:56.141851')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:05.928651 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:05.928651')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Sun, 15 Jan 2012 02:04:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 8; args=(True, 1, True)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = TAX_AREA_ADDRESS ); args=(1, 1, 'TAX', 'TAX_AREA_ADDRESS')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 43  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(43, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 43  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(43, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 43 ; args=(43,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 43  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(43, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 44  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(44, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 44  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(44, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 44 ; args=(44,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 44  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(44, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:06 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:06.636834 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:06.636834')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:06.699841 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:06.699841')
Sun, 15 Jan 2012 02:04:06 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:06.797478 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:06.797478')
Sun, 15 Jan 2012 02:04:07 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:07.259680 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:07.259680')
Sun, 15 Jan 2012 02:04:16 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:16.889328 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:16.889328')
Sun, 15 Jan 2012 02:04:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa-11  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa-11', 1)
Sun, 15 Jan 2012 02:04:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:04:16 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (71) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 71, True)
Sun, 15 Jan 2012 02:04:16 root         DEBUG    subtypes = ()
Sun, 15 Jan 2012 02:04:16 product.views DEBUG    finding product template: ['product/product.html']
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 71  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 71  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.001) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:17 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC; args=(71,)
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 71  AND "product_productattribute"."languagecode" = pl ); args=(71, 'pl')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 71  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(71, '')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:17.258135 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:17.258135')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:17.305427 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:17.305427')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:17.360543 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:17.360543')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:17.415354 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:17.415354')
Sun, 15 Jan 2012 02:04:17 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:17.745213 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:17.745213')
Sun, 15 Jan 2012 02:04:25 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:25.366051 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:25.366051')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:39.169919 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:39.169919')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:39.416266 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:39.416266')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = eighteens  AND "product_category"."site_id" = 1 ); args=(True, u'eighteens', 1)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 16  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(16, True, 1)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (21, 25, 26, 28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 21, 25, 26, 28, True)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(16, True)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 16 ); args=(True, 16)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 16 ; args=(16,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 8 ; args=(8,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = SHOW_NO_PHOTO_IN_CATEGORY ); args=(1, 1, 'PRODUCT', 'SHOW_NO_PHOTO_IN_CATEGORY')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 21 ; args=(21,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 21  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(21,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 21  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 21  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 26  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(26,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(26, u'pl')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 26  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(26, u'pl%')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 26 ; args=(26,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 26  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(26, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 28  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(28,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:39 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:04:39 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:39.984093 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:39.984093')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.018231 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.018231')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.102108 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.102108')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.196762 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.196762')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.231910 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.231910')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.257786 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.257786')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.278362 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.278362')
Sun, 15 Jan 2012 02:04:40 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:40.467940 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:40.467940')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:42.375906 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:42.375906')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-urodzinowa-18ka-2  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-urodzinowa-18ka-2', 1)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 28 ; args=(28,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (28) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 28, True)
Sun, 15 Jan 2012 02:04:42 root         DEBUG    subtypes = ()
Sun, 15 Jan 2012 02:04:42 product.views DEBUG    finding product template: ['product/product.html']
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 28  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(28,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 28  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(28,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(28, u'pl')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 28  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(28, u'pl%')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 28  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(28, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:42 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 28  ORDER BY "product_productimage"."sort" ASC; args=(28,)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 28  AND "product_productattribute"."languagecode" = pl ); args=(28, 'pl')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 28  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(28, '')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.027) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:42.762172 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:42.762172')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:42.832670 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:42.832670')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:42.907633 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:42.907633')
Sun, 15 Jan 2012 02:04:42 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:42.968542 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:42.968542')
Sun, 15 Jan 2012 02:04:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:43.375624 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:43.375624')
Sun, 15 Jan 2012 02:04:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:43.788488 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:43.788488')
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:44.689049 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:44.689049')
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-18  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-18', 1)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (25) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 25, True)
Sun, 15 Jan 2012 02:04:44 root         DEBUG    subtypes = ()
Sun, 15 Jan 2012 02:04:44 product.views DEBUG    finding product template: ['product/product.html']
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 25  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 25  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(25,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 8 ); args=(True, 8)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:44 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 25  ORDER BY "product_productimage"."sort" ASC; args=(25,)
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 25  AND "product_productattribute"."languagecode" = pl ); args=(25, 'pl')
Sun, 15 Jan 2012 02:04:44 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 25  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(25, '')
Sun, 15 Jan 2012 02:04:45 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:45.059467 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:45.059467')
Sun, 15 Jan 2012 02:04:45 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:45.088932 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:45.088932')
Sun, 15 Jan 2012 02:04:45 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:45.196689 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:45.196689')
Sun, 15 Jan 2012 02:04:45 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:45.253610 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:45.253610')
Sun, 15 Jan 2012 02:04:45 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:45.570064 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:45.570064')
Sun, 15 Jan 2012 02:04:47 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:47.353131 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:47.353131')
Sun, 15 Jan 2012 02:04:47 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:47.475403 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:47.475403')
Sun, 15 Jan 2012 02:04:49 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:49.484260 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:49.484260')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:51.026099 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:51.026099')
Sun, 15 Jan 2012 02:04:51 shop.views.cart DEBUG    FORM: <QueryDict: {u'addcart': [u'Dodaj do koszyka'], u'csrfmiddlewaretoken': [u'5e10c7e5a3df3f0904cb839b8ee1797f'], u'productname': [u'kartka-18'], u'quantity': [u'1']}>
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_PRECISION ); args=(1, 1, 'SHOP', 'CART_PRECISION')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_ROUNDING ); args=(1, 1, 'SHOP', 'CART_ROUNDING')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."slug" = kartka-18  AND "product_product"."site_id" = 1 ); args=(u'kartka-18', 1)
Sun, 15 Jan 2012 02:04:51 shop.views.cart DEBUG    found product: Kartka urodzinowa - 18ka
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 shop.views.cart DEBUG    product kartka-18 is active
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cart" ("site_id", "desc", "date_time_created", "customer_id") VALUES (1, None, 2012-01-15 02:04:51.075307, None); args=(1, None, u'2012-01-15 02:04:51.075307', None)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE ("shop_cartitem"."cart_id" = 5  AND "shop_cartitem"."product_id" = 25 ) ORDER BY "shop_cartitem"."id" ASC; args=(5, 25)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) INSERT INTO "shop_cartitem" ("cart_id", "product_id", "quantity") VALUES (5, 25, 0.000000); args=(5, 25, u'0.000000')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "shop_cartitem" WHERE "shop_cartitem"."id" = 7  LIMIT 1; args=(7,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) UPDATE "shop_cartitem" SET "cart_id" = 5, "product_id" = 25, "quantity" = 1.000000 WHERE "shop_cartitem"."id" = 7 ; args=(5, 25, u'1.000000', 7)
Sun, 15 Jan 2012 02:04:51 shop.listeners DEBUG    caught cart changed signal - remove_order_on_cart_update
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  LIMIT 1; args=('24db7b8132afbf5f847eaeda4ed4eda0',)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = MGNlNTk4NTJiNWE3MWNlYmU4YTE2MmEyN2FhMzIwZTM5NGE0NTVjMTqAAn1xAVUEY2FydHECSwVz
Lg==
, "expire_date" = 2012-01-29 02:04:51.331266 WHERE "django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0 ; args=('MGNlNTk4NTJiNWE3MWNlYmU4YTE2MmEyN2FhMzIwZTM5NGE0NTVjMTqAAn1xAVUEY2FydHECSwVz\nLg==\n', u'2012-01-29 02:04:51.331266', '24db7b8132afbf5f847eaeda4ed4eda0')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:51.440707 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:51.440707')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (25) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 25, True)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(25, u'pl')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 25  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(25, u'pl%')
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:51 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:51 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:51 shop.templatetags.satchmo_cart DEBUG    sub details
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."title" LIKE Default ESCAPE '\' ; args=(u'Default',)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 1 ); args=(176, 1)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:04:51 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:04:51 tax.area     DEBUG    Got rate [Default] = Default - Poland = 8.00%
Sun, 15 Jan 2012 02:04:52 django.db.backends DEBUG    (0.027) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:51.972194 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:51.972194')
Sun, 15 Jan 2012 02:04:52 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:52.070438 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:52.070438')
Sun, 15 Jan 2012 02:04:52 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:52.163966 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:52.163966')
Sun, 15 Jan 2012 02:04:52 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:52.248067 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:52.248067')
Sun, 15 Jan 2012 02:04:52 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:04:52.563830 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:04:52.563830')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:01.812018 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:01.812018')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = AUTHENTICATION_REQUIRED ); args=(1, 1, 'SHOP', 'AUTHENTICATION_REQUIRED')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:01 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (25) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 25, True)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:01 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  LIMIT 1; args=('24db7b8132afbf5f847eaeda4ed4eda0',)
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = ZDEyNzUxMGM2NTAyYTI2NWRmZGY2OGRlMzY2OTY5ZTYzMTUyYTIzMTqAAn1xAShVCnRlc3Rjb29r
aWVxAlUGd29ya2VkcQNVBGNhcnRLBXUu
, "expire_date" = 2012-01-29 02:05:02.448369 WHERE "django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0 ; args=('ZDEyNzUxMGM2NTAyYTI2NWRmZGY2OGRlMzY2OTY5ZTYzMTUyYTIzMTqAAn1xAShVCnRlc3Rjb29r\naWVxAlUGd29ya2VkcQNVBGNhcnRLBXUu\n', u'2012-01-29 02:05:02.448369', '24db7b8132afbf5f847eaeda4ed4eda0')
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:02.666653 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:02.666653')
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:02.693184 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:02.693184')
Sun, 15 Jan 2012 02:05:02 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:02.883416 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:02.883416')
Sun, 15 Jan 2012 02:05:03 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:03.096244 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:03.096244')
Sun, 15 Jan 2012 02:05:42 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:42.523540 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:42.523540')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.164102 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.164102')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."slug" = magnet-card  AND "product_category"."site_id" = 1 ); args=(True, u'magnet-card', 1)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.008) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_category" ON ("product_product"."id" = "product_product_category"."product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") LEFT OUTER JOIN "configurable_productvariation" ON ("product_product"."id" = "configurable_productvariation"."product_id") LEFT OUTER JOIN "configurable_configurableproduct" ON ("configurable_productvariation"."parent_id" = "configurable_configurableproduct"."product_id") WHERE ("product_product_category"."category_id" = 14  AND "product_product"."active" = True  AND "product_product"."site_id" = 1  AND "configurable_configurableproduct"."product_id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(14, True, 1)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (62, 63, 71) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 62, 63, 71, True)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(14, True)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 14 ); args=(True, 14)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 14 ; args=(14,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 12 ; args=(12,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categoryimage" WHERE "product_categoryimage"."category_id" = 4 ; args=(4,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(62,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:43 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 63 ; args=(63,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 63  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(63,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(63, u'pl')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 63  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(63, u'pl%')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 63 ; args=(63,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 63 ; args=(63,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 63 ; args=(63,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 63  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(63, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:43 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 71  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(71,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(71, u'pl')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 71  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(71, u'pl%')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 71 ; args=(71,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 71  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(71, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:43 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.030) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.705193 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.705193')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.766197 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.766197')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.859442 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.859442')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.892981 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.892981')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.927947 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.927947')
Sun, 15 Jan 2012 02:05:43 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:43.952638 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:43.952638')
Sun, 15 Jan 2012 02:05:44 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:44.276879 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:44.276879')
Sun, 15 Jan 2012 02:05:55 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:55.938124 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:55.938124')
Sun, 15 Jan 2012 02:05:55 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = kartka-walentynkowa-3  AND "product_product"."site_id" = 1 ); args=(True, u'kartka-walentynkowa-3', 1)
Sun, 15 Jan 2012 02:05:55 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:55 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:55 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 62 ; args=(62,)
Sun, 15 Jan 2012 02:05:55 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2012-01-15  AND "product_discount"."endDate" > 2012-01-15  AND ("product_discount_valid_products"."product_id" IN (62) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2012-01-15', '2012-01-15', 62, True)
Sun, 15 Jan 2012 02:05:55 root         DEBUG    subtypes = ()
Sun, 15 Jan 2012 02:05:55 product.views DEBUG    finding product template: ['product/product.html']
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5 ; args=(5,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 5  ORDER BY "shop_cartitem"."id" ASC; args=(5,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 25 ; args=(25,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 25  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(25, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 7 ; args=(7,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 62  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(62,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 62  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(62,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 12 ); args=(True, 12)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(62, u'pl')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 62  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(62, u'pl%')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 62  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2012-01-15  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(62, '2012-01-15', Decimal('1'))
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "area_taxrate"."id", "area_taxrate"."taxClass_id", "area_taxrate"."taxZone_id", "area_taxrate"."taxCountry_id", "area_taxrate"."percentage" FROM "area_taxrate" WHERE ("area_taxrate"."taxCountry_id" = 176  AND "area_taxrate"."taxClass_id" = 3 ); args=(176, 3)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass" WHERE "product_taxclass"."id" = 3 ; args=(3,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Sun, 15 Jan 2012 02:05:56 tax.area     DEBUG    Got rate [Kartka] = Kartka - Poland = 8.00%
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 62  ORDER BY "product_productimage"."sort" ASC; args=(62,)
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 62  AND "product_productattribute"."languagecode" = pl ); args=(62, 'pl')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 62  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(62, '')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:56.341308 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:56.341308')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:56.399723 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:56.399723')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:56.642973 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:56.642973')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:56.676403 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:56.676403')
Sun, 15 Jan 2012 02:05:56 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:05:56.805445 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:05:56.805445')
Sun, 15 Jan 2012 02:06:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:06:00.146451 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:06:00.146451')
Sun, 15 Jan 2012 02:06:00 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:06:00.293367 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:06:00.293367')
Sun, 15 Jan 2012 02:06:02 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 24db7b8132afbf5f847eaeda4ed4eda0  AND "django_session"."expire_date" > 2012-01-15 02:06:02.042916 ); args=('24db7b8132afbf5f847eaeda4ed4eda0', u'2012-01-15 02:06:02.042916')
