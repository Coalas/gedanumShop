Thu, 29 Dec 2011 08:42:23 root         INFO     Satchmo Started
Thu, 29 Dec 2011 08:42:23 root         INFO     Satchmo Started
Wed, 28 Dec 2011 23:42:24 shop.listeners DEBUG    Added default shop listeners
Wed, 28 Dec 2011 23:42:24 satchmo_toolbar DEBUG    Satchmo toolbar ready
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Management command: runserver
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Called model choices initialization function <shipping_choices>
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.008) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHIPPING  AND "livesettings_setting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHIPPING  AND "livesettings_longsetting"."key" = MODULES ); args=(1, 1, 'SHIPPING', 'MODULES')
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Management command: runserver
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Management command: runserver
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Called model choices initialization function <labelled_gateway_choices>
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Management command: runserver
Wed, 28 Dec 2011 23:42:24 iterchoices  DEBUG    Called model choices initialization function <credit_choices>
Wed, 28 Dec 2011 23:42:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = CREDITCHOICES ); args=(1, 1, 'PAYMENT_DUMMY', 'CREDITCHOICES')
Wed, 28 Dec 2011 23:42:29 django.db.backends DEBUG    (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:29.663563 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:29.663563')
Wed, 28 Dec 2011 23:42:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = SHOW_SITE ); args=(1, 1, 'SHOP', 'SHOW_SITE')
Wed, 28 Dec 2011 23:42:30 satchmo_store.urls DEBUG    Adding local serving of static files at: /home/ubuntu/workspace_python/store/../store/static/
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ACCOUNT_VERIFICATION ); args=(1, 1, 'SHOP', 'ACCOUNT_VERIFICATION')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = URL_BASE ); args=(1, 1, 'PAYMENT_DUMMY', 'URL_BASE')
Wed, 28 Dec 2011 23:42:30 payment.urls DEBUG    Found payment processor: DUMMY, adding urls at ^dummy/
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-28  AND "product_discount"."endDate" > 2011-12-28 ); args=(True, True, 1, '2011-12-28', '2011-12-28')
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-21 23:42:30.962777 ; args=(u'2011-12-21 23:42:30.962777',)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-27 23:42:30.962836 ; args=(u'2011-12-27 23:42:30.962836',)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 22:42:30.962843 ; args=(u'2011-12-28 22:42:30.962843',)
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Wed, 28 Dec 2011 23:42:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-21 ; args=('2011-12-21',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.001) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-28  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-28', Decimal('1'))
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-28  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-28', Decimal('1'))
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-28  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-28', Decimal('1'))
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 2; args=(True, 1, True)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.001) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-28  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-28', Decimal('1'))
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-28  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-28', Decimal('1'))
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:31.900102 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:31.900102')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:31.935689 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:31.935689')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:31.966882 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:31.966882')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:31.990749 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:31.990749')
Wed, 28 Dec 2011 23:42:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:32 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:32.004589 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:32.004589')
Wed, 28 Dec 2011 23:42:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:32 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:32.051055 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:32.051055')
Wed, 28 Dec 2011 23:42:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:42:32 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:42:32.230888 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:42:32.230888')
Wed, 28 Dec 2011 23:42:32 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:52:40.558804 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:52:40.558804')
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-28  AND "product_discount"."endDate" > 2011-12-28 ); args=(True, True, 1, '2011-12-28', '2011-12-28')
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.010) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.007) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = admin ; args=(u'admin',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-21 23:52:40.735834 ; args=(u'2011-12-21 23:52:40.735834',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-27 23:52:40.735849 ; args=(u'2011-12-27 23:52:40.735849',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 22:52:40.735855 ; args=(u'2011-12-28 22:52:40.735855',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-21 ; args=('2011-12-21',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.003) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined", "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "auth_user" ON ("django_admin_log"."user_id" = "auth_user"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1  ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = New  ORDER BY "shop_order"."time_stamp" DESC; args=(u'New',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."id", "shop_order"."site_id", "shop_order"."contact_id", "shop_order"."ship_addressee", "shop_order"."ship_street1", "shop_order"."ship_street2", "shop_order"."ship_city", "shop_order"."ship_state", "shop_order"."ship_postal_code", "shop_order"."ship_country", "shop_order"."bill_addressee", "shop_order"."bill_street1", "shop_order"."bill_street2", "shop_order"."bill_city", "shop_order"."bill_state", "shop_order"."bill_postal_code", "shop_order"."bill_country", "shop_order"."notes", "shop_order"."sub_total", "shop_order"."total", "shop_order"."discount_code", "shop_order"."discount", "shop_order"."method", "shop_order"."shipping_description", "shop_order"."shipping_method", "shop_order"."shipping_model", "shop_order"."shipping_cost", "shop_order"."shipping_discount", "shop_order"."tax", "shop_order"."time_stamp", "shop_order"."status" FROM "shop_order" WHERE "shop_order"."status" = Blocked  ORDER BY "shop_order"."time_stamp" DESC; args=(u'Blocked',)
Wed, 28 Dec 2011 23:52:40 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = admin_tools ; args=(u'admin_tools',)
Wed, 28 Dec 2011 23:52:41 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:52:41.027929 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:52:41.027929')
Wed, 28 Dec 2011 23:52:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:41 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:52:41.052687 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:52:41.052687')
Wed, 28 Dec 2011 23:52:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:52:41 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:52:41.105779 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:52:41.105779')
Wed, 28 Dec 2011 23:52:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:25 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:25.604892 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:25.604892')
Wed, 28 Dec 2011 23:55:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:28 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:28.519503 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:28.519503')
Wed, 28 Dec 2011 23:55:28 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:29 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:29.312187 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:29.312187')
Wed, 28 Dec 2011 23:55:29 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:29 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:29.915969 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:29.915969')
Wed, 28 Dec 2011 23:55:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:34 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:34.852765 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:34.852765')
Wed, 28 Dec 2011 23:55:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:35 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:35.208496 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:35.208496')
Wed, 28 Dec 2011 23:55:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:36 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:36.129136 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:36.129136')
Wed, 28 Dec 2011 23:55:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:38 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:38.392810 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:38.392810')
Wed, 28 Dec 2011 23:55:38 django.db.backends DEBUG    (0.005) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Wed, 28 Dec 2011 23:55:38 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-28 23:55:38.718371 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-28 23:55:38.718371')
Wed, 28 Dec 2011 23:55:38 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:07.793538 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:07.793538')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.002) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:00:07.878798 ; args=(u'2011-12-22 00:00:07.878798',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:00:07.878798 ; args=(u'2011-12-28 00:00:07.878798',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:00:07.878798 ; args=(u'2011-12-28 23:00:07.878798',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.001) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:00:07 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 2; args=(True, 1, True)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.413594 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.413594')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.433721 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.433721')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.448880 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.448880')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.457857 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.457857')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.470471 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.470471')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.488007 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.488007')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.529973 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.529973')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.622232 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.622232')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.645242 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.645242')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.668720 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.668720')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.689663 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.689663')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.711246 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.711246')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.729951 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.729951')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.746988 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.746988')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.008) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.771580 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.771580')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.790208 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.790208')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.842173 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.842173')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.860798 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.860798')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.890519 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.890519')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.909279 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.909279')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.927736 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.927736')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.945079 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.945079')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:08.961173 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:08.961173')
Thu, 29 Dec 2011 00:00:08 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:22.874640 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:22.874640')
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.001) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.005) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:00:22.985975 ; args=(u'2011-12-22 00:00:22.985975',)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:00:22.985994 ; args=(u'2011-12-28 00:00:22.985994',)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:00:22.986001 ; args=(u'2011-12-28 23:00:22.986001',)
Thu, 29 Dec 2011 00:00:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.005) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.003) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:00:23 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:23.515848 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:23.515848')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:23.683935 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:23.683935')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:00:23.802079 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:00:23.802079')
Thu, 29 Dec 2011 00:00:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:01:35 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:01:35.939893 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:01:35.939893')
Thu, 29 Dec 2011 00:01:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:01:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:01:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:01:36.106615 ; args=(u'2011-12-22 00:01:36.106615',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:01:36.106624 ; args=(u'2011-12-28 00:01:36.106624',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:01:36.106639 ; args=(u'2011-12-28 23:01:36.106639',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.007) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:01:36 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:01:36.612834 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:01:36.612834')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:01:36.800298 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:01:36.800298')
Thu, 29 Dec 2011 00:01:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:57.766554 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:57.766554')
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.001) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:06:57.881820 ; args=(u'2011-12-22 00:06:57.881820',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:06:57.881835 ; args=(u'2011-12-28 00:06:57.881835',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:06:57.881840 ; args=(u'2011-12-28 23:06:57.881840',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:06:57 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.004) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.007) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.004) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:06:58 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.512878 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.512878')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.551107 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.551107')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.574471 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.574471')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.601735 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.601735')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.623892 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.623892')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.637854 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.637854')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.677865 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.677865')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.775464 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.775464')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.830267 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.830267')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.861268 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.861268')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:58.883000 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:58.883000')
Thu, 29 Dec 2011 00:06:58 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.109885 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.109885')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.137371 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.137371')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.162552 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.162552')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.206356 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.206356')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.238037 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.238037')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.028) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.275777 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.275777')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.317347 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.317347')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.014) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.338063 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.338063')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.377951 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.377951')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:06:59.405331 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:06:59.405331')
Thu, 29 Dec 2011 00:06:59 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:16.515361 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:16.515361')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.005) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.006) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:07:16.599771 ; args=(u'2011-12-22 00:07:16.599771',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:07:16.599786 ; args=(u'2011-12-28 00:07:16.599786',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:07:16.599791 ; args=(u'2011-12-28 23:07:16.599791',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:07:16 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.003) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:07:16 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:16.978616 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:16.978616')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.008624 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.008624')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.039865 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.039865')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.076922 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.076922')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.103385 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.103385')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.139593 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.139593')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.198157 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.198157')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.398306 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.398306')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.462605 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.462605')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.495538 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.495538')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.521227 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.521227')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.693744 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.693744')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.715562 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.715562')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.760071 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.760071')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.800739 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.800739')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.833694 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.833694')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.853769 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.853769')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.891977 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.891977')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.931051 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.931051')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.976567 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.976567')
Thu, 29 Dec 2011 00:07:17 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:07:18 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:07:17.998226 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:07:17.998226')
Thu, 29 Dec 2011 00:07:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.107666 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.107666')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.002) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:10:52.183401 ; args=(u'2011-12-22 00:10:52.183401',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:10:52.183416 ; args=(u'2011-12-28 00:10:52.183416',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:10:52.183421 ; args=(u'2011-12-28 23:10:52.183421',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.009) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.003) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.002) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:10:52 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.528854 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.528854')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.556684 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.556684')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.588210 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.588210')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.611229 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.611229')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.624407 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.624407')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.644654 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.644654')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.690133 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.690133')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.787441 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.787441')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.852828 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.852828')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.009) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.871432 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.871432')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:52.890257 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:52.890257')
Thu, 29 Dec 2011 00:10:52 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.097231 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.097231')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.143047 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.143047')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.170615 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.170615')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.190067 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.190067')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.031) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.223831 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.223831')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.270568 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.270568')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.308698 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.308698')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.324529 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.324529')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.350931 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.350931')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:10:53.376618 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:10:53.376618')
Thu, 29 Dec 2011 00:10:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:11:26 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:11:26.285829 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:11:26.285829')
Thu, 29 Dec 2011 00:11:26 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:28.121010 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:28.121010')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.016) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.005) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:12:28.248455 ; args=(u'2011-12-22 00:12:28.248455',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:12:28.248469 ; args=(u'2011-12-28 00:12:28.248469',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:12:28.248479 ; args=(u'2011-12-28 23:12:28.248479',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.002) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.004) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.003) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.012) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.004) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.006) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.004) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.011) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:12:28 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:12:28 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.023234 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.023234')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.064014 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.064014')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.086145 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.086145')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.111148 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.111148')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.133314 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.133314')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.027) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.160852 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.160852')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.196670 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.196670')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.301965 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.301965')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.322836 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.322836')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.349247 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.349247')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.369528 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.369528')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.593966 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.593966')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.622516 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.622516')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.652198 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.652198')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.688812 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.688812')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.713078 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.713078')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.748340 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.748340')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.779216 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.779216')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.826240 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.826240')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.884199 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.884199')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:12:29.899372 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:12:29.899372')
Thu, 29 Dec 2011 00:12:29 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:25.776777 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:25.776777')
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:17:25.854200 ; args=(u'2011-12-22 00:17:25.854200',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:17:25.855488 ; args=(u'2011-12-28 00:17:25.855488',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:17:25.855496 ; args=(u'2011-12-28 23:17:25.855496',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.006) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.005) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:17:26 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:26 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.272548 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.272548')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.308737 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.308737')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.340127 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.340127')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.370159 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.370159')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.392908 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.392908')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.430091 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.430091')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.454082 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.454082')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.027) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.625092 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.625092')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.718881 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.718881')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.741590 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.741590')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.759955 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.759955')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.012) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.977621 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.977621')
Thu, 29 Dec 2011 00:17:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:26.999930 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:26.999930')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.020311 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.020311')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.045681 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.045681')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.072033 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.072033')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.084067 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.084067')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.012) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.145854 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.145854')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.181606 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.181606')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.205756 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.205756')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:17:27.229854 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:17:27.229854')
Thu, 29 Dec 2011 00:17:27 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:11.645615 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:11.645615')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.003) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.001) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.001) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:19:11.725075 ; args=(u'2011-12-22 00:19:11.725075',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:19:11.725104 ; args=(u'2011-12-28 00:19:11.725104',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:19:11.725122 ; args=(u'2011-12-28 23:19:11.725122',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.002) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:19:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:12 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.328645 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.328645')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.374398 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.374398')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.037) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.419685 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.419685')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.472006 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.472006')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.500477 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.500477')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.531984 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.531984')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.557955 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.557955')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.662188 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.662188')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.721731 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.721731')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.785031 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.785031')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:12.828999 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:12.828999')
Thu, 29 Dec 2011 00:19:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.028984 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.028984')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.060980 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.060980')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.093435 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.093435')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.122078 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.122078')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.148787 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.148787')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.178563 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.178563')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.200842 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.200842')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.220085 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.220085')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.232720 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.232720')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:13.282474 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:13.282474')
Thu, 29 Dec 2011 00:19:13 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:24.513984 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:24.513984')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.009) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.005) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:19:24.612867 ; args=(u'2011-12-22 00:19:24.612867',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:19:24.612892 ; args=(u'2011-12-28 00:19:24.612892',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:19:24.612905 ; args=(u'2011-12-28 23:19:24.612905',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.011) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:24 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.009) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:24 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:19:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.026) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.061563 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.061563')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.120348 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.120348')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.147342 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.147342')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.163592 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.163592')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.178249 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.178249')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.188802 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.188802')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.230278 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.230278')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.381317 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.381317')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.005) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.456217 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.456217')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.493987 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.493987')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.511974 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.511974')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.680736 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.680736')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.714519 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.714519')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.741155 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.741155')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.766225 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.766225')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.784994 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.784994')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.819112 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.819112')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.837424 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.837424')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.856382 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.856382')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.025) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.022) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.909115 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.909115')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:19:25.955283 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:19:25.955283')
Thu, 29 Dec 2011 00:19:25 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:47.807038 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:47.807038')
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.005) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:21:47.888119 ; args=(u'2011-12-22 00:21:47.888119',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:21:47.888135 ; args=(u'2011-12-28 00:21:47.888135',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:21:47.888141 ; args=(u'2011-12-28 23:21:47.888141',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:21:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.012) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:21:48 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.007) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.275746 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.275746')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.310393 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.310393')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.342528 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.342528')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.357226 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.357226')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.393680 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.393680')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.423454 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.423454')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.454839 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.454839')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.683962 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.683962')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.711399 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.711399')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.732640 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.732640')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:48.752740 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:48.752740')
Thu, 29 Dec 2011 00:21:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.022461 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.022461')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.044867 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.044867')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.066113 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.066113')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.091006 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.091006')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.126441 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.126441')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.137237 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.137237')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.009) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.171673 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.171673')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.218977 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.218977')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.251350 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.251350')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:21:49.294732 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:21:49.294732')
Thu, 29 Dec 2011 00:21:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:46.825089 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:46.825089')
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.007) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:22:46.915735 ; args=(u'2011-12-22 00:22:46.915735',)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:22:46.915754 ; args=(u'2011-12-28 00:22:46.915754',)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:22:46.915784 ; args=(u'2011-12-28 23:22:46.915784',)
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:22:46 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.004) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:22:47 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.435241 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.435241')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.458168 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.458168')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.488431 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.488431')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.504684 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.504684')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.533280 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.533280')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.555530 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.555530')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.579917 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.579917')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.702513 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.702513')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.752599 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.752599')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.784361 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.784361')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:47.800153 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:47.800153')
Thu, 29 Dec 2011 00:22:47 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.015822 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.015822')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.036319 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.036319')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.052340 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.052340')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.093242 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.093242')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.116134 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.116134')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.134376 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.134376')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.153533 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.153533')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.165922 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.165922')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.029) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.217260 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.217260')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:22:48.255930 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:22:48.255930')
Thu, 29 Dec 2011 00:22:48 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:23:47 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:23:47.593007 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:23:47.593007')
Thu, 29 Dec 2011 00:23:47 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:22.198469 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:22.198469')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.002) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.006) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:24:22.344684 ; args=(u'2011-12-22 00:24:22.344684',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:24:22.344703 ; args=(u'2011-12-28 00:24:22.344703',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:24:22.344711 ; args=(u'2011-12-28 23:24:22.344711',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.006) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.009) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.006) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.005) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.003) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:24:22 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.005) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:24:23 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.038) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.166973 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.166973')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.211813 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.211813')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.245182 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.245182')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.255815 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.255815')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.274953 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.274953')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.313180 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.313180')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.610421 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.610421')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.734905 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.734905')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.763059 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.763059')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.790873 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.790873')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:23.805913 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:23.805913')
Thu, 29 Dec 2011 00:24:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.023778 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.023778')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.052655 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.052655')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.081150 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.081150')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.113689 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.113689')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.136565 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.136565')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.164373 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.164373')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.179300 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.179300')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.191750 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.191750')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.236095 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.236095')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:24:24.267855 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:24:24.267855')
Thu, 29 Dec 2011 00:24:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:12.136224 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:12.136224')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.003) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = cart ; args=(u'cart',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:25:12.210627 ; args=(u'2011-12-22 00:25:12.210627',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:25:12.211924 ; args=(u'2011-12-28 00:25:12.211924',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:25:12.211929 ; args=(u'2011-12-28 23:25:12.211929',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.006) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:12 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 9  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 shop.templatetags.satchmo_cart DEBUG    sub details
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.004) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:12.586998 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:12.586998')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:12.642247 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:12.642247')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:12.862591 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:12.862591')
Thu, 29 Dec 2011 00:25:12 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:25.915178 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:25.915178')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.002) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = MINIMUM_ORDER ); args=(1, 1, 'PAYMENT', 'MINIMUM_ORDER')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.001) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_BILLING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_BILLING_DATA')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = REQUIRED_SHIPPING_DATA ); args=(1, 1, 'SHOP', 'REQUIRED_SHIPPING_DATA')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = ENFORCE_STATE ); args=(1, 1, 'SHOP', 'ENFORCE_STATE')
Thu, 29 Dec 2011 00:25:25 django.db.backends DEBUG    (0.000) SELECT "l10n_country"."id", "l10n_country"."iso2_code", "l10n_country"."name", "l10n_country"."printable_name", "l10n_country"."iso3_code", "l10n_country"."numcode", "l10n_country"."active", "l10n_country"."continent", "l10n_country"."admin_area" FROM "l10n_country" WHERE "l10n_country"."id" = 176 ; args=(176,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "l10n_adminarea" WHERE ("l10n_adminarea"."country_id" = 176  AND "l10n_adminarea"."active" = True ); args=(176, True)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "l10n_adminarea"."id", "l10n_adminarea"."country_id", "l10n_adminarea"."name", "l10n_adminarea"."abbrev", "l10n_adminarea"."active" FROM "l10n_adminarea" WHERE ("l10n_adminarea"."country_id" = 176  AND "l10n_adminarea"."active" = True ) ORDER BY "l10n_adminarea"."name" ASC; args=(176, True)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "l10n_adminarea" WHERE ("l10n_adminarea"."country_id" = 176  AND "l10n_adminarea"."active" = True ); args=(176, True)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "l10n_adminarea"."id", "l10n_adminarea"."country_id", "l10n_adminarea"."name", "l10n_adminarea"."abbrev", "l10n_adminarea"."active" FROM "l10n_adminarea" WHERE ("l10n_adminarea"."country_id" = 176  AND "l10n_adminarea"."active" = True ) ORDER BY "l10n_adminarea"."name" ASC; args=(176, True)
Thu, 29 Dec 2011 00:25:26 satchmo_store.contact.forms INFO     Sending form_init signal: <class 'satchmo_store.contact.forms.ContactInfoForm'>
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = LABEL ); args=(1, 1, 'PAYMENT_DUMMY', 'LABEL')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT_DUMMY  AND "livesettings_setting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT_DUMMY  AND "livesettings_longsetting"."key" = KEY ); args=(1, 1, 'PAYMENT_DUMMY', 'KEY')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = USE_DISCOUNTS ); args=(1, 1, 'PAYMENT', 'USE_DISCOUNTS')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (22, 9) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 22, 9, True)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = checkout ; args=(u'checkout',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:25:26.049140 ; args=(u'2011-12-22 00:25:26.049140',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:25:26.049155 ; args=(u'2011-12-28 00:25:26.049155',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:25:26.049160 ; args=(u'2011-12-28 23:25:26.049160',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PAYMENT  AND "livesettings_setting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PAYMENT  AND "livesettings_longsetting"."key" = COUNTRY_MATCH ); args=(1, 1, 'PAYMENT', 'COUNTRY_MATCH')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.003) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  LIMIT 1; args=('4ee6fc4704485eaf87768ded9d3a33b0',)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.001) UPDATE "django_session" SET "session_data" = YzZhN2JhMGM2YzQxMTFjZDZkMTdjMTMyNzQ2MTk4Y2YxOTU3OTMxMzqAAn1xAShVEl9hdXRoX3Vz
ZXJfYmFja2VuZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2Vu
ZFUKdGVzdGNvb2tpZVUGd29ya2VkcQJVDV9hdXRoX3VzZXJfaWRLAVUEY2FydEsDdS4=
, "expire_date" = 2012-01-12 00:25:26.270525 WHERE "django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0 ; args=('YzZhN2JhMGM2YzQxMTFjZDZkMTdjMTMyNzQ2MTk4Y2YxOTU3OTMxMzqAAn1xAShVEl9hdXRoX3Vz\nZXJfYmFja2VuZFUuc2F0Y2htb19zdG9yZS5hY2NvdW50cy5lbWFpbC1hdXRoLkVtYWlsQmFja2Vu\nZFUKdGVzdGNvb2tpZVUGd29ya2VkcQJVDV9hdXRoX3VzZXJfaWRLAVUEY2FydEsDdS4=\n', u'2012-01-12 00:25:26.270525', '4ee6fc4704485eaf87768ded9d3a33b0')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:26.393067 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:26.393067')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:26.618800 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:26.618800')
Thu, 29 Dec 2011 00:25:26 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:34 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:34.989487 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:34.989487')
Thu, 29 Dec 2011 00:25:34 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:34 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:25:35.033603 ; args=(u'2011-12-22 00:25:35.033603',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:25:35.033618 ; args=(u'2011-12-28 00:25:35.033618',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:25:35.033624 ; args=(u'2011-12-28 23:25:35.033624',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 2; args=(True, 1, True)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.009) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:35.352150 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:35.352150')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:35.381782 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:35.381782')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:35.565587 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:35.565587')
Thu, 29 Dec 2011 00:25:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:25:54 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:25:54.057101 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:25:54.057101')
Thu, 29 Dec 2011 00:25:54 django.db.backends DEBUG    (0.008) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:26:10.746972 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:26:10.746972')
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."slug" = neat-book  AND "product_product"."site_id" = 1 ); args=(True, u'neat-book', 1)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 3, True)
Thu, 29 Dec 2011 00:26:10 root         DEBUG    subtypes = ('ConfigurableProduct',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.002) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" INNER JOIN "product_product" T4 ON ("configurable_productvariation"."product_id" = T4."id") WHERE ("configurable_productvariation"."parent_id" = 3  AND T4."active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.001) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_option"."option_group_id", "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."site_id", "product_optiongroup"."name", "product_optiongroup"."description", "product_optiongroup"."sort_order", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_optiongroup" INNER JOIN "configurable_configurableproduct_option_group" ON ("product_optiongroup"."id" = "configurable_configurableproduct_option_group"."optiongroup_id") INNER JOIN "django_site" ON ("product_optiongroup"."site_id" = "django_site"."id") WHERE "configurable_configurableproduct_option_group"."configurableproduct_id" = 3  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "product_option"."option_group_id" = 5  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(5,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."sort_order" FROM "product_optiongroup" ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC; args=()
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE ("product_option"."option_group_id" IN (5) AND "product_option"."value" IN (S, M)) ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(5, 'S', 'M')
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_optiongroup"."id", "product_optiongroup"."site_id", "product_optiongroup"."name", "product_optiongroup"."description", "product_optiongroup"."sort_order" FROM "product_optiongroup" WHERE "product_optiongroup"."id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiongrouptranslation" WHERE ("product_optiongrouptranslation"."optiongroup_id" = 5  AND "product_optiongrouptranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiongrouptranslation" WHERE ("product_optiongrouptranslation"."optiongroup_id" = 5  AND "product_optiongrouptranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiongrouptranslation" WHERE ("product_optiongrouptranslation"."optiongroup_id" = 5  AND "product_optiongrouptranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:26:10 product.utils DEBUG    serialized: ({'id': 5, 'items': (<Option: 56mm>, <Option: 58mm>), 'name': u'rozmiar', 'description': u'Otwieracze'},)
Thu, 29 Dec 2011 00:26:10 product.utils DEBUG    Serialized Options neat-book: ({'id': 5, 'items': (<Option: 56mm>, <Option: 58mm>), 'name': u'rozmiar', 'description': u'Otwieracze'},)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NO_STOCK_CHECKOUT ); args=(1, 1, 'PRODUCT', 'NO_STOCK_CHECKOUT')
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_discount"."id", "product_discount"."site_id", "product_discount"."description", "product_discount"."code", "product_discount"."active", "product_discount"."amount", "product_discount"."percentage", "product_discount"."automatic", "product_discount"."allowedUses", "product_discount"."numUses", "product_discount"."minOrder", "product_discount"."startDate", "product_discount"."endDate", "product_discount"."shipping", "product_discount"."allValid" FROM "product_discount" LEFT OUTER JOIN "product_discount_valid_products" ON ("product_discount"."id" = "product_discount_valid_products"."discount_id") WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29  AND ("product_discount_valid_products"."product_id" IN (3) OR "product_discount"."allValid" = True )) ORDER BY "product_discount"."percentage" DESC; args=(True, True, '2011-12-29', '2011-12-29', 3, True)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productpricelookup" WHERE "product_productpricelookup"."parentid" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE "product_productpricelookup"."parentid" = 3  ORDER BY "product_productpricelookup"."price" DESC; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_soft ; args=(u'neat-book_soft',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 15  ORDER BY "product_productimage"."sort" ASC; args=(15,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_hard ; args=(u'neat-book_hard',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 14  ORDER BY "product_productimage"."sort" ASC; args=(14,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_hard ; args=(u'neat-book_hard',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 14  ORDER BY "product_productimage"."sort" ASC; args=(14,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book_tape ; args=(u'neat-book_tape',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 16  ORDER BY "product_productimage"."sort" ASC; args=(16,)
Thu, 29 Dec 2011 00:26:10 product.views DEBUG    finding product template: ['product/detail_configurableproduct.html', 'product/product.html']
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = neat-book ; args=(u'neat-book',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."parent_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:26:10.895513 ; args=(u'2011-12-22 00:26:10.895513',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:26:10.895543 ; args=(u'2011-12-28 00:26:10.895543',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:26:10.895563 ; args=(u'2011-12-28 23:26:10.895563',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:26:10 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.013) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 3  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 3  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE ("product_category"."is_active" = True  AND "product_category"."id" = 6 ); args=(True, 6)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC; args=(3,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productattribute" WHERE ("product_productattribute"."product_id" = 3  AND "product_productattribute"."languagecode" = pl-pl ); args=(3, 'pl-pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE ("product_productattribute"."product_id" = 3  AND ("product_productattribute"."languagecode" IS NULL OR "product_productattribute"."languagecode" =  )) ORDER BY "product_attributeoption"."sort_order" ASC; args=(3, '')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 12  AND "product_optiontranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 12  AND "product_optiontranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 12  AND "product_optiontranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 13  AND "product_optiontranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 13  AND "product_optiontranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_optiontranslation" WHERE ("product_optiontranslation"."option_id" = 13  AND "product_optiontranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_add_buttons ; args=(u'product_add_buttons',)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_form ; args=(u'product_form',)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = product_footer ; args=(u'product_footer',)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:26:11.383590 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:26:11.383590')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:26:11.405475 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:26:11.405475')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:26:11.430511 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:26:11.430511')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:26:11.459606 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:26:11.459606')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:26:11.623872 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:26:11.623872')
Thu, 29 Dec 2011 00:26:11 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:35.850456 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:35.850456')
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.005) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:29:35.917006 ; args=(u'2011-12-22 00:29:35.917006',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:29:35.917021 ; args=(u'2011-12-28 00:29:35.917021',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.005) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:29:35.917026 ; args=(u'2011-12-28 23:29:35.917026',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.002) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:29:35 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.007) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 2; args=(True, 1, True)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.389110 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.389110')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.402011 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.402011')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.427252 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.427252')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.009) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.446155 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.446155')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.461149 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.461149')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.470492 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.470492')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.509173 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.509173')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.593996 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.593996')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.609458 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.609458')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.644280 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.644280')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.658310 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.658310')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.679837 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.679837')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.698316 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.698316')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.722505 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.722505')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.754742 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.754742')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.773160 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.773160')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.789001 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.789001')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.005) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.829003 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.829003')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.848875 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.848875')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.008) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.879695 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.879695')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.893181 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.893181')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:29:36.909908 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:29:36.909908')
Thu, 29 Dec 2011 00:29:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:31:35.353955 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:31:35.353955')
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.007) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.003) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.001) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:31:35.541708 ; args=(u'2011-12-22 00:31:35.541708',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:31:35.541742 ; args=(u'2011-12-28 00:31:35.541742',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:31:35.541765 ; args=(u'2011-12-28 23:31:35.541765',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.002) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.004) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.009) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:35 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.004) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.004) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:31:36.694108 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:31:36.694108')
Thu, 29 Dec 2011 00:31:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:31:53.254597 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:31:53.254597')
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = MEASUREMENT_SYSTEM ); args=(1, 1, 'PRODUCT', 'MEASUREMENT_SYSTEM')
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 2  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 2  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 2  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 2  ORDER BY "product_attributeoption"."sort_order" ASC; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 2  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC; args=(2,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = price  AND "django_content_type"."app_label" = product ); args=('price', 'product')
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = productimage  AND "django_content_type"."app_label" = product ); args=('productimage', 'product')
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = product  AND "django_content_type"."app_label" = product ); args=('product', 'product')
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.002) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 2 ; args=(u'2',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:31:53.720193 ; args=(u'2011-12-22 00:31:53.720193',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:31:53.720212 ; args=(u'2011-12-28 00:31:53.720212',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:31:53.720219 ; args=(u'2011-12-28 23:31:53.720219',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.004) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:31:53 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass"; args=()
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:31:54 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = THUMBNAIL  AND "livesettings_setting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = THUMBNAIL  AND "livesettings_longsetting"."key" = IMAGE_QUALITY ); args=(1, 1, 'THUMBNAIL', 'IMAGE_QUALITY')
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:31:54.648056 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:31:54.648056')
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:31:54.753223 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:31:54.753223')
Thu, 29 Dec 2011 00:31:54 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:16.109767 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:16.109767')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 2  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 2  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 2  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE "product_category"."id" IN (6) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(6,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."sku" = KDL-S-01  AND "product_product"."site_id" = 1  AND NOT ("product_product"."id" = 2 )) LIMIT 1; args=(u'KDL-S-01', 1, 2)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."site_id" = 1  AND "product_product"."slug" = sopot-01  AND NOT ("product_product"."id" = 2 )) LIMIT 1; args=(1, u'sopot-01', 2)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 2  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE "product_product"."id" = 2  LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) UPDATE "product_product" SET "site_id" = 1, "name" = Kartka, "slug" = sopot-01, "sku" = KDL-S-01, "short_description" = , "description" = Really cool python shirt - One Size Fits All, "items_in_stock" = 0.000000, "meta" = , "date_added" = 2011-11-15, "active" = True, "featured" = True, "ordering" = 0, "weight" = NULL, "weight_units" = , "length" = NULL, "length_units" = , "width" = NULL, "width_units" = , "height" = NULL, "height_units" = , "total_sold" = 0.000000, "taxable" = False, "taxClass_id" = NULL, "shipclass" = DEFAULT WHERE "product_product"."id" = 2 ; args=(1, u'Kartka', u'sopot-01', u'KDL-S-01', u'', u'Really cool python shirt - One Size Fits All', u'0.000000', u'', '2011-11-15', True, True, 0, u'', u'', u'', u'', u'0.000000', False, u'DEFAULT', 2)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = sopot-01  AND "product_productpricelookup"."siteid" = 1 ); args=(u'sopot-01', 1)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (174); args=(174,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(2, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, None, None, sopot-01, 19.500000, 1.000000, True, True, 0.000000); args=(1, None, None, u'sopot-01', u'19.500000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."id", "product_product_category"."product_id", "product_product_category"."category_id" FROM "product_product_category" WHERE "product_product_category"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) DELETE FROM "product_product_category" WHERE "id" IN (10); args=(10,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_product_category"."category_id" FROM "product_product_category" WHERE ("product_product_category"."product_id" = 2  AND "product_product_category"."category_id" IN (6)); args=(2, 6)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) INSERT INTO "product_product_category" ("product_id", "category_id") VALUES (2, 6); args=(2, 6)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."from_product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."to_product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."from_product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."to_product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 2  ORDER BY "product_attributeoption"."sort_order" ASC; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 2  AND "product_price"."quantity" = 1  AND "product_price"."expires" IS NULL AND NOT ("product_price"."id" = 2 )); args=(2, Decimal('1'), 2)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_price" WHERE "product_price"."id" = 2  LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) UPDATE "product_price" SET "product_id" = 2, "price" = 19.500000, "quantity" = 1.000000, "expires" = NULL WHERE "product_price"."id" = 2 ; args=(2, u'19.500000', u'1.000000', 2)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = sopot-01  AND "product_productpricelookup"."siteid" = 1 ); args=(u'sopot-01', 1)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (204); args=(204,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(2, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, None, None, sopot-01, 19.500000, 1.000000, True, True, 0.000000); args=(1, None, None, u'sopot-01', u'19.500000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2011-12-29 00:32:16.337653, 1, 49, 2, Kartka, 2, Zmieniono featured i taxable Zmieniono price w Cena "19.50".); args=(u'2011-12-29 00:32:16.337653', 1, 49, u'2', u'Kartka', 2, u'Zmieniono featured i taxable Zmieniono price w Cena "19.50".')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:16.396732 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:16.396732')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:32:16.462789 ; args=(u'2011-12-22 00:32:16.462789',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:32:16.462804 ; args=(u'2011-12-28 00:32:16.462804',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:32:16.462809 ; args=(u'2011-12-28 23:32:16.462809',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.002) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:16 django.db.backends DEBUG    (0.004) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:32:17 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:17.021185 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:17.021185')
Thu, 29 Dec 2011 00:32:17 django.db.backends DEBUG    (0.006) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.084904 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.084904')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_DISPLAY ); args=(1, 1, 'PRODUCT', 'NUM_DISPLAY')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = RANDOM_FEATURED ); args=(1, 1, 'PRODUCT', 'RANDOM_FEATURED')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = PRODUCT  AND "livesettings_setting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = PRODUCT  AND "livesettings_longsetting"."key" = NUM_PAGINATED ); args=(1, 1, 'PRODUCT', 'NUM_PAGINATED')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:32:20.190166 ; args=(u'2011-12-22 00:32:20.190166',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:32:20.190181 ; args=(u'2011-12-28 00:32:20.190181',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:32:20.190186 ; args=(u'2011-12-28 23:32:20.190186',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 3; args=(True, 1, True)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.413160 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.413160')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.435465 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.435465')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.454693 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.454693')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.467345 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.467345')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.479911 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.479911')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.499242 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.499242')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.530732 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.530732')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.569745 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.569745')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.019) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.679411 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.679411')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.706641 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.706641')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.733140 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.733140')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.749243 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.749243')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.766565 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.766565')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.780769 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.780769')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.005) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.813025 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.813025')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.841588 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.841588')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.851282 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.851282')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.875206 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.875206')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.898829 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.898829')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.929770 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.929770')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.954297 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.954297')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:20.971550 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:20.971550')
Thu, 29 Dec 2011 00:32:20 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:32:21 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:32:21.004890 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:32:21.004890')
Thu, 29 Dec 2011 00:32:21 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:02.416767 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:02.416767')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:02.485566 ; args=(u'2011-12-22 00:33:02.485566',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:02.485585 ; args=(u'2011-12-28 00:33:02.485585',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:02.485593 ; args=(u'2011-12-28 23:33:02.485593',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 3; args=(True, 1, True)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.004) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:02 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.023) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:02.986793 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:02.986793')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.041009 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.041009')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.090653 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.090653')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.126812 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.126812')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.155950 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.155950')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.178356 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.178356')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.245813 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.245813')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.436993 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.436993')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.498110 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.498110')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.525915 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.525915')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.024) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.545426 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.545426')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.580592 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.580592')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.619463 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.619463')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.645834 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.645834')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.665748 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.665748')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.690680 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.690680')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.720164 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.720164')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.743833 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.743833')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.756982 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.756982')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.775113 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.775113')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.001) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.797699 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.797699')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.007) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.818087 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.818087')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:03.845699 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:03.845699')
Thu, 29 Dec 2011 00:33:03 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:09.230220 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:09.230220')
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 4  ORDER BY "product_attributeoption"."sort_order" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 4  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 4 ; args=(u'4',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:09.406161 ; args=(u'2011-12-22 00:33:09.406161',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:09.406176 ; args=(u'2011-12-28 00:33:09.406176',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:09.406182 ; args=(u'2011-12-28 23:33:09.406182',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass"; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.001) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:09 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:09.967004 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:09.967004')
Thu, 29 Dec 2011 00:33:09 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:10 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:10.005067 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:10.005067')
Thu, 29 Dec 2011 00:33:10 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:18.453159 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:18.453159')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.004) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE "product_category"."id" IN (6) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(6,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."sku" = robot-attack  AND "product_product"."site_id" = 1  AND NOT ("product_product"."id" = 4 )) LIMIT 1; args=(u'robot-attack', 1, 4)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."site_id" = 1  AND "product_product"."slug" = robot-attack  AND NOT ("product_product"."id" = 4 )) LIMIT 1; args=(1, u'robot-attack', 4)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 4  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.001) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE "product_product"."id" = 4  LIMIT 1; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.001) UPDATE "product_product" SET "site_id" = 1, "name" = Robots Attack!, "slug" = robot-attack, "sku" = robot-attack, "short_description" = , "description" = Robots try to take over the world., "items_in_stock" = 0.000000, "meta" = , "date_added" = 2011-11-15, "active" = True, "featured" = False, "ordering" = 0, "weight" = NULL, "weight_units" = , "length" = NULL, "length_units" = , "width" = NULL, "width_units" = , "height" = NULL, "height_units" = , "total_sold" = 0.000000, "taxable" = False, "taxClass_id" = NULL, "shipclass" = DEFAULT WHERE "product_product"."id" = 4 ; args=(1, u'Robots Attack!', u'robot-attack', u'robot-attack', u'', u'Robots try to take over the world.', u'0.000000', u'', '2011-11-15', True, False, 0, u'', u'', u'', u'', u'0.000000', False, u'DEFAULT', 4)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack', 1)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (187); args=(187,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.004) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, None, None, robot-attack, 7.990000, 1.000000, True, True, 0.000000); args=(1, None, None, u'robot-attack', u'7.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" INNER JOIN "product_product" T4 ON ("configurable_productvariation"."product_id" = T4."id") WHERE ("configurable_productvariation"."parent_id" = 4  AND T4."active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack_hard  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack_hard', 1)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (188); args=(188,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_option"."option_group_id" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, hard, 4, robot-attack_hard, 7.990000, 1.000000, True, True, 0.000000); args=(1, 'hard', 4, u'robot-attack_hard', u'7.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack_soft  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack_soft', 1)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (189); args=(189,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_option"."option_group_id" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, soft, 4, robot-attack_soft, 8.990000, 1.000000, True, True, 0.000000); args=(1, 'soft', 4, u'robot-attack_soft', u'8.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack_tape  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack_tape', 1)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (190); args=(190,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_option"."option_group_id" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, tape, 4, robot-attack_tape, 7.990000, 1.000000, True, True, 0.000000); args=(1, 'tape', 4, u'robot-attack_tape', u'7.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."id", "product_product_category"."product_id", "product_product_category"."category_id" FROM "product_product_category" WHERE "product_product_category"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) DELETE FROM "product_product_category" WHERE "id" IN (13); args=(13,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."category_id" FROM "product_product_category" WHERE ("product_product_category"."product_id" = 4  AND "product_product_category"."category_id" IN (6)); args=(4, 6)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) INSERT INTO "product_product_category" ("product_id", "category_id") VALUES (4, 6); args=(4, 6)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."from_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."to_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."from_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."to_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 4  ORDER BY "product_attributeoption"."sort_order" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2011-12-29 00:33:18.746266, 1, 49, 4, Robots Attack!, 2, Zmieniono taxable); args=(u'2011-12-29 00:33:18.746266', 1, 49, u'4', u'Robots Attack!', 2, u'Zmieniono taxable')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:18.791544 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:18.791544')
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:18.883084 ; args=(u'2011-12-22 00:33:18.883084',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:18.883102 ; args=(u'2011-12-28 00:33:18.883102',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:18.883111 ; args=(u'2011-12-28 23:33:18.883111',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.026) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:18 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.005) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.003) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.002) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.003) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:19.463276 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:19.463276')
Thu, 29 Dec 2011 00:33:19 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:23.317657 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:23.317657')
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.003) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 4  ORDER BY "product_attributeoption"."sort_order" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 4  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.004) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 4 ; args=(u'4',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:23.466515 ; args=(u'2011-12-22 00:33:23.466515',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:23.466614 ; args=(u'2011-12-28 00:33:23.466614',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:23.466619 ; args=(u'2011-12-28 23:33:23.466619',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.003) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.016) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass"; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:23 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:24 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:24.053485 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:24.053485')
Thu, 29 Dec 2011 00:33:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:24 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:24.370065 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:24.370065')
Thu, 29 Dec 2011 00:33:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:30.350398 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:30.350398')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 4  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE "product_category"."id" IN (6) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(6,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."sku" = robot-attack  AND "product_product"."site_id" = 1  AND NOT ("product_product"."id" = 4 )) LIMIT 1; args=(u'robot-attack', 1, 4)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."site_id" = 1  AND "product_product"."slug" = robot-attack  AND NOT ("product_product"."id" = 4 )) LIMIT 1; args=(1, u'robot-attack', 4)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 4  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE "product_product"."id" = 4  LIMIT 1; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) UPDATE "product_product" SET "site_id" = 1, "name" = Robots Attack!, "slug" = robot-attack, "sku" = robot-attack, "short_description" = , "description" = Robots try to take over the world., "items_in_stock" = 0.000000, "meta" = , "date_added" = 2011-11-15, "active" = True, "featured" = True, "ordering" = 0, "weight" = NULL, "weight_units" = , "length" = NULL, "length_units" = , "width" = NULL, "width_units" = , "height" = NULL, "height_units" = , "total_sold" = 0.000000, "taxable" = False, "taxClass_id" = NULL, "shipclass" = DEFAULT WHERE "product_product"."id" = 4 ; args=(1, u'Robots Attack!', u'robot-attack', u'robot-attack', u'', u'Robots try to take over the world.', u'0.000000', u'', '2011-11-15', True, True, 0, u'', u'', u'', u'', u'0.000000', False, u'DEFAULT', 4)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack', 1)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (205); args=(205,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, None, None, robot-attack, 7.990000, 1.000000, True, True, 0.000000); args=(1, None, None, u'robot-attack', u'7.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" INNER JOIN "product_product" T4 ON ("configurable_productvariation"."product_id" = T4."id") WHERE ("configurable_productvariation"."parent_id" = 4  AND T4."active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack_hard  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack_hard', 1)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (206); args=(206,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_option"."option_group_id" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, hard, 4, robot-attack_hard, 7.990000, 1.000000, True, True, 0.000000); args=(1, 'hard', 4, u'robot-attack_hard', u'7.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack_soft  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack_soft', 1)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (207); args=(207,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_option"."option_group_id" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, soft, 4, robot-attack_soft, 8.990000, 1.000000, True, True, 0.000000); args=(1, 'soft', 4, u'robot-attack_soft', u'8.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = robot-attack_tape  AND "product_productpricelookup"."siteid" = 1 ); args=(u'robot-attack_tape', 1)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) DELETE FROM "product_productpricelookup" WHERE "id" IN (208); args=(208,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(4, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."value" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_option"."option_group_id" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) INSERT INTO "product_productpricelookup" ("siteid", "key", "parentid", "productslug", "price", "quantity", "active", "discountable", "items_in_stock") VALUES (1, tape, 4, robot-attack_tape, 7.990000, 1.000000, True, True, 0.000000); args=(1, 'tape', 4, u'robot-attack_tape', u'7.990000', u'1.000000', True, True, u'0.000000')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) SELECT "product_product_category"."id", "product_product_category"."product_id", "product_product_category"."category_id" FROM "product_product_category" WHERE "product_product_category"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) DELETE FROM "product_product_category" WHERE "id" IN (26); args=(26,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."category_id" FROM "product_product_category" WHERE ("product_product_category"."product_id" = 4  AND "product_product_category"."category_id" IN (6)); args=(4, 6)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) INSERT INTO "product_product_category" ("product_id", "category_id") VALUES (4, 6); args=(4, 6)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."from_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."to_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."from_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."to_product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 4  ORDER BY "product_attributeoption"."sort_order" ASC; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2011-12-29 00:33:30.561671, 1, 49, 4, Robots Attack!, 2, Zmieniono featured i taxable); args=(u'2011-12-29 00:33:30.561671', 1, 49, u'4', u'Robots Attack!', 2, u'Zmieniono featured i taxable')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:30.598891 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:30.598891')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:30.651474 ; args=(u'2011-12-22 00:33:30.651474',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:30.651488 ; args=(u'2011-12-28 00:33:30.651488',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:30.651493 ; args=(u'2011-12-28 23:33:30.651493',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.003) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.004) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.004) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:30 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:31.257473 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:31.257473')
Thu, 29 Dec 2011 00:33:31 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:35.438029 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:35.438029')
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 21  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.006) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 21  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 21  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 21  ORDER BY "product_attributeoption"."sort_order" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 21  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.001) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 21  ORDER BY "product_productimage"."sort" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 21 ; args=(u'21',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:35.617456 ; args=(u'2011-12-22 00:33:35.617456',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:35.617472 ; args=(u'2011-12-28 00:33:35.617472',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:35.617477 ; args=(u'2011-12-28 23:33:35.617477',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.026) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.002) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass"; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:35 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.004) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:36.192316 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:36.192316')
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:36.229336 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:36.229336')
Thu, 29 Dec 2011 00:33:36 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:39 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:39.975575 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:39.975575')
Thu, 29 Dec 2011 00:33:39 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 21  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 21  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 21  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE "product_category"."id" IN (16) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."sku" = dj-rocks_l_w  AND "product_product"."site_id" = 1  AND NOT ("product_product"."id" = 21 )) LIMIT 1; args=(u'dj-rocks_l_w', 1, 21)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."site_id" = 1  AND "product_product"."slug" = dj-rocks_l_w  AND NOT ("product_product"."id" = 21 )) LIMIT 1; args=(1, u'dj-rocks_l_w', 21)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 21  ORDER BY "product_productimage"."sort" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE "product_product"."id" = 21  LIMIT 1; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) UPDATE "product_product" SET "site_id" = 1, "name" = Django Rocks shirt (L/W), "slug" = dj-rocks_l_w, "sku" = dj-rocks_l_w, "short_description" = , "description" = , "items_in_stock" = 0.000000, "meta" = , "date_added" = 2011-12-12, "active" = True, "featured" = False, "ordering" = 0, "weight" = NULL, "weight_units" = , "length" = NULL, "length_units" = , "width" = NULL, "width_units" = , "height" = NULL, "height_units" = , "total_sold" = 0.000000, "taxable" = False, "taxClass_id" = NULL, "shipclass" = DEFAULT WHERE "product_product"."id" = 21 ; args=(1, u'Django Rocks shirt (L/W)', u'dj-rocks_l_w', u'dj-rocks_l_w', u'', u'', u'0.000000', u'', '2011-12-12', True, False, 0, u'', u'', u'', u'', u'0.000000', False, u'DEFAULT', 21)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = dj-rocks_l_w  AND "product_productpricelookup"."siteid" = 1 ); args=(u'dj-rocks_l_w', 1)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(21, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."id", "product_product_category"."product_id", "product_product_category"."category_id" FROM "product_product_category" WHERE "product_product_category"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) DELETE FROM "product_product_category" WHERE "id" IN (22); args=(22,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."category_id" FROM "product_product_category" WHERE ("product_product_category"."product_id" = 21  AND "product_product_category"."category_id" IN (16)); args=(21, 16)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) INSERT INTO "product_product_category" ("product_id", "category_id") VALUES (21, 16); args=(21, 16)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."from_product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."to_product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."from_product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."to_product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 21  ORDER BY "product_attributeoption"."sort_order" ASC; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 21  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2011-12-29 00:33:40.230434, 1, 49, 21, Django Rocks shirt (L/W), 2, Zmieniono taxable); args=(u'2011-12-29 00:33:40.230434', 1, 49, u'21', u'Django Rocks shirt (L/W)', 2, u'Zmieniono taxable')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:40.320159 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:40.320159')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:40.434474 ; args=(u'2011-12-22 00:33:40.434474',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:40.434504 ; args=(u'2011-12-28 00:33:40.434504',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:40.434513 ; args=(u'2011-12-28 23:33:40.434513',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.002) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.003) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.004) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:40 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:41 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:41.021967 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:41.021967')
Thu, 29 Dec 2011 00:33:41 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:42.842407 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:42.842407')
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 22  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 22  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 22  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.001) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 22  ORDER BY "product_attributeoption"."sort_order" ASC; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 22  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC; args=(22,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = productattribute  AND "django_content_type"."app_label" = product ); args=('productattribute', 'product')
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 22 ; args=(u'22',)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:42.948996 ; args=(u'2011-12-22 00:33:42.948996',)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:42.949019 ; args=(u'2011-12-28 00:33:42.949019',)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:42.949025 ; args=(u'2011-12-28 23:33:42.949025',)
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:42 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.002) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.007) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.004) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass"; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" WHERE "product_attributeoption"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:43 satchmo_utils.widgets DEBUG    value: <class 'decimal.Decimal'>
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:43.467051 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:43.467051')
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:43.496151 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:43.496151')
Thu, 29 Dec 2011 00:33:43 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:44.919934 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:44.919934')
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:44 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:45.013893 ; args=(u'2011-12-22 00:33:45.013893',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:45.013908 ; args=(u'2011-12-28 00:33:45.013908',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:45.013913 ; args=(u'2011-12-28 23:33:45.013913',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.002) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.003) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.002) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.001) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:33:45 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:48.416606 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:48.416606')
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 20  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 20  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 20  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.004) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 20  ORDER BY "product_attributeoption"."sort_order" ASC; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 20  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 20  ORDER BY "product_productimage"."sort" ASC; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = 20 ; args=(u'20',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:33:48.603467 ; args=(u'2011-12-22 00:33:48.603467',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:33:48.603484 ; args=(u'2011-12-28 00:33:48.603484',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:33:48.603493 ; args=(u'2011-12-28 23:33:48.603493',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.006) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.006) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_taxclass"."id", "product_taxclass"."title", "product_taxclass"."description" FROM "product_taxclass"; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_attributeoption"."id", "product_attributeoption"."description", "product_attributeoption"."name", "product_attributeoption"."validation", "product_attributeoption"."sort_order", "product_attributeoption"."error_message" FROM "product_attributeoption" ORDER BY "product_attributeoption"."sort_order" ASC; args=()
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:48 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:33:49 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:49.097176 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:49.097176')
Thu, 29 Dec 2011 00:33:49 django.db.backends DEBUG    (0.005) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:33:49 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:33:49.137291 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:33:49.137291')
Thu, 29 Dec 2011 00:33:49 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:00.249738 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:00.249738')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "product_product_category" ON ("product_category"."id" = "product_product_category"."category_id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T5 ON ("product_category"."parent_id" = T5."id") WHERE "product_product_category"."product_id" = 20  ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_related_items" ON ("product_product"."id" = "product_product_related_items"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_related_items"."from_product_id" = 20  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "product_product_also_purchased" ON ("product_product"."id" = "product_product_also_purchased"."to_product_id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE "product_product_also_purchased"."from_product_id" = 20  ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE "product_category"."id" IN (6) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(6,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.002) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."sku" = dj-rocks_l_b  AND "product_product"."site_id" = 1  AND NOT ("product_product"."id" = 20 )) LIMIT 1; args=(u'dj-rocks_l_b', 1, 20)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE ("product_product"."site_id" = 1  AND "product_product"."slug" = dj-rocks_l_b  AND NOT ("product_product"."id" = 20 )) LIMIT 1; args=(1, u'dj-rocks_l_b', 20)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 20  ORDER BY "product_productimage"."sort" ASC; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT (1) AS "a" FROM "product_product" WHERE "product_product"."id" = 20  LIMIT 1; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) UPDATE "product_product" SET "site_id" = 1, "name" = Django Rocks shirt (L/B), "slug" = dj-rocks_l_b, "sku" = dj-rocks_l_b, "short_description" = , "description" = , "items_in_stock" = 0.000000, "meta" = , "date_added" = 2011-12-12, "active" = True, "featured" = True, "ordering" = 0, "weight" = NULL, "weight_units" = , "length" = NULL, "length_units" = , "width" = NULL, "width_units" = , "height" = NULL, "height_units" = , "total_sold" = 0.000000, "taxable" = False, "taxClass_id" = NULL, "shipclass" = DEFAULT WHERE "product_product"."id" = 20 ; args=(1, u'Django Rocks shirt (L/B)', u'dj-rocks_l_b', u'dj-rocks_l_b', u'', u'', u'0.000000', u'', '2011-12-12', True, True, 0, u'', u'', u'', u'', u'0.000000', False, u'DEFAULT', 20)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_productpricelookup"."id", "product_productpricelookup"."siteid", "product_productpricelookup"."key", "product_productpricelookup"."parentid", "product_productpricelookup"."productslug", "product_productpricelookup"."price", "product_productpricelookup"."quantity", "product_productpricelookup"."active", "product_productpricelookup"."discountable", "product_productpricelookup"."items_in_stock" FROM "product_productpricelookup" WHERE ("product_productpricelookup"."productslug" = dj-rocks_l_b  AND "product_productpricelookup"."siteid" = 1 ); args=(u'dj-rocks_l_b', 1)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires", "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_price" INNER JOIN "product_product" ON ("product_price"."product_id" = "product_product"."id") INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))) ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(20, '2011-12-29')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."id", "product_product_category"."product_id", "product_product_category"."category_id" FROM "product_product_category" WHERE "product_product_category"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.002) DELETE FROM "product_product_category" WHERE "id" IN (21); args=(21,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product_category"."category_id" FROM "product_product_category" WHERE ("product_product_category"."product_id" = 20  AND "product_product_category"."category_id" IN (6)); args=(20, 6)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) INSERT INTO "product_product_category" ("product_id", "category_id") VALUES (20, 6); args=(20, 6)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."from_product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product_related_items"."id", "product_product_related_items"."from_product_id", "product_product_related_items"."to_product_id" FROM "product_product_related_items" WHERE "product_product_related_items"."to_product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."from_product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.002) SELECT "product_product_also_purchased"."id", "product_product_also_purchased"."from_product_id", "product_product_also_purchased"."to_product_id" FROM "product_product_also_purchased" WHERE "product_product_also_purchased"."to_product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_productattribute"."id", "product_productattribute"."product_id", "product_productattribute"."languagecode", "product_productattribute"."option_id", "product_productattribute"."value" FROM "product_productattribute" INNER JOIN "product_attributeoption" ON ("product_productattribute"."option_id" = "product_attributeoption"."id") WHERE "product_productattribute"."product_id" = 20  ORDER BY "product_attributeoption"."sort_order" ASC; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE "product_price"."product_id" = 20  ORDER BY "product_price"."expires" ASC, "product_price"."quantity" DESC; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) INSERT INTO "django_admin_log" ("action_time", "user_id", "content_type_id", "object_id", "object_repr", "action_flag", "change_message") VALUES (2011-12-29 00:34:00.424429, 1, 49, 20, Django Rocks shirt (L/B), 2, Zmieniono featured i taxable); args=(u'2011-12-29 00:34:00.424429', 1, 49, u'20', u'Django Rocks shirt (L/B)', 2, u'Zmieniono featured i taxable')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:00.683484 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:00.683484')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product"; args=()
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=()
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass", "django_site"."id", "django_site"."domain", "django_site"."name" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") ORDER BY "django_site"."domain" ASC; args=()
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" = product ; args=(u'product',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:34:00.742551 ; args=(u'2011-12-22 00:34:00.742551',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:34:00.742569 ; args=(u'2011-12-28 00:34:00.742569',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:34:00.742575 ; args=(u'2011-12-28 23:34:00.742575',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "auth_message"."id", "auth_message"."user_id", "auth_message"."message" FROM "auth_message" WHERE "auth_message"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.002) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 5 ; args=(5,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 5  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(5, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 6 ; args=(6,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 6  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(6, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 7 ; args=(7,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 7  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(7, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 8  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(8, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 10 ; args=(10,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 10  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(10, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 13 ; args=(13,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 13  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(13, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 14 ; args=(14,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.005) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 14  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(14, '2011-12-29')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 14  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(14,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 15 ; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 15  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(15, '2011-12-29')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 15  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(15,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 16 ; args=(16,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:00 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 16  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(16, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 16  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(16,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 17 ; args=(17,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 17  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(17, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 17  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(17,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 18 ; args=(18,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.002) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 18  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(18, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 18  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(18,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 19 ; args=(19,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.001) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 19  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(19, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 19  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(19,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 21 ; args=(21,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 21  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(21, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 23 ; args=(23,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 23  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(23, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 23  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(23,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 24 ; args=(24,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_price" WHERE ("product_price"."product_id" = 24  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL))); args=(24, '2011-12-29')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "product_option"."id", "product_option"."option_group_id", "product_option"."name", "product_option"."value", "product_option"."price_change", "product_option"."sort_order" FROM "product_option" INNER JOIN "configurable_productvariation_options" ON ("product_option"."id" = "configurable_productvariation_options"."option_id") INNER JOIN "product_optiongroup" ON ("product_option"."option_group_id" = "product_optiongroup"."id") WHERE "configurable_productvariation_options"."productvariation_id" = 24  ORDER BY "product_optiongroup"."sort_order" ASC, "product_optiongroup"."name" ASC, "product_option"."sort_order" ASC, "product_option"."name" ASC; args=(24,)
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:01.268502 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:01.268502')
Thu, 29 Dec 2011 00:34:01 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.300401 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.300401')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:34:05.340198 ; args=(u'2011-12-22 00:34:05.340198',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:34:05.340213 ; args=(u'2011-12-28 00:34:05.340213',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:34:05.340219 ; args=(u'2011-12-28 23:34:05.340219',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.001) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.001) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 5; args=(True, 1, True)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 20  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 20  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 20  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 20  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 20  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.002) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 4  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 4  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.003) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 4  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.613185 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.613185')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.014) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.017) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.652285 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.652285')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.681224 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.681224')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.705702 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.705702')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.008) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.025) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.731477 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.731477')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.015) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.762711 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.762711')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.793050 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.793050')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.807546 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.807546')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:05.983438 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:05.983438')
Thu, 29 Dec 2011 00:34:05 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.060906 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.060906')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.080466 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.080466')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.118150 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.118150')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.137102 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.137102')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.152270 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.152270')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.167768 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.167768')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.184909 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.184909')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.218756 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.218756')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.002) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.012) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.247663 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.247663')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.267004 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.267004')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.303567 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.303567')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.013) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.318657 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.318657')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.021) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.335718 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.335718')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.361059 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.361059')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.383354 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.383354')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:34:06.400331 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:34:06.400331')
Thu, 29 Dec 2011 00:34:06 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:23.569585 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:23.569585')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_product" WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ); args=(True, 1, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "shop_config"."site_id", "shop_config"."store_name", "shop_config"."store_description", "shop_config"."store_email", "shop_config"."street1", "shop_config"."street2", "shop_config"."city", "shop_config"."state", "shop_config"."postal_code", "shop_config"."country_id", "shop_config"."phone", "shop_config"."in_country_only", "shop_config"."sales_country_id" FROM "shop_config" WHERE "shop_config"."site_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "contact_contact"."id", "contact_contact"."title", "contact_contact"."first_name", "contact_contact"."last_name", "contact_contact"."user_id", "contact_contact"."role_id", "contact_contact"."organization_id", "contact_contact"."dob", "contact_contact"."email", "contact_contact"."notes", "contact_contact"."create_date" FROM "contact_contact" WHERE "contact_contact"."user_id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "shop_cart"."id", "shop_cart"."site_id", "shop_cart"."desc", "shop_cart"."date_time_created", "shop_cart"."customer_id" FROM "shop_cart" WHERE "shop_cart"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_discount" WHERE ("product_discount"."active" = True  AND "product_discount"."automatic" = True  AND "product_discount"."site_id" = 1  AND "product_discount"."startDate" <= 2011-12-29  AND "product_discount"."endDate" > 2011-12-29 ); args=(True, True, 1, '2011-12-29', '2011-12-29')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.008) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.005) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."slug" =  ; args=(u'',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "shop_order"."total" FROM "shop_order" WHERE "shop_order"."status" = New ; args=('New',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-22 00:35:23.672995 ; args=(u'2011-12-22 00:35:23.672995',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 00:35:23.673047 ; args=(u'2011-12-28 00:35:23.673047',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cart" WHERE "shop_cart"."date_time_created" >= 2011-12-28 23:35:23.673076 ; args=(u'2011-12-28 23:35:23.673076',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact"; args=()
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "contact_contact" WHERE "contact_contact"."create_date" >= 2011-12-22 ; args=('2011-12-22',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_head ; args=(u'page_head',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_head ; args=(u'satchmo_toolbar.page_head',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = page_top ; args=(u'page_top',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_plugin"."id", "app_plugins_plugin"."point_id", "app_plugins_plugin"."label", "app_plugins_plugin"."index", "app_plugins_plugin"."registered", "app_plugins_plugin"."status", "app_plugins_plugin"."required", "app_plugins_plugin"."template", "app_plugins_plugin"."_order" FROM "app_plugins_plugin" WHERE "app_plugins_plugin"."label" = satchmo_toolbar.page_top ; args=(u'satchmo_toolbar.page_top',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = satchmo_toolbar ; args=(u'satchmo_toolbar',)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "shop_cartitem"."id", "shop_cartitem"."cart_id", "shop_cartitem"."product_id", "shop_cartitem"."quantity" FROM "shop_cartitem" WHERE "shop_cartitem"."cart_id" = 3  ORDER BY "shop_cartitem"."id" ASC; args=(3,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = SHOP  AND "livesettings_setting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = SHOP  AND "livesettings_longsetting"."key" = CART_QTY ); args=(1, 1, 'SHOP', 'CART_QTY')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.003) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" WHERE "product_product"."id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.006) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 9 ; args=(9,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 9  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(9, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "shop_cartitemdetails" WHERE "shop_cartitemdetails"."cartitem_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") LEFT OUTER JOIN "product_category" T3 ON ("product_category"."parent_id" = T3."id") WHERE ("product_category"."is_active" = True  AND "product_category"."site_id" = 1  AND T3."id" IS NULL) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(True, 1)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 23  AND "product_category"."is_active" = True ); args=(23, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(23, u'pl-pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(23, u'pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 23  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(23, u'pl%')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ); args=(20, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 20  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 20  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(20, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 21  AND "product_category"."is_active" = True ); args=(21, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(21, u'pl-pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(21, u'pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 21  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(21, u'pl%')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 22  AND "product_category"."is_active" = True ); args=(22, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 22  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 24  AND "product_category"."is_active" = True ); args=(24, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(24, u'pl-pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(24, u'pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.004) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 24  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(24, u'pl%')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ); args=(1, True)
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(1, u'pl-pl')
Thu, 29 Dec 2011 00:35:23 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(1, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 1  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(1, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 1  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(1, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 2  AND "product_category"."is_active" = True ); args=(2, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 2  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ); args=(4, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 4  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 4  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(4, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 10  AND "product_category"."is_active" = True ); args=(10, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(10, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(10, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.002) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 10  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(10, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 9  AND "product_category"."is_active" = True ); args=(9, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(9, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(9, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 9  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(9, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 19  AND "product_category"."is_active" = True ); args=(19, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(19, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(19, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 19  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(19, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ); args=(8, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(8, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(8, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 8  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(8, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 8  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(8, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 16  AND "product_category"."is_active" = True ); args=(16, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(16, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(16, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 16  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(16, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 18  AND "product_category"."is_active" = True ); args=(18, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(18, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(18, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 18  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(18, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 17  AND "product_category"."is_active" = True ); args=(17, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 8 ; args=(8,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(17, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(17, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 17  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(17, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ); args=(12, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(12, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(12, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 12  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(12, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 12  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(12, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 15  AND "product_category"."is_active" = True ); args=(15, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(15, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(15, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 15  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(15, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 14  AND "product_category"."is_active" = True ); args=(14, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(14, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(14, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 14  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(14, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 13  AND "product_category"."is_active" = True ); args=(13, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 12 ; args=(12,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(13, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(13, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 13  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(13, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 11  AND "product_category"."is_active" = True ); args=(11, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(11, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(11, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 11  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(11, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 7  AND "product_category"."is_active" = True ); args=(7, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(7, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(7, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 7  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(7, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ); args=(3, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 3  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" LEFT OUTER JOIN "product_category" T2 ON ("product_category"."parent_id" = T2."id") INNER JOIN "django_site" ON ("product_category"."site_id" = "django_site"."id") WHERE ("product_category"."parent_id" = 3  AND "product_category"."is_active" = True ) ORDER BY "django_site"."domain" ASC, "product_category"."parent_id" ASC, "product_category"."ordering" ASC, "product_category"."name" ASC; args=(3, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 6  AND "product_category"."is_active" = True ); args=(6, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(6, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(6, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 6  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(6, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_category" WHERE ("product_category"."parent_id" = 5  AND "product_category"."is_active" = True ); args=(5, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_category"."id", "product_category"."site_id", "product_category"."name", "product_category"."slug", "product_category"."parent_id", "product_category"."meta", "product_category"."description", "product_category"."ordering", "product_category"."is_active" FROM "product_category" WHERE "product_category"."id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(5, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(5, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_categorytranslation" WHERE ("product_categorytranslation"."category_id" = 5  AND "product_categorytranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(5, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "app_plugins_pluginpoint"."id", "app_plugins_pluginpoint"."label", "app_plugins_pluginpoint"."index", "app_plugins_pluginpoint"."registered", "app_plugins_pluginpoint"."status" FROM "app_plugins_pluginpoint" WHERE "app_plugins_pluginpoint"."label" = sidebar_secondary_bottom ; args=(u'sidebar_secondary_bottom',)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_product"."id", "product_product"."site_id", "product_product"."name", "product_product"."slug", "product_product"."sku", "product_product"."short_description", "product_product"."description", "product_product"."items_in_stock", "product_product"."meta", "product_product"."date_added", "product_product"."active", "product_product"."featured", "product_product"."ordering", "product_product"."weight", "product_product"."weight_units", "product_product"."length", "product_product"."length_units", "product_product"."width", "product_product"."width_units", "product_product"."height", "product_product"."height_units", "product_product"."total_sold", "product_product"."taxable", "product_product"."taxClass_id", "product_product"."shipclass" FROM "product_product" INNER JOIN "django_site" ON ("product_product"."site_id" = "django_site"."id") WHERE ("product_product"."active" = True  AND "product_product"."site_id" = 1  AND "product_product"."featured" = True ) ORDER BY "django_site"."domain" ASC, "product_product"."ordering" ASC, "product_product"."name" ASC LIMIT 5; args=(True, 1, True)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 3  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(3, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(3, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 3  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(3, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = TAX  AND "livesettings_setting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = TAX  AND "livesettings_longsetting"."key" = DEFAULT_VIEW_TAX ); args=(1, 1, 'TAX', 'DEFAULT_VIEW_TAX')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 3 ; args=(3,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 3  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(3, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 22  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(22, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(22, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 22  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(22, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 22 ; args=(22,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 22  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(22, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 20  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 20  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 20  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(20, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 20  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(20, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 20  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(20, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.002) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 20 ; args=(20,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 20  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(20, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 2  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(2, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(2, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.001) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 2  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(2, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 2 ; args=(2,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 2  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(2, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_productimage" WHERE "product_productimage"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_productimage"."id", "product_productimage"."product_id", "product_productimage"."picture", "product_productimage"."caption", "product_productimage"."sort" FROM "product_productimage" WHERE "product_productimage"."product_id" = 4  ORDER BY "product_productimage"."sort" ASC LIMIT 1; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 4  AND "product_producttranslation"."languagecode" LIKE pl-pl ESCAPE '\' ); args=(4, u'pl-pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 4  AND "product_producttranslation"."languagecode" LIKE pl ESCAPE '\' ); args=(4, u'pl')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT COUNT(*) FROM "product_producttranslation" WHERE ("product_producttranslation"."product_id" = 4  AND "product_producttranslation"."languagecode" LIKE pl% ESCAPE '\' ); args=(4, u'pl%')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_configurableproduct"."product_id", "configurable_configurableproduct"."create_subs" FROM "configurable_configurableproduct" WHERE "configurable_configurableproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "configurable_productvariation"."product_id", "configurable_productvariation"."parent_id" FROM "configurable_productvariation" WHERE "configurable_productvariation"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "custom_customproduct"."product_id", "custom_customproduct"."downpayment", "custom_customproduct"."deferred_shipping" FROM "custom_customproduct" WHERE "custom_customproduct"."product_id" = 4 ; args=(4,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "product_price"."id", "product_price"."product_id", "product_price"."price", "product_price"."quantity", "product_price"."expires" FROM "product_price" WHERE ("product_price"."product_id" = 4  AND NOT ("product_price"."expires" IS NOT NULL AND ("product_price"."expires" < 2011-12-29  AND "product_price"."expires" IS NOT NULL)) AND "product_price"."quantity" <= 1 ) ORDER BY "product_price"."price" ASC, "product_price"."quantity" DESC, "product_price"."expires" ASC LIMIT 1; args=(4, '2011-12-29', Decimal('1'))
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_setting"."id", "livesettings_setting"."site_id", "livesettings_setting"."group", "livesettings_setting"."key", "livesettings_setting"."value" FROM "livesettings_setting" WHERE ("livesettings_setting"."site_id" = 1  AND "livesettings_setting"."site_id" = 1  AND "livesettings_setting"."group" = GOOGLE  AND "livesettings_setting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "livesettings_longsetting"."id", "livesettings_longsetting"."site_id", "livesettings_longsetting"."group", "livesettings_longsetting"."key", "livesettings_longsetting"."value" FROM "livesettings_longsetting" WHERE ("livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."site_id" = 1  AND "livesettings_longsetting"."group" = GOOGLE  AND "livesettings_longsetting"."key" = ANALYTICS ); args=(1, 1, 'GOOGLE', 'ANALYTICS')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.325735 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.325735')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.018) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.345675 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.345675')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.003) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.011) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.376078 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.376078')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.392414 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.392414')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.005) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.406155 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.406155')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.416925 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.416925')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.694911 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.694911')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.779757 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.779757')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.798017 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.798017')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.833178 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.833178')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.854314 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.854314')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.875781 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.875781')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.006) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.888076 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.888076')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.903486 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.903486')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.943323 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.943323')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.010) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.975885 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.975885')
Thu, 29 Dec 2011 00:35:24 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:24.998308 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:24.998308')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.009) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.019044 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.019044')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.014) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.048713 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.048713')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.084949 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.084949')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.007) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.099050 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.099050')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.116537 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.116537')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.003) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.133899 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.133899')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.004) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.173831 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.173831')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.004) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.008) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = 4ee6fc4704485eaf87768ded9d3a33b0  AND "django_session"."expire_date" > 2011-12-29 00:35:25.202673 ); args=('4ee6fc4704485eaf87768ded9d3a33b0', u'2011-12-29 00:35:25.202673')
Thu, 29 Dec 2011 00:35:25 django.db.backends DEBUG    (0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
